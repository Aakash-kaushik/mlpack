<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="cf_8hpp" kind="file" language="C++">
    <compoundname>cf.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="neighbor__search_8hpp" local="no">mlpack/methods/neighbor_search/neighbor_search.hpp</includes>
    <includes refid="amf_8hpp" local="no">mlpack/methods/amf/amf.hpp</includes>
    <includes refid="nmf__als_8hpp" local="no">mlpack/methods/amf/update_rules/nmf_als.hpp</includes>
    <includes refid="simple__residue__termination_8hpp" local="no">mlpack/methods/amf/termination_policies/simple_residue_termination.hpp</includes>
    <includes refid="no__normalization_8hpp" local="no">mlpack/methods/cf/normalization/no_normalization.hpp</includes>
    <includes refid="nmf__method_8hpp" local="no">mlpack/methods/cf/decomposition_policies/nmf_method.hpp</includes>
    <includes refid="lmetric__search_8hpp" local="no">mlpack/methods/cf/neighbor_search_policies/lmetric_search.hpp</includes>
    <includes refid="average__interpolation_8hpp" local="no">mlpack/methods/cf/interpolation_policies/average_interpolation.hpp</includes>
    <includes local="no">set</includes>
    <includes local="no">map</includes>
    <includes local="no">iostream</includes>
    <includes local="yes">cf_impl.hpp</includes>
    <includedby refid="bias__svd_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp</includedby>
    <includedby refid="cf__model_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp</includedby>
    <includedby refid="regularized__svd_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/regularized_svd/regularized_svd.hpp</includedby>
    <includedby refid="svdplusplus_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp</includedby>
    <incdepgraph>
      <node id="59">
        <label>list</label>
      </node>
      <node id="111">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="103">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>atomic</label>
      </node>
      <node id="138">
        <label>hilbert_r_tree_split_impl.hpp</label>
      </node>
      <node id="39">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="15">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="58">
        <label>iomanip</label>
      </node>
      <node id="110">
        <label>queue</label>
      </node>
      <node id="166">
        <label>typedef.hpp</label>
        <link refid="methods_2neighbor__search_2typedef_8hpp"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>rectangle_tree/r_star_tree_split.hpp</label>
        <link refid="r__star__tree__split_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="162">
        <label>neighbor_search_rules.hpp</label>
        <link refid="neighbor__search__rules_8hpp"/>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>r_tree_split_impl.hpp</label>
      </node>
      <node id="73">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="131">
        <label>r_star_tree_descent_heuristic_impl.hpp</label>
      </node>
      <node id="148">
        <label>rectangle_tree/minimal_splits_number_sweep.hpp</label>
        <link refid="minimal__splits__number__sweep_8hpp"/>
        <childnode refid="149" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>r_tree_split.hpp</label>
        <link refid="r__tree__split_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>r_plus_tree_descent_heuristic_impl.hpp</label>
      </node>
      <node id="86">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="158">
        <label>rectangle_tree/typedef.hpp</label>
        <link refid="core_2tree_2rectangle__tree_2typedef_8hpp"/>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="149">
        <label>minimal_splits_number_sweep_impl.hpp</label>
      </node>
      <node id="121">
        <label>r_tree_descent_heuristic_impl.hpp</label>
      </node>
      <node id="169">
        <label>mlpack/methods/amf/amf.hpp</label>
        <link refid="amf_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>rectangle_tree/discrete_hilbert_value.hpp</label>
        <link refid="discrete__hilbert__value_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cstdint</label>
      </node>
      <node id="139">
        <label>rectangle_tree/hilbert_r_tree_auxiliary_information.hpp</label>
        <link refid="hilbert__r__tree__auxiliary__information_8hpp"/>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>rectangle_tree/single_tree_traverser.hpp</label>
        <link refid="rectangle__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="23">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="112">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="157">
        <label>rectangle_tree/traits.hpp</label>
        <link refid="rectangle__tree_2traits_8hpp"/>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>nearest_neighbor_sort_impl.hpp</label>
      </node>
      <node id="49">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="87">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="46">
        <label>arma_config.hpp</label>
      </node>
      <node id="78">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>mlpack/core/util/log.hpp</label>
        <link refid="log_8hpp"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="159">
        <label>neighbor_search_stat.hpp</label>
        <link refid="neighbor__search__stat_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="36">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="3">
        <label>cmath</label>
      </node>
      <node id="68">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="11">
        <label>stdexcept</label>
      </node>
      <node id="106">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>string</label>
      </node>
      <node id="92">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="43">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>map</label>
      </node>
      <node id="153">
        <label>r_plus_plus_tree_auxiliary_information_impl.hpp</label>
      </node>
      <node id="107">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="122">
        <label>no_auxiliary_information.hpp</label>
        <link refid="no__auxiliary__information_8hpp"/>
      </node>
      <node id="95">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>rectangle_tree/rectangle_tree.hpp</label>
        <link refid="rectangle__tree_2rectangle__tree_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cfloat</label>
      </node>
      <node id="180">
        <label>mlpack/methods/cf/normalization/no_normalization.hpp</label>
        <link refid="no__normalization_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>r_plus_plus_tree_descent_heuristic_impl.hpp</label>
      </node>
      <node id="145">
        <label>rectangle_tree/r_plus_tree_split_policy.hpp</label>
        <link refid="r__plus__tree__split__policy_8hpp"/>
      </node>
      <node id="35">
        <label>boost/variant.hpp</label>
      </node>
      <node id="51">
        <label>prefixedoutstream_impl.hpp</label>
      </node>
      <node id="63">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="19">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="42">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="52">
        <label>nulloutstream.hpp</label>
        <link refid="nulloutstream_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="21">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="179">
        <label>amf_impl.hpp</label>
      </node>
      <node id="41">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="126">
        <label>rectangle_tree/dual_tree_traverser.hpp</label>
        <link refid="rectangle__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="164">
        <label>neighbor_search_rules_impl.hpp</label>
      </node>
      <node id="146">
        <label>rectangle_tree/minimal_coverage_sweep.hpp</label>
        <link refid="minimal__coverage__sweep_8hpp"/>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="168">
        <label>furthest_neighbor_sort_impl.hpp</label>
      </node>
      <node id="83">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>random</label>
      </node>
      <node id="77">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="70">
        <label>range_impl.hpp</label>
      </node>
      <node id="134">
        <label>rectangle_tree/x_tree_auxiliary_information.hpp</label>
        <link refid="x__tree__auxiliary__information_8hpp"/>
      </node>
      <node id="123">
        <label>rectangle_tree_impl.hpp</label>
      </node>
      <node id="105">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="172">
        <label>mlpack/methods/amf/update_rules/svd_batch_learning.hpp</label>
        <link refid="svd__batch__learning_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cstdio</label>
      </node>
      <node id="183">
        <label>mlpack/methods/cf/neighbor_search_policies/lmetric_search.hpp</label>
        <link refid="lmetric__search_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="114">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="137">
        <label>rectangle_tree/hilbert_r_tree_split.hpp</label>
        <link refid="hilbert__r__tree__split_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>mlpack/methods/amf/update_rules/nmf_mult_dist.hpp</label>
        <link refid="nmf__mult__dist_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>tuple</label>
      </node>
      <node id="17">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="133">
        <label>x_tree_split_impl.hpp</label>
      </node>
      <node id="98">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>r_plus_tree_split_impl.hpp</label>
      </node>
      <node id="34">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>prefixedoutstream.hpp</label>
        <link refid="prefixedoutstream_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>hilbert_r_tree_descent_heuristic_impl.hpp</label>
      </node>
      <node id="66">
        <label>vector</label>
      </node>
      <node id="97">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="54">
        <label>streambuf</label>
      </node>
      <node id="154">
        <label>rectangle_tree/r_plus_plus_tree_descent_heuristic.hpp</label>
        <link refid="r__plus__plus__tree__descent__heuristic_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="178">
        <label>mlpack/methods/amf/termination_policies/simple_tolerance_termination.hpp</label>
        <link refid="simple__tolerance__termination_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>utility</label>
      </node>
      <node id="37">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="28">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="67">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="175">
        <label>mlpack/methods/amf/init_rules/random_init.hpp</label>
        <link refid="amf_2init__rules_2random__init_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>sort_policies/nearest_neighbor_sort.hpp</label>
        <link refid="nearest__neighbor__sort_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>hilbert_r_tree_auxiliary_information_impl.hpp</label>
      </node>
      <node id="25">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>r_star_tree_split_impl.hpp</label>
      </node>
      <node id="55">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="143">
        <label>rectangle_tree/r_plus_tree_descent_heuristic.hpp</label>
        <link refid="r__plus__tree__descent__heuristic_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>mlpack/methods/neighbor_search/neighbor_search.hpp</label>
        <link refid="neighbor__search_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>rectangle_tree/x_tree_split.hpp</label>
        <link refid="x__tree__split_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>rectangle_tree/hilbert_r_tree_descent_heuristic.hpp</label>
        <link refid="hilbert__r__tree__descent__heuristic_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>r_tree_descent_heuristic.hpp</label>
        <link refid="r__tree__descent__heuristic_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cstdlib</label>
      </node>
      <node id="174">
        <label>mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp</label>
        <link refid="svd__complete__incremental__learning_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="165">
        <label>neighbor_search_impl.hpp</label>
      </node>
      <node id="4">
        <label>cctype</label>
      </node>
      <node id="53">
        <label>iostream</label>
      </node>
      <node id="186">
        <label>cf_impl.hpp</label>
      </node>
      <node id="127">
        <label>rectangle_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="125">
        <label>rectangle_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="167">
        <label>sort_policies/furthest_neighbor_sort.hpp</label>
        <link refid="furthest__neighbor__sort_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="150">
        <label>rectangle_tree/r_plus_tree_split.hpp</label>
        <link refid="r__plus__tree__split_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
      </node>
      <node id="171">
        <label>mlpack/methods/amf/update_rules/nmf_als.hpp</label>
        <link refid="nmf__als_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>unordered_map</label>
      </node>
      <node id="6">
        <label>climits</label>
      </node>
      <node id="61">
        <label>mutex</label>
      </node>
      <node id="184">
        <label>mlpack/methods/cf/interpolation_policies/average_interpolation.hpp</label>
        <link refid="average__interpolation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>chrono</label>
      </node>
      <node id="163">
        <label>mlpack/core/tree/traversal_info.hpp</label>
        <link refid="traversal__info_8hpp"/>
      </node>
      <node id="75">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="64">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="94">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="62">
        <label>thread</label>
      </node>
      <node id="76">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="173">
        <label>mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp</label>
        <link refid="svd__incomplete__incremental__learning_8hpp"/>
      </node>
      <node id="93">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="84">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="182">
        <label>mlpack/methods/amf/termination_policies/max_iteration_termination.hpp</label>
        <link refid="max__iteration__termination_8hpp"/>
      </node>
      <node id="177">
        <label>mlpack/methods/amf/termination_policies/simple_residue_termination.hpp</label>
        <link refid="simple__residue__termination_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>type_traits</label>
      </node>
      <node id="176">
        <label>mlpack/methods/amf/init_rules/random_acol_init.hpp</label>
        <link refid="random__acol__init_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>discrete_hilbert_value_impl.hpp</label>
      </node>
      <node id="185">
        <label>set</label>
      </node>
      <node id="109">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="115">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>mlpack/core/math/range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="38">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="156">
        <label>rectangle_tree/r_plus_plus_tree_split_policy.hpp</label>
        <link refid="r__plus__plus__tree__split__policy_8hpp"/>
      </node>
      <node id="79">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="116">
        <label>mlpack/core/tree/rectangle_tree.hpp</label>
        <link refid="rectangle__tree_8hpp"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>minimal_coverage_sweep_impl.hpp</label>
      </node>
      <node id="10">
        <label>cstring</label>
      </node>
      <node id="29">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="82">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="99">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="80">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="152">
        <label>rectangle_tree/r_plus_plus_tree_auxiliary_information.hpp</label>
        <link refid="r__plus__plus__tree__auxiliary__information_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="71">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>mlpack/methods/cf/decomposition_policies/nmf_method.hpp</label>
        <link refid="nmf__method_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>rectangle_tree/r_star_tree_descent_heuristic.hpp</label>
        <link refid="r__star__tree__descent__heuristic_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp</label>
        <link refid="cf__model_8hpp"/>
      </node>
      <node id="6">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp</label>
        <link refid="regularized__svd__method_8hpp"/>
      </node>
      <node id="3">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/bias_svd_method.hpp</label>
        <link refid="bias__svd__method_8hpp"/>
      </node>
      <node id="1">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp</label>
        <link refid="svdplusplus_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp</label>
        <link refid="bias__svd_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svdplusplus_method.hpp</label>
        <link refid="svdplusplus__method_8hpp"/>
      </node>
      <node id="5">
        <label>/home/aakash/mlpack/src/mlpack/methods/regularized_svd/regularized_svd.hpp</label>
        <link refid="regularized__svd_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1cf_1_1CFType" prot="public">mlpack::cf::CFType</innerclass>
    <innerclass refid="structmlpack_1_1cf_1_1CFType_1_1CandidateCmp" prot="private">mlpack::cf::CFType::CandidateCmp</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1cf">mlpack::cf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mudit Raj Gupta </para>
</simplesect>
<simplesect kind="author"><para>Sumedh Ghaisas</para>
</simplesect>
Collaborative filtering.</para>
<para>Defines the CFType class to perform collaborative filtering on the specified data set using alternating least squares (ALS).</para>
<para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_CF_CF_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_CF_CF_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="neighbor__search_8hpp" kindref="compound">mlpack/methods/neighbor_search/neighbor_search.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="amf_8hpp" kindref="compound">mlpack/methods/amf/amf.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmf__als_8hpp" kindref="compound">mlpack/methods/amf/update_rules/nmf_als.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="simple__residue__termination_8hpp" kindref="compound">mlpack/methods/amf/termination_policies/simple_residue_termination.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="no__normalization_8hpp" kindref="compound">mlpack/methods/cf/normalization/no_normalization.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmf__method_8hpp" kindref="compound">mlpack/methods/cf/decomposition_policies/nmf_method.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lmetric__search_8hpp" kindref="compound">mlpack/methods/cf/neighbor_search_policies/lmetric_search.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="average__interpolation_8hpp" kindref="compound">mlpack/methods/cf/interpolation_policies/average_interpolation.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="33" refid="namespacemlpack_1_1cf" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cf<sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DecompositionPolicy<sp/>=<sp/><ref refid="classmlpack_1_1cf_1_1NMFPolicy" kindref="compound">NMFPolicy</ref>,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NormalizationType<sp/>=<sp/><ref refid="classmlpack_1_1cf_1_1NoNormalization" kindref="compound">NoNormalization</ref>&gt;</highlight></codeline>
<codeline lineno="70" refid="classmlpack_1_1cf_1_1CFType" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1cf_1_1CFType" kindref="compound">CFType</ref></highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77" refid="classmlpack_1_1cf_1_1CFType_1a1ede74b2271ab9e82f8db2dbc27adf13" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFType_1a1ede74b2271ab9e82f8db2dbc27adf13" kindref="member">CFType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numUsersForSimilarity<sp/>=<sp/>5,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="104" refid="classmlpack_1_1cf_1_1CFType_1a6451c7152ccb66da74f6e98b1db7ec8e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFType_1a6451c7152ccb66da74f6e98b1db7ec8e" kindref="member">CFType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecompositionPolicy&amp;<sp/>decomposition<sp/>=<sp/>DecompositionPolicy(),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numUsersForSimilarity<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>1000,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minResidue<sp/>=<sp/>1e-5,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classmlpack_1_1cf_1_1CFType_1a6c7cc418bd1efca587106fbe387534ee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFType_1a6c7cc418bd1efca587106fbe387534ee" kindref="member">Train</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecompositionPolicy&amp;<sp/>decomposition,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>1000,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minResidue<sp/>=<sp/>1e-5,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classmlpack_1_1cf_1_1CFType_1a521c130dfede7ce4f794e478aa50463f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFType_1a521c130dfede7ce4f794e478aa50463f" kindref="member">Train</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecompositionPolicy&amp;<sp/>decomposition,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>1000,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minResidue<sp/>=<sp/>1e-5,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classmlpack_1_1cf_1_1CFType_1ab907e6b81f7b38e654d185077603466f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFType_1ab907e6b81f7b38e654d185077603466f" kindref="member">NumUsersForSimilarity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1Log_1af8dd463e0db2840410fe6b1165429d5b" kindref="member">Log::Warn</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CFType::NumUsersForSimilarity():<sp/>invalid<sp/>value<sp/>(&lt;<sp/>1)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ignored.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;numUsersForSimilarity<sp/>=<sp/>num;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classmlpack_1_1cf_1_1CFType_1a90464e33b6300c307c7d4741f3c5f791" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFType_1a90464e33b6300c307c7d4741f3c5f791" kindref="member">NumUsersForSimilarity</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="160"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numUsersForSimilarity;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classmlpack_1_1cf_1_1CFType_1a6abdfd96dee1459e1640a6d6e1d1eec4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFType_1a6abdfd96dee1459e1640a6d6e1d1eec4" kindref="member">Rank</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rankValue)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rank<sp/>=<sp/>rankValue;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="classmlpack_1_1cf_1_1CFType_1afe1447c5e7fa184cbf19ced57a50b7b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFType_1afe1447c5e7fa184cbf19ced57a50b7b6" kindref="member">Rank</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="172"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rank;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classmlpack_1_1cf_1_1CFType_1a2312b615423d95028bd2211c61a7d74d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecompositionPolicy&amp;<sp/><ref refid="classmlpack_1_1cf_1_1CFType_1a2312b615423d95028bd2211c61a7d74d" kindref="member">Decomposition</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decomposition;<sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classmlpack_1_1cf_1_1CFType_1a9b45ccc1241c683ffaaf1be745b438d0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat&amp;<sp/><ref refid="classmlpack_1_1cf_1_1CFType_1a9b45ccc1241c683ffaaf1be745b438d0" kindref="member">CleanedData</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cleanedData;<sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classmlpack_1_1cf_1_1CFType_1a85300f3ff2c7f809a8dbe783f833e7b1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NormalizationType&amp;<sp/><ref refid="classmlpack_1_1cf_1_1CFType_1a85300f3ff2c7f809a8dbe783f833e7b1" kindref="member">Normalization</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>normalization;<sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NeighborSearchPolicy<sp/>=<sp/><ref refid="namespacemlpack_1_1cf_1a3817765250ba3485d25a82ef2da8b9b2" kindref="member">EuclideanSearch</ref>,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InterpolationPolicy<sp/>=<sp/><ref refid="classmlpack_1_1cf_1_1AverageInterpolation" kindref="compound">AverageInterpolation</ref>&gt;</highlight></codeline>
<codeline lineno="198" refid="classmlpack_1_1cf_1_1CFType_1aea00d8c8dfad713dd5542e450d633d5a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFType_1aea00d8c8dfad713dd5542e450d633d5a" kindref="member">GetRecommendations</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numRecs,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>recommendations);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NeighborSearchPolicy<sp/>=<sp/><ref refid="namespacemlpack_1_1cf_1a3817765250ba3485d25a82ef2da8b9b2" kindref="member">EuclideanSearch</ref>,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InterpolationPolicy<sp/>=<sp/><ref refid="classmlpack_1_1cf_1_1AverageInterpolation" kindref="compound">AverageInterpolation</ref>&gt;</highlight></codeline>
<codeline lineno="215" refid="classmlpack_1_1cf_1_1CFType_1a07ca697e6ba5cf1b7056071914e708a1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFType_1a07ca697e6ba5cf1b7056071914e708a1" kindref="member">GetRecommendations</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numRecs,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>recommendations,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Col&lt;size_t&gt;&amp;<sp/>users);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classmlpack_1_1cf_1_1CFType_1a6606a419e5db3e8218a4f0c6b1c81258" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFType_1a6606a419e5db3e8218a4f0c6b1c81258" kindref="member">CleanData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,<sp/>arma::sp_mat&amp;<sp/>cleanedData);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NeighborSearchPolicy<sp/>=<sp/><ref refid="namespacemlpack_1_1cf_1a3817765250ba3485d25a82ef2da8b9b2" kindref="member">EuclideanSearch</ref>,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InterpolationPolicy<sp/>=<sp/><ref refid="classmlpack_1_1cf_1_1AverageInterpolation" kindref="compound">AverageInterpolation</ref>&gt;</highlight></codeline>
<codeline lineno="235" refid="classmlpack_1_1cf_1_1CFType_1a40809f18b938075bb471c5f32e6ec57c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFType_1a40809f18b938075bb471c5f32e6ec57c" kindref="member">Predict</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>user,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>item)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NeighborSearchPolicy<sp/>=<sp/><ref refid="namespacemlpack_1_1cf_1a3817765250ba3485d25a82ef2da8b9b2" kindref="member">EuclideanSearch</ref>,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InterpolationPolicy<sp/>=<sp/><ref refid="classmlpack_1_1cf_1_1AverageInterpolation" kindref="compound">AverageInterpolation</ref>&gt;</highlight></codeline>
<codeline lineno="256" refid="classmlpack_1_1cf_1_1CFType_1a66e488fde0b5aab4a0c3aab318382bd3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFType_1a66e488fde0b5aab4a0c3aab318382bd3" kindref="member">Predict</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>combinations,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>predictions)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="263" refid="classmlpack_1_1cf_1_1CFType_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFType_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numUsersForSimilarity;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>DecompositionPolicy<sp/>decomposition;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>arma::sp_mat<sp/>cleanedData;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>NormalizationType<sp/>normalization;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;double,<sp/>size_t&gt;<sp/>Candidate;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CandidateCmp<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Candidate&amp;<sp/>c1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Candidate&amp;<sp/>c2)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c1.first<sp/>&gt;<sp/>c2.first;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="287"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>CFType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation<sp/>of<sp/>templated<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cf_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp"/>
  </compounddef>
</doxygen>
