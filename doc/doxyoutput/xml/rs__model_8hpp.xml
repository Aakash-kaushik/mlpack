<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="rs__model_8hpp" kind="file" language="C++">
    <compoundname>rs_model.hpp</compoundname>
    <includes refid="binary__space__tree_8hpp" local="no">mlpack/core/tree/binary_space_tree.hpp</includes>
    <includes refid="cover__tree_8hpp" local="no">mlpack/core/tree/cover_tree.hpp</includes>
    <includes refid="rectangle__tree_8hpp" local="no">mlpack/core/tree/rectangle_tree.hpp</includes>
    <includes refid="octree_8hpp" local="no">mlpack/core/tree/octree.hpp</includes>
    <includes refid="range__search_8hpp" local="yes">range_search.hpp</includes>
    <includes local="yes">rs_model_impl.hpp</includes>
    <includedby refid="range__search__utils_8hpp" local="no">/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp</includedby>
    <incdepgraph>
      <node id="60">
        <label>list</label>
      </node>
      <node id="109">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="101">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>atomic</label>
      </node>
      <node id="146">
        <label>hilbert_r_tree_split_impl.hpp</label>
      </node>
      <node id="173">
        <label>range_search.hpp</label>
        <link refid="range__search_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="16">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="59">
        <label>iomanip</label>
      </node>
      <node id="108">
        <label>queue</label>
      </node>
      <node id="136">
        <label>rectangle_tree/r_star_tree_split.hpp</label>
        <link refid="r__star__tree__split_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>r_tree_split_impl.hpp</label>
      </node>
      <node id="71">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="175">
        <label>range_search_impl.hpp</label>
      </node>
      <node id="139">
        <label>r_star_tree_descent_heuristic_impl.hpp</label>
      </node>
      <node id="156">
        <label>rectangle_tree/minimal_splits_number_sweep.hpp</label>
        <link refid="minimal__splits__number__sweep_8hpp"/>
        <childnode refid="157" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>r_tree_split.hpp</label>
        <link refid="r__tree__split_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
      </node>
      <node id="152">
        <label>r_plus_tree_descent_heuristic_impl.hpp</label>
      </node>
      <node id="84">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="166">
        <label>rectangle_tree/typedef.hpp</label>
        <link refid="core_2tree_2rectangle__tree_2typedef_8hpp"/>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="157">
        <label>minimal_splits_number_sweep_impl.hpp</label>
      </node>
      <node id="129">
        <label>r_tree_descent_heuristic_impl.hpp</label>
      </node>
      <node id="25">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>rectangle_tree/discrete_hilbert_value.hpp</label>
        <link refid="discrete__hilbert__value_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cstdint</label>
      </node>
      <node id="147">
        <label>rectangle_tree/hilbert_r_tree_auxiliary_information.hpp</label>
        <link refid="hilbert__r__tree__auxiliary__information_8hpp"/>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>rectangle_tree/single_tree_traverser.hpp</label>
        <link refid="rectangle__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="24">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="110">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="165">
        <label>rectangle_tree/traits.hpp</label>
        <link refid="rectangle__tree_2traits_8hpp"/>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="85">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="47">
        <label>arma_config.hpp</label>
      </node>
      <node id="76">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>mlpack/core/util/log.hpp</label>
        <link refid="log_8hpp"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>octree/octree.hpp</label>
        <link refid="octree_2octree_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="94">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="37">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="4">
        <label>cmath</label>
      </node>
      <node id="66">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="12">
        <label>stdexcept</label>
      </node>
      <node id="104">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>cover_tree/typedef.hpp</label>
        <link refid="core_2tree_2cover__tree_2typedef_8hpp"/>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>string</label>
      </node>
      <node id="90">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="44">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>map</label>
      </node>
      <node id="161">
        <label>r_plus_plus_tree_auxiliary_information_impl.hpp</label>
      </node>
      <node id="105">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="130">
        <label>no_auxiliary_information.hpp</label>
        <link refid="no__auxiliary__information_8hpp"/>
      </node>
      <node id="176">
        <label>rs_model_impl.hpp</label>
      </node>
      <node id="93">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>rectangle_tree/rectangle_tree.hpp</label>
        <link refid="rectangle__tree_2rectangle__tree_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cfloat</label>
      </node>
      <node id="163">
        <label>r_plus_plus_tree_descent_heuristic_impl.hpp</label>
      </node>
      <node id="153">
        <label>rectangle_tree/r_plus_tree_split_policy.hpp</label>
        <link refid="r__plus__tree__split__policy_8hpp"/>
      </node>
      <node id="36">
        <label>boost/variant.hpp</label>
      </node>
      <node id="52">
        <label>prefixedoutstream_impl.hpp</label>
      </node>
      <node id="64">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="120">
        <label>cover_tree/dual_tree_traverser.hpp</label>
        <link refid="cover__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="43">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="53">
        <label>nulloutstream.hpp</label>
        <link refid="nulloutstream_8hpp"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>cover_tree/cover_tree.hpp</label>
        <link refid="cover__tree_2cover__tree_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="22">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="42">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="134">
        <label>rectangle_tree/dual_tree_traverser.hpp</label>
        <link refid="rectangle__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>rectangle_tree/minimal_coverage_sweep.hpp</label>
        <link refid="minimal__coverage__sweep_8hpp"/>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="81">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>mlpack/core/tree/cover_tree.hpp</label>
        <link refid="cover__tree_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>random</label>
      </node>
      <node id="75">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="68">
        <label>range_impl.hpp</label>
      </node>
      <node id="142">
        <label>rectangle_tree/x_tree_auxiliary_information.hpp</label>
        <link refid="x__tree__auxiliary__information_8hpp"/>
      </node>
      <node id="131">
        <label>rectangle_tree_impl.hpp</label>
      </node>
      <node id="103">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="9">
        <label>cstdio</label>
      </node>
      <node id="79">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="112">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="145">
        <label>rectangle_tree/hilbert_r_tree_split.hpp</label>
        <link refid="hilbert__r__tree__split_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
      <node id="174">
        <label>range_search_stat.hpp</label>
        <link refid="range__search__stat_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>tuple</label>
      </node>
      <node id="18">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="141">
        <label>x_tree_split_impl.hpp</label>
      </node>
      <node id="96">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="159">
        <label>r_plus_tree_split_impl.hpp</label>
      </node>
      <node id="35">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>prefixedoutstream.hpp</label>
        <link refid="prefixedoutstream_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>hilbert_r_tree_descent_heuristic_impl.hpp</label>
      </node>
      <node id="115">
        <label>cover_tree/first_point_is_root.hpp</label>
        <link refid="first__point__is__root_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="55">
        <label>streambuf</label>
      </node>
      <node id="118">
        <label>cover_tree/single_tree_traverser.hpp</label>
        <link refid="cover__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="162">
        <label>rectangle_tree/r_plus_plus_tree_descent_heuristic.hpp</label>
        <link refid="r__plus__plus__tree__descent__heuristic_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>utility</label>
      </node>
      <node id="38">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="29">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="2">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>hilbert_r_tree_auxiliary_information_impl.hpp</label>
      </node>
      <node id="26">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>cover_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="117">
        <label>cover_tree_impl.hpp</label>
      </node>
      <node id="137">
        <label>r_star_tree_split_impl.hpp</label>
      </node>
      <node id="56">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="151">
        <label>rectangle_tree/r_plus_tree_descent_heuristic.hpp</label>
        <link refid="r__plus__tree__descent__heuristic_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>rectangle_tree/x_tree_split.hpp</label>
        <link refid="x__tree__split_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>rectangle_tree/hilbert_r_tree_descent_heuristic.hpp</label>
        <link refid="hilbert__r__tree__descent__heuristic_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/rs_model.hpp</label>
        <link refid="rs__model_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>r_tree_descent_heuristic.hpp</label>
        <link refid="r__tree__descent__heuristic_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cstdlib</label>
      </node>
      <node id="5">
        <label>cctype</label>
      </node>
      <node id="54">
        <label>iostream</label>
      </node>
      <node id="135">
        <label>rectangle_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="133">
        <label>rectangle_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="169">
        <label>octree_impl.hpp</label>
      </node>
      <node id="158">
        <label>rectangle_tree/r_plus_tree_split.hpp</label>
        <link refid="r__plus__tree__split_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>unordered_map</label>
      </node>
      <node id="167">
        <label>mlpack/core/tree/octree.hpp</label>
        <link refid="octree_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>cover_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="7">
        <label>climits</label>
      </node>
      <node id="172">
        <label>octree/dual_tree_traverser.hpp</label>
        <link refid="octree_2dual__tree__traverser_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>mutex</label>
      </node>
      <node id="58">
        <label>chrono</label>
      </node>
      <node id="73">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="65">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="92">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="63">
        <label>thread</label>
      </node>
      <node id="74">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="82">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="45">
        <label>type_traits</label>
      </node>
      <node id="150">
        <label>discrete_hilbert_value_impl.hpp</label>
      </node>
      <node id="107">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>octree/traits.hpp</label>
        <link refid="octree_2traits_8hpp"/>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="113">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>mlpack/core/math/range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="39">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="164">
        <label>rectangle_tree/r_plus_plus_tree_split_policy.hpp</label>
        <link refid="r__plus__plus__tree__split__policy_8hpp"/>
      </node>
      <node id="77">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="124">
        <label>mlpack/core/tree/rectangle_tree.hpp</label>
        <link refid="rectangle__tree_8hpp"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>minimal_coverage_sweep_impl.hpp</label>
      </node>
      <node id="11">
        <label>cstring</label>
      </node>
      <node id="30">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="80">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="97">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="78">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="171">
        <label>octree/single_tree_traverser.hpp</label>
        <link refid="octree_2single__tree__traverser_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>rectangle_tree/r_plus_plus_tree_auxiliary_information.hpp</label>
        <link refid="r__plus__plus__tree__auxiliary__information_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="69">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>cover_tree/traits.hpp</label>
        <link refid="cover__tree_2traits_8hpp"/>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>rectangle_tree/r_star_tree_descent_heuristic.hpp</label>
        <link refid="r__star__tree__descent__heuristic_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp</label>
        <link refid="range__search__utils_8hpp"/>
      </node>
      <node id="1">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/rs_model.hpp</label>
        <link refid="rs__model_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1range_1_1LeafSizeRSWrapper" prot="public">mlpack::range::LeafSizeRSWrapper</innerclass>
    <innerclass refid="classmlpack_1_1range_1_1RSModel" prot="public">mlpack::range::RSModel</innerclass>
    <innerclass refid="classmlpack_1_1range_1_1RSWrapper" prot="public">mlpack::range::RSWrapper</innerclass>
    <innerclass refid="classmlpack_1_1range_1_1RSWrapperBase" prot="public">mlpack::range::RSWrapperBase</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1range">mlpack::range</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Curtin</para>
</simplesect>
This is a model for range search. It is useful in that it provides an easy way to serialize a model, abstracts away the different types of trees, and also reflects the RangeSearch API and automatically directs to the right tree types.</para>
<para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_RANGE_SEARCH_RS_MODEL_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_RANGE_SEARCH_RS_MODEL_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="binary__space__tree_8hpp" kindref="compound">mlpack/core/tree/binary_space_tree.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cover__tree_8hpp" kindref="compound">mlpack/core/tree/cover_tree.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="rectangle__tree_8hpp" kindref="compound">mlpack/core/tree/rectangle_tree.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="octree_8hpp" kindref="compound">mlpack/core/tree/octree.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="range__search_8hpp" kindref="compound">range_search.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">range<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classmlpack_1_1range_1_1RSWrapperBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1range_1_1RSWrapperBase" kindref="compound">RSWrapperBase</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39" refid="classmlpack_1_1range_1_1RSWrapperBase_1a3f8141df2cfd91fd784febc7a67b6fbb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSWrapperBase_1a3f8141df2cfd91fd784febc7a67b6fbb" kindref="member">RSWrapperBase</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classmlpack_1_1range_1_1RSWrapperBase_1a94063ea7b8e448ead466995134bac09d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapperBase" kindref="compound">RSWrapperBase</ref>*<sp/><ref refid="classmlpack_1_1range_1_1RSWrapperBase_1a94063ea7b8e448ead466995134bac09d" kindref="member">Clone</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classmlpack_1_1range_1_1RSWrapperBase_1a44c650799934a2609163e5de74f88b2c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapperBase_1a44c650799934a2609163e5de74f88b2c" kindref="member">~RSWrapperBase</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classmlpack_1_1range_1_1RSWrapperBase_1a2effd31755e4ae5f85e14ed94e7fab8e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/><ref refid="classmlpack_1_1range_1_1RSWrapperBase_1a2effd31755e4ae5f85e14ed94e7fab8e" kindref="member">Dataset</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classmlpack_1_1range_1_1RSWrapperBase_1a66d221dd25418821f76bb66bd9c98bce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapperBase_1a66d221dd25418821f76bb66bd9c98bce" kindref="member">SingleMode</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54" refid="classmlpack_1_1range_1_1RSWrapperBase_1a5e231427eaa7eeb695cfd1b324858dfb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1range_1_1RSWrapperBase_1a5e231427eaa7eeb695cfd1b324858dfb" kindref="member">SingleMode</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classmlpack_1_1range_1_1RSWrapperBase_1a76bdb2e751927f38210e7111c15cba08" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapperBase_1a76bdb2e751927f38210e7111c15cba08" kindref="member">Naive</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59" refid="classmlpack_1_1range_1_1RSWrapperBase_1af7b975b8b5777ab38621d5d7ccd90aae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1range_1_1RSWrapperBase_1af7b975b8b5777ab38621d5d7ccd90aae" kindref="member">Naive</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classmlpack_1_1range_1_1RSWrapperBase_1aed03cfde627d1e971acb1d36d9abd29c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapperBase_1aed03cfde627d1e971acb1d36d9abd29c" kindref="member">Train</ref>(arma::mat&amp;&amp;<sp/>referenceSet,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>leafSize)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classmlpack_1_1range_1_1RSWrapperBase_1a2b6da2dcc42f52a690dade0749453fdc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapperBase_1a2b6da2dcc42f52a690dade0749453fdc" kindref="member">Search</ref>(arma::mat&amp;&amp;<sp/>querySet,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1math_1_1RangeType" kindref="compound">math::Range</ref>&amp;<sp/>range,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;size_t&gt;&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;&amp;<sp/>distances,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>leafSize)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classmlpack_1_1range_1_1RSWrapperBase_1a6dbe6c455e8b22c78913c91fb8f7f5cf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapperBase_1a6dbe6c455e8b22c78913c91fb8f7f5cf" kindref="member">Search</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1math_1_1RangeType" kindref="compound">math::Range</ref>&amp;<sp/>range,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;size_t&gt;&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;&amp;<sp/>distances)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMetricType,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeStatType,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMatType&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TreeType&gt;</highlight></codeline>
<codeline lineno="86" refid="classmlpack_1_1range_1_1RSWrapper" refkind="compound"><highlight class="normal">class<sp/><ref refid="classmlpack_1_1range_1_1RSWrapper" kindref="compound">RSWrapper</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapperBase" kindref="compound">RSWrapperBase</ref></highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90" refid="classmlpack_1_1range_1_1RSWrapper_1a38b7562aad750f7908c3a488cb7610f5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSWrapper_1a38b7562aad750f7908c3a488cb7610f5" kindref="member">RSWrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleMode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>naive)<sp/>:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rs(singleMode,<sp/>naive)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>else<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classmlpack_1_1range_1_1RSWrapper_1a84a6ccc6add7d5bf6a055fb02d16a375" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapper" kindref="compound">RSWrapper</ref>*<sp/><ref refid="classmlpack_1_1range_1_1RSWrapper_1a84a6ccc6add7d5bf6a055fb02d16a375" kindref="member">Clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapper" kindref="compound">RSWrapper</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classmlpack_1_1range_1_1RSWrapper_1a8de0259aa7d469f236f7523eadf0da99" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapper_1a8de0259aa7d469f236f7523eadf0da99" kindref="member">~RSWrapper</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classmlpack_1_1range_1_1RSWrapper_1aff320b9a86b77a150e630c01d5888273" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/><ref refid="classmlpack_1_1range_1_1RSWrapper_1aff320b9a86b77a150e630c01d5888273" kindref="member">Dataset</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rs.ReferenceSet();<sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classmlpack_1_1range_1_1RSWrapper_1a7477b3e8499a6158bbe177e7f30d4947" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapper_1a7477b3e8499a6158bbe177e7f30d4947" kindref="member">SingleMode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rs.SingleMode();<sp/>}</highlight></codeline>
<codeline lineno="109" refid="classmlpack_1_1range_1_1RSWrapper_1adadacd63ddeadf138d834b1fdc632773" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1range_1_1RSWrapper_1adadacd63ddeadf138d834b1fdc632773" kindref="member">SingleMode</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rs.SingleMode();<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classmlpack_1_1range_1_1RSWrapper_1a343230e7d7344e3f7d5f5f2eb89cf2c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapper_1a343230e7d7344e3f7d5f5f2eb89cf2c5" kindref="member">Naive</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rs.Naive();<sp/>}</highlight></codeline>
<codeline lineno="114" refid="classmlpack_1_1range_1_1RSWrapper_1af7d397adca3f411b4e2d2f977b280ce6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1range_1_1RSWrapper_1af7d397adca3f411b4e2d2f977b280ce6" kindref="member">Naive</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rs.Naive();<sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classmlpack_1_1range_1_1RSWrapper_1aab4ee663331b914daad05f6f7c22ee9b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapper_1aab4ee663331b914daad05f6f7c22ee9b" kindref="member">Train</ref>(arma::mat&amp;&amp;<sp/>referenceSet,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>leafSize<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classmlpack_1_1range_1_1RSWrapper_1a8113f151289737cd35dd9eaf38e32eb8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapper_1a8113f151289737cd35dd9eaf38e32eb8" kindref="member">Search</ref>(arma::mat&amp;&amp;<sp/>querySet,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1math_1_1RangeType" kindref="compound">math::Range</ref>&amp;<sp/>range,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;size_t&gt;&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;&amp;<sp/>distances,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>leafSize<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classmlpack_1_1range_1_1RSWrapper_1af3b8f6601dfb1c6fff4d3fc554eea5c4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapper_1af3b8f6601dfb1c6fff4d3fc554eea5c4" kindref="member">Search</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1math_1_1RangeType" kindref="compound">math::Range</ref>&amp;<sp/>range,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;size_t&gt;&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;&amp;<sp/>distances);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="137" refid="classmlpack_1_1range_1_1RSWrapper_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapper_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(rs));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143" refid="classmlpack_1_1range_1_1RSWrapper_1ab9397958488bbe4e474b155d36e992a0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch" kindref="compound">RangeSearch&lt;metric::EuclideanDistance, arma::mat, TreeType&gt;</ref><sp/><ref refid="classmlpack_1_1range_1_1RSWrapper_1ab9397958488bbe4e474b155d36e992a0" kindref="member">RSType</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="classmlpack_1_1range_1_1RSWrapper_1ab0014108c4cd07c4515c4160814f693b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch" kindref="compound">RSType</ref><sp/><ref refid="classmlpack_1_1range_1_1RSWrapper_1ab0014108c4cd07c4515c4160814f693b" kindref="member">rs</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMetricType,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeStatType,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMatType&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TreeType&gt;</highlight></codeline>
<codeline lineno="157" refid="classmlpack_1_1range_1_1LeafSizeRSWrapper" refkind="compound"><highlight class="normal">class<sp/><ref refid="classmlpack_1_1range_1_1LeafSizeRSWrapper" kindref="compound">LeafSizeRSWrapper</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapper" kindref="compound">RSWrapper</ref>&lt;TreeType&gt;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="162" refid="classmlpack_1_1range_1_1LeafSizeRSWrapper_1afb741816b0eaa685220eb4cbbe56339d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1LeafSizeRSWrapper_1afb741816b0eaa685220eb4cbbe56339d" kindref="member">LeafSizeRSWrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleMode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>naive)<sp/>:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSWrapper" kindref="compound">RSWrapper</ref>&lt;TreeType&gt;(singleMode,<sp/>naive)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>else<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classmlpack_1_1range_1_1LeafSizeRSWrapper_1aa157df925f299caba9e5dc7e68e388bc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1LeafSizeRSWrapper_1aa157df925f299caba9e5dc7e68e388bc" kindref="member">~LeafSizeRSWrapper</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classmlpack_1_1range_1_1LeafSizeRSWrapper_1adaf440057041622abd2d1d527b627d25" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1LeafSizeRSWrapper" kindref="compound">LeafSizeRSWrapper</ref>*<sp/><ref refid="classmlpack_1_1range_1_1LeafSizeRSWrapper_1adaf440057041622abd2d1d527b627d25" kindref="member">Clone</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="173"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1LeafSizeRSWrapper" kindref="compound">LeafSizeRSWrapper</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="classmlpack_1_1range_1_1LeafSizeRSWrapper_1a6804dc4af719ba3162ad5f15dbe5553d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1LeafSizeRSWrapper_1a6804dc4af719ba3162ad5f15dbe5553d" kindref="member">Train</ref>(arma::mat&amp;&amp;<sp/>referenceSet,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>leafSize);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classmlpack_1_1range_1_1LeafSizeRSWrapper_1a0b90d9dc1269d8b8f186e6053b12fbe3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1LeafSizeRSWrapper_1a0b90d9dc1269d8b8f186e6053b12fbe3" kindref="member">Search</ref>(arma::mat&amp;&amp;<sp/>querySet,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1math_1_1RangeType" kindref="compound">math::Range</ref>&amp;<sp/>range,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;size_t&gt;&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;&amp;<sp/>distances,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>leafSize);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="191" refid="classmlpack_1_1range_1_1LeafSizeRSWrapper_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1LeafSizeRSWrapper_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(rs));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSWrapper" kindref="compound">RSWrapper&lt;TreeType&gt;::rs</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="classmlpack_1_1range_1_1RSModel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1range_1_1RSModel" kindref="compound">RSModel</ref></highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209" refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="211" refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8daa688e9cd1158916bc183aa517724568c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8daa688e9cd1158916bc183aa517724568c" kindref="member">KD_TREE</ref>,</highlight></codeline>
<codeline lineno="212" refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8da92f172b47c8ae18ed401f8bf9f5ecad3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8da92f172b47c8ae18ed401f8bf9f5ecad3" kindref="member">COVER_TREE</ref>,</highlight></codeline>
<codeline lineno="213" refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8da2a93dc779a94d5f09b72ffbdc5ac9cd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8da2a93dc779a94d5f09b72ffbdc5ac9cd9" kindref="member">R_TREE</ref>,</highlight></codeline>
<codeline lineno="214" refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8dae5b37a52c347bc7ef3d23fde0941d27b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8dae5b37a52c347bc7ef3d23fde0941d27b" kindref="member">R_STAR_TREE</ref>,</highlight></codeline>
<codeline lineno="215" refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8da994ef1bcca8841d5b7d1431b99fcb10d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8da994ef1bcca8841d5b7d1431b99fcb10d" kindref="member">BALL_TREE</ref>,</highlight></codeline>
<codeline lineno="216" refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8da6560e35678b39452afce0f0fcc7f6059" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8da6560e35678b39452afce0f0fcc7f6059" kindref="member">X_TREE</ref>,</highlight></codeline>
<codeline lineno="217" refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8da470c5bcf4135483a37e9a87f061e1c5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8da470c5bcf4135483a37e9a87f061e1c5c" kindref="member">HILBERT_R_TREE</ref>,</highlight></codeline>
<codeline lineno="218" refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8da4e91a297c1504b34ca1a9cdcd6ba22ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8da4e91a297c1504b34ca1a9cdcd6ba22ff" kindref="member">R_PLUS_TREE</ref>,</highlight></codeline>
<codeline lineno="219" refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8da1208f6f2a7b337e4edbd02a8de98d3f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8da1208f6f2a7b337e4edbd02a8de98d3f5" kindref="member">R_PLUS_PLUS_TREE</ref>,</highlight></codeline>
<codeline lineno="220" refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8daa8a6aade44830d33165414079bf8dd1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8daa8a6aade44830d33165414079bf8dd1c" kindref="member">VP_TREE</ref>,</highlight></codeline>
<codeline lineno="221" refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8dae6815061fe1e77dc1b2ae96b07b40250" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8dae6815061fe1e77dc1b2ae96b07b40250" kindref="member">RP_TREE</ref>,</highlight></codeline>
<codeline lineno="222" refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8da0e4ed6912ca7a8232754df8771365c96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8da0e4ed6912ca7a8232754df8771365c96" kindref="member">MAX_RP_TREE</ref>,</highlight></codeline>
<codeline lineno="223" refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8dae36341db74fc7194b238cf7c528a7fbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8dae36341db74fc7194b238cf7c528a7fbc" kindref="member">UB_TREE</ref>,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8daabefbb1ea7a801b1b00c9b0709dcec50" kindref="member">OCTREE</ref></highlight></codeline>
<codeline lineno="225" refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8daabefbb1ea7a801b1b00c9b0709dcec50" refkind="member"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classmlpack_1_1range_1_1RSModel_1a3dd8fd1e68320b3ec82950d839664350" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a3dd8fd1e68320b3ec82950d839664350" kindref="member">RSModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref><sp/>treeType<sp/>=<sp/>TreeTypes::KD_TREE,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>randomBasis<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="classmlpack_1_1range_1_1RSModel_1a8ed1e3cec17df0626ac2a5034df3b537" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a8ed1e3cec17df0626ac2a5034df3b537" kindref="member">RSModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSModel" kindref="compound">RSModel</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="classmlpack_1_1range_1_1RSModel_1a178ee2403468f92eadfe0d269e858aeb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a178ee2403468f92eadfe0d269e858aeb" kindref="member">RSModel</ref>(<ref refid="classmlpack_1_1range_1_1RSModel" kindref="compound">RSModel</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="classmlpack_1_1range_1_1RSModel_1aea8c23e3a7f72594cce88439d7a8e4e3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel" kindref="compound">RSModel</ref>&amp;<sp/><ref refid="classmlpack_1_1range_1_1RSModel_1aea8c23e3a7f72594cce88439d7a8e4e3" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSModel" kindref="compound">RSModel</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="classmlpack_1_1range_1_1RSModel_1a6ac7e5a1e637c462fb01537fb14b2d40" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel" kindref="compound">RSModel</ref>&amp;<sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6ac7e5a1e637c462fb01537fb14b2d40" kindref="member">operator=</ref>(<ref refid="classmlpack_1_1range_1_1RSModel" kindref="compound">RSModel</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="classmlpack_1_1range_1_1RSModel_1a5f50179749aa6dfe66e789d6049c49ab" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a5f50179749aa6dfe66e789d6049c49ab" kindref="member">~RSModel</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="272" refid="classmlpack_1_1range_1_1RSModel_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="classmlpack_1_1range_1_1RSModel_1aff320b9a86b77a150e630c01d5888273" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/><ref refid="classmlpack_1_1range_1_1RSModel_1aff320b9a86b77a150e630c01d5888273" kindref="member">Dataset</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rSearch-&gt;<ref refid="classmlpack_1_1range_1_1RSWrapperBase_1a2effd31755e4ae5f85e14ed94e7fab8e" kindref="member">Dataset</ref>();<sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="classmlpack_1_1range_1_1RSModel_1a7477b3e8499a6158bbe177e7f30d4947" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a7477b3e8499a6158bbe177e7f30d4947" kindref="member">SingleMode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rSearch-&gt;<ref refid="classmlpack_1_1range_1_1RSWrapperBase_1a66d221dd25418821f76bb66bd9c98bce" kindref="member">SingleMode</ref>();<sp/>}</highlight></codeline>
<codeline lineno="280" refid="classmlpack_1_1range_1_1RSModel_1adadacd63ddeadf138d834b1fdc632773" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1range_1_1RSModel_1adadacd63ddeadf138d834b1fdc632773" kindref="member">SingleMode</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rSearch-&gt;<ref refid="classmlpack_1_1range_1_1RSWrapperBase_1a66d221dd25418821f76bb66bd9c98bce" kindref="member">SingleMode</ref>();<sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="classmlpack_1_1range_1_1RSModel_1a343230e7d7344e3f7d5f5f2eb89cf2c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a343230e7d7344e3f7d5f5f2eb89cf2c5" kindref="member">Naive</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rSearch-&gt;<ref refid="classmlpack_1_1range_1_1RSWrapperBase_1a76bdb2e751927f38210e7111c15cba08" kindref="member">Naive</ref>();<sp/>}</highlight></codeline>
<codeline lineno="285" refid="classmlpack_1_1range_1_1RSModel_1af7d397adca3f411b4e2d2f977b280ce6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1range_1_1RSModel_1af7d397adca3f411b4e2d2f977b280ce6" kindref="member">Naive</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rSearch-&gt;<ref refid="classmlpack_1_1range_1_1RSWrapperBase_1a76bdb2e751927f38210e7111c15cba08" kindref="member">Naive</ref>();<sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="classmlpack_1_1range_1_1RSModel_1ab81b93ebb200783ca4c5747f31889fa0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1ab81b93ebb200783ca4c5747f31889fa0" kindref="member">LeafSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>leafSize;<sp/>}</highlight></codeline>
<codeline lineno="290" refid="classmlpack_1_1range_1_1RSModel_1a0966773f5b7ef0c324ed40b1cf4b94d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a0966773f5b7ef0c324ed40b1cf4b94d1" kindref="member">LeafSize</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>leafSize;<sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="classmlpack_1_1range_1_1RSModel_1adb3d0b75d7754ec6741d890232576ffc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1adb3d0b75d7754ec6741d890232576ffc" kindref="member">TreeType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>treeType;<sp/>}</highlight></codeline>
<codeline lineno="295" refid="classmlpack_1_1range_1_1RSModel_1a56b0460c7769ea1ef9d8314026ef36c6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref>&amp;<sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a56b0460c7769ea1ef9d8314026ef36c6" kindref="member">TreeType</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>treeType;<sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="classmlpack_1_1range_1_1RSModel_1ae3053ad1e3b42eb1ae4105aecd060cf6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1ae3053ad1e3b42eb1ae4105aecd060cf6" kindref="member">RandomBasis</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>randomBasis;<sp/>}</highlight></codeline>
<codeline lineno="301" refid="classmlpack_1_1range_1_1RSModel_1a8111114602e748b38c0875f82f323544" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a8111114602e748b38c0875f82f323544" kindref="member">RandomBasis</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>randomBasis;<sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="classmlpack_1_1range_1_1RSModel_1a7f40b35e0dbe4860397eeeda65197d64" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a7f40b35e0dbe4860397eeeda65197d64" kindref="member">InitializeModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>naive,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleMode);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="classmlpack_1_1range_1_1RSModel_1a394d212c5373090724aaea3ba24b482e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a394d212c5373090724aaea3ba24b482e" kindref="member">BuildModel</ref>(arma::mat&amp;&amp;<sp/>referenceSet,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>leafSize,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>naive,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleMode);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="classmlpack_1_1range_1_1RSModel_1a24f05d38662b2832148f426ebc930a30" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a24f05d38662b2832148f426ebc930a30" kindref="member">Search</ref>(arma::mat&amp;&amp;<sp/>querySet,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1math_1_1RangeType" kindref="compound">math::Range</ref>&amp;<sp/>range,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;size_t&gt;&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;&amp;<sp/>distances);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="classmlpack_1_1range_1_1RSModel_1a3868480bcd41a740550657144b5f7018" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a3868480bcd41a740550657144b5f7018" kindref="member">Search</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1math_1_1RangeType" kindref="compound">math::Range</ref>&amp;<sp/>range,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;size_t&gt;&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;&amp;<sp/>distances);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref><sp/>treeType;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>leafSize;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>randomBasis;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>arma::mat<sp/>q;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RSWrapperBase" kindref="compound">RSWrapperBase</ref>*<sp/>rSearch;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>std::string<sp/>TreeName()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CleanMemory();</highlight></codeline>
<codeline lineno="378"><highlight class="normal">};</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation<sp/>(of<sp/>serialize()<sp/>and<sp/>templated<sp/>wrapper<sp/>classes).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rs_model_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/range_search/rs_model.hpp"/>
  </compounddef>
</doxygen>
