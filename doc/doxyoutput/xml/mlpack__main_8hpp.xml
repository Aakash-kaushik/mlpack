<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="mlpack__main_8hpp" kind="file" language="C++">
    <compoundname>mlpack_main.hpp</compoundname>
    <includes refid="param__checks_8hpp" local="yes">param_checks.hpp</includes>
    <includedby refid="range__search__utils_8hpp" local="no">/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp</includedby>
    <incdepgraph>
      <node id="60">
        <label>list</label>
      </node>
      <node id="57">
        <label>atomic</label>
      </node>
      <node id="40">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="16">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="59">
        <label>iomanip</label>
      </node>
      <node id="25">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cstdint</label>
      </node>
      <node id="17">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="24">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="50">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="47">
        <label>arma_config.hpp</label>
      </node>
      <node id="48">
        <label>mlpack/core/util/log.hpp</label>
        <link refid="log_8hpp"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="4">
        <label>cmath</label>
      </node>
      <node id="23">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="12">
        <label>stdexcept</label>
      </node>
      <node id="32">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>string</label>
      </node>
      <node id="44">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>map</label>
      </node>
      <node id="6">
        <label>cfloat</label>
      </node>
      <node id="36">
        <label>boost/variant.hpp</label>
      </node>
      <node id="52">
        <label>prefixedoutstream_impl.hpp</label>
      </node>
      <node id="64">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="20">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="43">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="53">
        <label>nulloutstream.hpp</label>
        <link refid="nulloutstream_8hpp"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="42">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>param_checks_impl.hpp</label>
      </node>
      <node id="3">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>param_checks.hpp</label>
        <link refid="param__checks_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cstdio</label>
      </node>
      <node id="13">
        <label>tuple</label>
      </node>
      <node id="18">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="35">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>prefixedoutstream.hpp</label>
        <link refid="prefixedoutstream_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>streambuf</label>
      </node>
      <node id="14">
        <label>utility</label>
      </node>
      <node id="38">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="29">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="26">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="41">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cstdlib</label>
      </node>
      <node id="5">
        <label>cctype</label>
      </node>
      <node id="54">
        <label>iostream</label>
      </node>
      <node id="28">
        <label>unordered_map</label>
      </node>
      <node id="7">
        <label>climits</label>
      </node>
      <node id="62">
        <label>mutex</label>
      </node>
      <node id="58">
        <label>chrono</label>
      </node>
      <node id="65">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="63">
        <label>thread</label>
      </node>
      <node id="1">
        <label>/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp</label>
        <link refid="mlpack__main_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>type_traits</label>
      </node>
      <node id="21">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="15">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="39">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>cstring</label>
      </node>
      <node id="30">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="19">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp</label>
        <link refid="range__search__utils_8hpp"/>
      </node>
      <node id="1">
        <label>/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp</label>
        <link refid="mlpack__main_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="mlpack__main_8hpp_1a0e2aa6294ae07325245815679ff4f256" prot="public" static="no">
        <name>BINDING_TYPE</name>
        <initializer><ref refid="mlpack__main_8hpp_1a2e470c010080288171cc7e38bcdc5fcf" kindref="member">BINDING_TYPE_UNKNOWN</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" line="31" column="9" bodyfile="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mlpack__main_8hpp_1ad5c18bfab7d2a12d110e155a48654f3c" prot="public" static="no">
        <name>BINDING_TYPE_CLI</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="mlpack__main_8hpp" kindref="compound">mlpack_main.hpp</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="author"><para>Ryan Curtin</para>
</simplesect>
This file, based on the value of the macro BINDING_TYPE, will define the macros necessary to compile an mlpack binding for the target language.</para>
<para>This file should <emphasis>only</emphasis> be included by a program that is meant to be a command-line program or a binding to another language. This file also includes <ref refid="param__checks_8hpp" kindref="compound">param_checks.hpp</ref>, which contains functions that are used to check parameter values at runtime.</para>
<para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" line="21" column="9" bodyfile="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mlpack__main_8hpp_1a088f937bc21fe8b90fc8f33622a05b6a" prot="public" static="no">
        <name>BINDING_TYPE_GO</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" line="25" column="9" bodyfile="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mlpack__main_8hpp_1a2d8bab3de14f4ce546816c38be1dadf2" prot="public" static="no">
        <name>BINDING_TYPE_JL</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" line="24" column="9" bodyfile="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mlpack__main_8hpp_1a607516c48a92981d0ad69a9630c5d310" prot="public" static="no">
        <name>BINDING_TYPE_MARKDOWN</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" line="27" column="9" bodyfile="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mlpack__main_8hpp_1ae33a6c33a70ae353b274df73f2f17925" prot="public" static="no">
        <name>BINDING_TYPE_PYX</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" line="23" column="9" bodyfile="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mlpack__main_8hpp_1ac9a951097c99b2716ea2a9f630f04b59" prot="public" static="no">
        <name>BINDING_TYPE_R</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" line="26" column="9" bodyfile="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mlpack__main_8hpp_1ada0c5ef377999813fdcd3158b362a4dc" prot="public" static="no">
        <name>BINDING_TYPE_TEST</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" line="22" column="9" bodyfile="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mlpack__main_8hpp_1a2e470c010080288171cc7e38bcdc5fcf" prot="public" static="no">
        <name>BINDING_TYPE_UNKNOWN</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" line="28" column="9" bodyfile="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_UTIL_MLPACK_MAIN_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_UTIL_MLPACK_MAIN_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="mlpack__main_8hpp_1ad5c18bfab7d2a12d110e155a48654f3c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_TYPE_CLI<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="mlpack__main_8hpp_1ada0c5ef377999813fdcd3158b362a4dc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_TYPE_TEST<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="mlpack__main_8hpp_1ae33a6c33a70ae353b274df73f2f17925" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_TYPE_PYX<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="mlpack__main_8hpp_1a2d8bab3de14f4ce546816c38be1dadf2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_TYPE_JL<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="mlpack__main_8hpp_1a088f937bc21fe8b90fc8f33622a05b6a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_TYPE_GO<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="mlpack__main_8hpp_1ac9a951097c99b2716ea2a9f630f04b59" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_TYPE_R<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="mlpack__main_8hpp_1a607516c48a92981d0ad69a9630c5d310" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_TYPE_MARKDOWN<sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="mlpack__main_8hpp_1a2e470c010080288171cc7e38bcdc5fcf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_TYPE_UNKNOWN<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BINDING_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="mlpack__main_8hpp_1a0e2aa6294ae07325245815679ff4f256" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_TYPE<sp/>BINDING_TYPE_UNKNOWN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BINDING_TYPE<sp/>==<sp/>BINDING_TYPE_CLI)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>command-line<sp/>executable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Matrices<sp/>are<sp/>transposed<sp/>on<sp/>load/save.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_MATRIX_TRANSPOSED<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cli__option_8hpp" kindref="compound">mlpack/bindings/cli/cli_option.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cli_2print__doc__functions_8hpp" kindref="compound">mlpack/bindings/cli/print_doc_functions.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_PARAM_STRING<sp/>mlpack::bindings::cli::ParamString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_PARAM_VALUE<sp/>mlpack::bindings::cli::PrintValue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_CALL<sp/>mlpack::bindings::cli::ProgramCall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_DATASET<sp/>mlpack::bindings::cli::PrintDataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_MODEL<sp/>mlpack::bindings::cli::PrintModel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_IGNORE_CHECK<sp/>mlpack::bindings::cli::IgnoreCheck</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Option<sp/>=<sp/><ref refid="classmlpack_1_1bindings_1_1cli_1_1CLIOption" kindref="compound">mlpack::bindings::cli::CLIOption&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>testName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="param_8hpp" kindref="compound">mlpack/core/util/param.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="parse__command__line_8hpp" kindref="compound">mlpack/bindings/cli/parse_command_line.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="end__program_8hpp" kindref="compound">mlpack/bindings/cli/end_program.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mlpackMain();<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>typically<sp/>defined<sp/>after<sp/>this<sp/>include.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>the<sp/>command-line<sp/>options;<sp/>put<sp/>them<sp/>into<sp/>CLI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1bindings_1_1cli_1a9f4d336f3d999569328497d0b8f37b35" kindref="member">mlpack::bindings::cli::ParseCommandLine</ref>(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>timing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1Timer_1a41f8422720891efeaf30a43f6a7bbc7f" kindref="member">mlpack::Timer::EnableTiming</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>&quot;total_time&quot;<sp/>timer<sp/>is<sp/>run<sp/>by<sp/>default<sp/>for<sp/>each<sp/>mlpack<sp/>program.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1Timer_1aa052af5e185f178dcfd540b95d2b1d11" kindref="member">mlpack::Timer::Start</ref>(</highlight><highlight class="stringliteral">&quot;total_time&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>mlpackMain();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>output<sp/>options,<sp/>print<sp/>verbose<sp/>information,<sp/>save<sp/>model<sp/>parameters,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clean<sp/>up,<sp/>and<sp/>so<sp/>forth.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1bindings_1_1cli_1a0f5881c4001a8176d0ad6387b30c8b8a" kindref="member">mlpack::bindings::cli::EndProgram</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#elif(BINDING_TYPE<sp/>==<sp/>BINDING_TYPE_TEST)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>unit<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Matrices<sp/>are<sp/>not<sp/>transposed<sp/>on<sp/>load/save.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_MATRIX_TRANSPOSED<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="test__option_8hpp" kindref="compound">mlpack/bindings/tests/test_option.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ignore__check_8hpp" kindref="compound">mlpack/bindings/tests/ignore_check.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="clean__memory_8hpp" kindref="compound">mlpack/bindings/tests/clean_memory.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>functions<sp/>will<sp/>do<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_PARAM_STRING(A)<sp/>std::string(&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_PARAM_VALUE(A,<sp/>B)<sp/>std::string(&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_DATASET(A)<sp/>std::string(&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_MODEL(A)<sp/>std::string(&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_CALL(...)<sp/>std::string(&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_IGNORE_CHECK<sp/>mlpack::bindings::tests::IgnoreCheck</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Option<sp/>=<sp/><ref refid="classmlpack_1_1bindings_1_1tests_1_1TestOption" kindref="compound">mlpack::bindings::tests::TestOption&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>testName<sp/>symbol<sp/>should<sp/>be<sp/>defined<sp/>in<sp/>each<sp/>binding<sp/>test<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="param_8hpp" kindref="compound">mlpack/core/util/param.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#elif(BINDING_TYPE<sp/>==<sp/>BINDING_TYPE_PYX)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>Python<sp/>binding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Matrices<sp/>are<sp/>transposed<sp/>on<sp/>load/save.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_MATRIX_TRANSPOSED<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="py__option_8hpp" kindref="compound">mlpack/bindings/python/py_option.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="python_2print__doc__functions_8hpp" kindref="compound">mlpack/bindings/python/print_doc_functions.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_PARAM_STRING<sp/>mlpack::bindings::python::ParamString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_PARAM_VALUE<sp/>mlpack::bindings::python::PrintValue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_DATASET<sp/>mlpack::bindings::python::PrintDataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_MODEL<sp/>mlpack::bindings::python::PrintModel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_CALL<sp/>mlpack::bindings::python::ProgramCall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_IGNORE_CHECK<sp/>mlpack::bindings::python::IgnoreCheck</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Option<sp/>=<sp/><ref refid="classmlpack_1_1bindings_1_1python_1_1PyOption" kindref="compound">mlpack::bindings::python::PyOption&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>testName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="param_8hpp" kindref="compound">mlpack/core/util/param.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BINDING_NAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_NAME(NAME)<sp/>static<sp/>\</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>mlpack::util::ProgramName<sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>io_programname_dummy_object<sp/>=<sp/>mlpack::util::ProgramName(NAME);<sp/>\</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>namespace<sp/>mlpack<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>namespace<sp/>bindings<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>namespace<sp/>python<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>std::string<sp/>programName<sp/>=<sp/>NAME;<sp/>\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><ref refid="param_8hpp_1a59a38dfe16c56a278bd89817216a3739" kindref="member">PARAM_FLAG</ref>(</highlight><highlight class="stringliteral">&quot;verbose&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Display<sp/>informational<sp/>messages<sp/>and<sp/>the<sp/>full<sp/>list<sp/>of<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;parameters<sp/>and<sp/>timers<sp/>at<sp/>the<sp/>end<sp/>of<sp/>execution.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><ref refid="param_8hpp_1a59a38dfe16c56a278bd89817216a3739" kindref="member">PARAM_FLAG</ref>(</highlight><highlight class="stringliteral">&quot;copy_all_inputs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;If<sp/>specified,<sp/>all<sp/>input<sp/>parameters<sp/>will<sp/>be<sp/>deep&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>copied<sp/>before<sp/>the<sp/>method<sp/>is<sp/>run.<sp/><sp/>This<sp/>is<sp/>useful<sp/>for<sp/>debugging<sp/>problems<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;where<sp/>the<sp/>input<sp/>parameters<sp/>are<sp/>being<sp/>modified<sp/>by<sp/>the<sp/>algorithm,<sp/>but<sp/>can<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;slow<sp/>down<sp/>the<sp/>code.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><ref refid="param_8hpp_1a59a38dfe16c56a278bd89817216a3739" kindref="member">PARAM_FLAG</ref>(</highlight><highlight class="stringliteral">&quot;check_input_matrices&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;If<sp/>specified,<sp/>the<sp/>input<sp/>matrix<sp/>is<sp/>checked<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;for<sp/>NaN<sp/>and<sp/>inf<sp/>values;<sp/>an<sp/>exception<sp/>is<sp/>thrown<sp/>if<sp/>any<sp/>are<sp/>found.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Nothing<sp/>else<sp/>needs<sp/>to<sp/>be<sp/>defined---the<sp/>binding<sp/>will<sp/>use<sp/>mlpackMain()<sp/>as-is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#elif(BINDING_TYPE<sp/>==<sp/>BINDING_TYPE_JL)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>Julia<sp/>binding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Matrices<sp/>are<sp/>transposed<sp/>on<sp/>load/save.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_MATRIX_TRANSPOSED<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="julia__option_8hpp" kindref="compound">mlpack/bindings/julia/julia_option.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="julia_2print__doc__functions_8hpp" kindref="compound">mlpack/bindings/julia/print_doc_functions.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_PARAM_STRING<sp/>mlpack::bindings::julia::ParamString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_PARAM_VALUE<sp/>mlpack::bindings::julia::PrintValue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_DATASET<sp/>mlpack::bindings::julia::PrintDataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_MODEL<sp/>mlpack::bindings::julia::PrintModel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_CALL<sp/>mlpack::bindings::julia::ProgramCall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_IGNORE_CHECK<sp/>mlpack::bindings::julia::IgnoreCheck</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Option<sp/>=<sp/><ref refid="classmlpack_1_1bindings_1_1julia_1_1JuliaOption" kindref="compound">mlpack::bindings::julia::JuliaOption&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>testName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="param_8hpp" kindref="compound">mlpack/core/util/param.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BINDING_NAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_NAME(NAME)<sp/>static<sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>mlpack::util::ProgramName<sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>io_programname_dummy_object<sp/>=<sp/>mlpack::util::ProgramName(NAME);<sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>namespace<sp/>mlpack<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>namespace<sp/>bindings<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>namespace<sp/>julia<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>std::string<sp/>programName<sp/>=<sp/>NAME;<sp/>\</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><ref refid="param_8hpp_1a59a38dfe16c56a278bd89817216a3739" kindref="member">PARAM_FLAG</ref>(</highlight><highlight class="stringliteral">&quot;verbose&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Display<sp/>informational<sp/>messages<sp/>and<sp/>the<sp/>full<sp/>list<sp/>of<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;parameters<sp/>and<sp/>timers<sp/>at<sp/>the<sp/>end<sp/>of<sp/>execution.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Nothing<sp/>else<sp/>needs<sp/>to<sp/>be<sp/>defined---the<sp/>binding<sp/>will<sp/>use<sp/>mlpackMain()<sp/>as-is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#elif(BINDING_TYPE<sp/>==<sp/>BINDING_TYPE_GO)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>Go<sp/>binding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Matrices<sp/>are<sp/>transposed<sp/>on<sp/>load/save.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_MATRIX_TRANSPOSED<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="go__option_8hpp" kindref="compound">mlpack/bindings/go/go_option.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="go_2print__doc__functions_8hpp" kindref="compound">mlpack/bindings/go/print_doc_functions.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_PARAM_STRING<sp/>mlpack::bindings::go::ParamString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_PARAM_VALUE<sp/>mlpack::bindings::go::PrintValue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_DATASET<sp/>mlpack::bindings::go::PrintDataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_MODEL<sp/>mlpack::bindings::go::PrintModel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_CALL<sp/>mlpack::bindings::go::ProgramCall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_IGNORE_CHECK<sp/>mlpack::bindings::go::IgnoreCheck</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Option<sp/>=<sp/><ref refid="classmlpack_1_1bindings_1_1go_1_1GoOption" kindref="compound">mlpack::bindings::go::GoOption&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>testName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="param_8hpp" kindref="compound">mlpack/core/util/param.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BINDING_NAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_NAME(NAME)<sp/>static<sp/>\</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>mlpack::util::ProgramName<sp/>\</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>io_programname_dummy_object<sp/>=<sp/>mlpack::util::ProgramName(NAME);<sp/>\</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>namespace<sp/>mlpack<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="314"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>namespace<sp/>bindings<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>namespace<sp/>go<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>std::string<sp/>programName<sp/>=<sp/>NAME;<sp/>\</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><ref refid="param_8hpp_1a59a38dfe16c56a278bd89817216a3739" kindref="member">PARAM_FLAG</ref>(</highlight><highlight class="stringliteral">&quot;verbose&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Display<sp/>informational<sp/>messages<sp/>and<sp/>the<sp/>full<sp/>list<sp/>of<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;parameters<sp/>and<sp/>timers<sp/>at<sp/>the<sp/>end<sp/>of<sp/>execution.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Nothing<sp/>else<sp/>needs<sp/>to<sp/>be<sp/>defined---the<sp/>binding<sp/>will<sp/>use<sp/>mlpackMain()<sp/>as-is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#elif(BINDING_TYPE<sp/>==<sp/>BINDING_TYPE_R)<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>R<sp/>binding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>doesn&apos;t<sp/>actually<sp/>matter<sp/>for<sp/>this<sp/>binding<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_MATRIX_TRANSPOSED<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="R__option_8hpp" kindref="compound">mlpack/bindings/R/R_option.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="R_2print__doc__functions_8hpp" kindref="compound">mlpack/bindings/R/print_doc_functions.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_PARAM_STRING<sp/>mlpack::bindings::r::ParamString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_PARAM_VALUE<sp/>mlpack::bindings::r::PrintValue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_DATASET<sp/>mlpack::bindings::r::PrintDataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_MODEL<sp/>mlpack::bindings::r::PrintModel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_CALL(...)<sp/>mlpack::bindings::r::ProgramCall(false,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_IGNORE_CHECK<sp/>mlpack::bindings::r::IgnoreCheck</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Option<sp/>=<sp/><ref refid="classmlpack_1_1bindings_1_1r_1_1ROption" kindref="compound">mlpack::bindings::r::ROption&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>testName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="param_8hpp" kindref="compound">mlpack/core/util/param.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><ref refid="param_8hpp_1a59a38dfe16c56a278bd89817216a3739" kindref="member">PARAM_FLAG</ref>(</highlight><highlight class="stringliteral">&quot;verbose&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Display<sp/>informational<sp/>messages<sp/>and<sp/>the<sp/>full<sp/>list<sp/>of<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;parameters<sp/>and<sp/>timers<sp/>at<sp/>the<sp/>end<sp/>of<sp/>execution.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Nothing<sp/>else<sp/>needs<sp/>to<sp/>be<sp/>defined---the<sp/>binding<sp/>will<sp/>use<sp/>mlpackMain()<sp/>as-is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>BINDING_TYPE<sp/>==<sp/>BINDING_TYPE_MARKDOWN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>MARKDOWN_BINDING_NAME<sp/>in<sp/>BINDING_NAME(),<sp/>BINDING_SHORT_DESC(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BINDING_LONG_DESC(),<sp/>BINDING_EXAMPLE()<sp/>and<sp/>BINDING_SEE_ALSO()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>it<sp/>needs<sp/>to<sp/>be<sp/>defined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MARKDOWN_BINDING_NAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#error<sp/>&quot;MARKDOWN_BINDING_NAME<sp/>must<sp/>be<sp/>defined<sp/>when<sp/>BINDING_TYPE<sp/>is<sp/>Markdown!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>value<sp/>doesn&apos;t<sp/>actually<sp/>matter,<sp/>but<sp/>it<sp/>needs<sp/>to<sp/>be<sp/>defined<sp/>as<sp/>something.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_MATRIX_TRANSPOSED<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="md__option_8hpp" kindref="compound">mlpack/bindings/markdown/md_option.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="markdown_2print__doc__functions_8hpp" kindref="compound">mlpack/bindings/markdown/print_doc_functions.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_PARAM_STRING<sp/>mlpack::bindings::markdown::ParamString</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_PARAM_VALUE<sp/>mlpack::bindings::markdown::PrintValue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_DATASET<sp/>mlpack::bindings::markdown::PrintDataset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_MODEL<sp/>mlpack::bindings::markdown::PrintModel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_CALL<sp/>mlpack::bindings::markdown::ProgramCall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_IGNORE_CHECK<sp/>mlpack::bindings::markdown::IgnoreCheck</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>doesn&apos;t<sp/>actually<sp/>matter<sp/>for<sp/>this<sp/>binding<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_MATRIX_TRANSPOSED<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Option<sp/>=<sp/><ref refid="classmlpack_1_1bindings_1_1markdown_1_1MDOption" kindref="compound">mlpack::bindings::markdown::MDOption&lt;T&gt;</ref>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="param_8hpp" kindref="compound">mlpack/core/util/param.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="program__doc__wrapper_8hpp" kindref="compound">mlpack/bindings/markdown/program_doc_wrapper.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BINDING_NAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BINDING_SHORT_DESC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BINDING_LONG_DESC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BINDING_EXAMPLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BINDING_SEE_ALSO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_NAME(NAME)<sp/>static<sp/>\</highlight></codeline>
<codeline lineno="434"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>mlpack::bindings::markdown::ProgramNameWrapper<sp/>\</highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>io_programname_dummy_object<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="436"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>mlpack::bindings::markdown::ProgramNameWrapper(<sp/>\</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>MARKDOWN_BINDING_NAME,<sp/>NAME);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_SHORT_DESC(SHORT_DESC)<sp/>static<sp/>\</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>mlpack::bindings::markdown::ShortDescriptionWrapper<sp/>\</highlight></codeline>
<codeline lineno="441"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>io_programshort_desc_dummy_object<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="442"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>mlpack::bindings::markdown::ShortDescriptionWrapper(<sp/>\</highlight></codeline>
<codeline lineno="443"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>MARKDOWN_BINDING_NAME,<sp/>SHORT_DESC);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BINDING_LONG_DESC(LONG_DESC)<sp/>static<sp/>\</highlight></codeline>
<codeline lineno="446"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>mlpack::bindings::markdown::LongDescriptionWrapper<sp/>\</highlight></codeline>
<codeline lineno="447"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>io_programlong_desc_dummy_object<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="448"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>mlpack::bindings::markdown::LongDescriptionWrapper(<sp/>\</highlight></codeline>
<codeline lineno="449"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>MARKDOWN_BINDING_NAME,<sp/>[]()<sp/>{<sp/>return<sp/>std::string(LONG_DESC);<sp/>});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__COUNTER__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>BINDING_EXAMPLE(EXAMPLE)<sp/>static<sp/>\</highlight></codeline>
<codeline lineno="453"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>mlpack::bindings::markdown::ExampleWrapper<sp/>\</highlight></codeline>
<codeline lineno="454"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>JOIN(io_programexample_dummy_object_,<sp/>__COUNTER__)<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="455"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>mlpack::bindings::markdown::ExampleWrapper(MARKDOWN_BINDING_NAME,<sp/>\</highlight></codeline>
<codeline lineno="456"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>[]()<sp/>{<sp/>return(std::string(EXAMPLE));<sp/>});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>BINDING_SEE_ALSO(DESCRIPTION,<sp/>LINK)<sp/>static<sp/>\</highlight></codeline>
<codeline lineno="459"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>mlpack::bindings::markdown::SeeAlsoWrapper<sp/>\</highlight></codeline>
<codeline lineno="460"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>JOIN(io_programsee_also_dummy_object_,<sp/>__COUNTER__)<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>mlpack::bindings::markdown::SeeAlsoWrapper(MARKDOWN_BINDING_NAME,<sp/>\</highlight></codeline>
<codeline lineno="462"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>DESCRIPTION,<sp/>LINK);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>BINDING_EXAMPLE(EXAMPLE)<sp/>static<sp/>\</highlight></codeline>
<codeline lineno="465"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>mlpack::bindings::markdown::ExampleWrapper<sp/>\</highlight></codeline>
<codeline lineno="466"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>JOIN(JOIN(io_programexample_dummy_object_,<sp/>__LINE__),<sp/>opt)<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="467"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>mlpack::bindings::markdown::ExampleWrapper(MARKDOWN_BINDING_NAME,<sp/>\</highlight></codeline>
<codeline lineno="468"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>[]()<sp/>{<sp/>return(std::string(EXAMPLE));<sp/>});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>BINDING_SEE_ALSO(DESCRIPTION,<sp/>LINK)<sp/>static<sp/>\</highlight></codeline>
<codeline lineno="471"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>mlpack::bindings::markdown::SeeAlsoWrapper<sp/>\</highlight></codeline>
<codeline lineno="472"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>JOIN(JOIN(io_programsee_also_dummy_object_,<sp/>__LINE__),<sp/>opt)<sp/>=<sp/>\</highlight></codeline>
<codeline lineno="473"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>mlpack::bindings::markdown::SeeAlsoWrapper(MARKDOWN_BINDING_NAME,<sp/>\</highlight></codeline>
<codeline lineno="474"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>DESCRIPTION,<sp/>LINK);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><ref refid="param_8hpp_1a59a38dfe16c56a278bd89817216a3739" kindref="member">PARAM_FLAG</ref>(</highlight><highlight class="stringliteral">&quot;verbose&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Display<sp/>informational<sp/>messages<sp/>and<sp/>the<sp/>full<sp/>list<sp/>of<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;parameters<sp/>and<sp/>timers<sp/>at<sp/>the<sp/>end<sp/>of<sp/>execution.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CLI-specific<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><ref refid="param_8hpp_1a59a38dfe16c56a278bd89817216a3739" kindref="member">PARAM_FLAG</ref>(</highlight><highlight class="stringliteral">&quot;help&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Default<sp/>help<sp/>info.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;h&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><ref refid="param_8hpp_1a9514ae93b51ba592bc3299da8326bb80" kindref="member">PARAM_STRING_IN</ref>(</highlight><highlight class="stringliteral">&quot;info&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Print<sp/>help<sp/>on<sp/>a<sp/>specific<sp/>option.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><ref refid="param_8hpp_1a59a38dfe16c56a278bd89817216a3739" kindref="member">PARAM_FLAG</ref>(</highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Display<sp/>the<sp/>version<sp/>of<sp/>mlpack.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;V&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Python-specific<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><ref refid="param_8hpp_1a59a38dfe16c56a278bd89817216a3739" kindref="member">PARAM_FLAG</ref>(</highlight><highlight class="stringliteral">&quot;copy_all_inputs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;If<sp/>specified,<sp/>all<sp/>input<sp/>parameters<sp/>will<sp/>be<sp/>deep&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>copied<sp/>before<sp/>the<sp/>method<sp/>is<sp/>run.<sp/><sp/>This<sp/>is<sp/>useful<sp/>for<sp/>debugging<sp/>problems<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;where<sp/>the<sp/>input<sp/>parameters<sp/>are<sp/>being<sp/>modified<sp/>by<sp/>the<sp/>algorithm,<sp/>but<sp/>can<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;slow<sp/>down<sp/>the<sp/>code.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Unknown<sp/>binding<sp/>type!<sp/><sp/>Be<sp/>sure<sp/>BINDING_TYPE<sp/>is<sp/>defined<sp/>if<sp/>you<sp/>are<sp/>&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;including<sp/>&lt;mlpack/core/util/mlpack_main.hpp&gt;.&quot;;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="param__checks_8hpp" kindref="compound">param_checks.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/util/mlpack_main.hpp"/>
  </compounddef>
</doxygen>
