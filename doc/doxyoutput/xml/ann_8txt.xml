<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ann_8txt" kind="file" language="C++">
    <compoundname>ann.txt</compoundname>
    <briefdescription>
<para>Tutorial for how to use the neural network code in mlpack. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marcus Edel (<ulink url="https://kurg.org">https://kurg.org</ulink>) </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>arma::mat<sp/>prediction<sp/>=<sp/>arma::zeros&lt;arma::mat&gt;(1,<sp/>predictionTemp.n_cols);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>index<sp/>of<sp/>max<sp/>prediction<sp/>for<sp/>each<sp/>data<sp/>point<sp/>and<sp/>store<sp/>in<sp/>&quot;prediction&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>predictionTemp.n_cols;<sp/>++i)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>prediction(i)<sp/>=<sp/>arma::as_scalar(arma::find(</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::max(predictionTemp.col(i))<sp/>==<sp/>predictionTemp.col(i),<sp/>1));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/>Compute<sp/>the<sp/>error<sp/>between<sp/>predictions<sp/>and<sp/>testLabels,</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/>now<sp/>that<sp/>we<sp/>have<sp/>the<sp/>desired<sp/>predictions.</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>correct<sp/>=<sp/>arma::accu(prediction<sp/>==<sp/>testLabels);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>classificationError<sp/>=<sp/>1<sp/>-<sp/>double(correct)<sp/>/<sp/>testData.n_cols;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>out<sp/>the<sp/>classification<sp/>error<sp/>for<sp/>the<sp/>testing<sp/>dataset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Classification<sp/>Error<sp/>for<sp/>the<sp/>Test<sp/>set:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>classificationError<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal">code</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">Now,<sp/>the<sp/>matrix<sp/>prediction<sp/>holds<sp/>the<sp/>classification<sp/>of<sp/>each<sp/>point<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="268"><highlight class="normal">dataset.<sp/>Subsequently,<sp/>we<sp/>find<sp/>the<sp/>classification<sp/>error<sp/>by<sp/>comparing<sp/>it</highlight></codeline>
<codeline lineno="269"><highlight class="normal">with<sp/>testLabels.</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal">In<sp/>the<sp/>next<sp/>example,<sp/>we<sp/>create<sp/>simple<sp/>noisy<sp/>sine<sp/>sequences,<sp/>which<sp/>are<sp/>trained</highlight></codeline>
<codeline lineno="272"><highlight class="normal">later<sp/>on,<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>the<sp/>RNN<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">in<sp/>the<sp/>`RNNModel()`<sp/>method.</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="275"><highlight class="normal">void<sp/>GenerateNoisySines(arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>labels,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>size_t<sp/>points,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>size_t<sp/>sequences,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>double<sp/>noise<sp/>=<sp/>0.3)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>arma::colvec<sp/>x<sp/>=<sp/><sp/>arma::linspace&lt;arma::Col&lt;double&gt;&gt;(0,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>-<sp/>1,<sp/>points)<sp/>/<sp/>points<sp/>*<sp/>20.0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>arma::colvec<sp/>y1<sp/>=<sp/>arma::sin(x<sp/>+<sp/>arma::as_scalar(arma::randu(1))<sp/>*<sp/>3.0);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>arma::colvec<sp/>y2<sp/>=<sp/>arma::sin(x<sp/>/<sp/>2.0<sp/>+<sp/>arma::as_scalar(arma::randu(1))<sp/>*<sp/>3.0);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>data<sp/>=<sp/>arma::zeros(points,<sp/>sequences<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>labels<sp/>=<sp/>arma::zeros(2,<sp/>sequences<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>seq<sp/>=<sp/>0;<sp/>seq<sp/>&lt;<sp/>sequences;<sp/>seq++)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>data.col(seq)<sp/>=<sp/>arma::randu(points)<sp/>*<sp/>noise<sp/>+<sp/>y1<sp/>+</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::as_scalar(arma::randu(1)<sp/>-<sp/>0.5)<sp/>*<sp/>noise;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>labels(0,<sp/>seq)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>data.col(sequences<sp/>+<sp/>seq)<sp/>=<sp/>arma::randu(points)<sp/>*<sp/>noise<sp/>+<sp/>y2<sp/>+</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::as_scalar(arma::randu(1)<sp/>-<sp/>0.5)<sp/>*<sp/>noise;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>labels(1,<sp/>sequences<sp/>+<sp/>seq)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RNNModel()</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rho<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>12<sp/>(2<sp/>*<sp/>6)<sp/>noisy<sp/>sines.<sp/>A<sp/>single<sp/>sine<sp/>contains<sp/>rho</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>points/features.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>arma::mat<sp/>input,<sp/>labelsTemp;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>GenerateNoisySines(input,<sp/>labelsTemp,<sp/>rho,<sp/>6);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>arma::mat<sp/>labels<sp/>=<sp/>arma::zeros&lt;arma::mat&gt;(rho,<sp/>labelsTemp.n_cols);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>labelsTemp.n_cols;<sp/>++i)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>arma::as_scalar(arma::find(</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::max(labelsTemp.col(i))<sp/>==<sp/>labelsTemp.col(i),<sp/>1));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>labels.col(i).fill(value);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>Add&lt;&gt;<sp/>add(4);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>Linear&lt;&gt;<sp/>lookup(1,<sp/>4);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>SigmoidLayer&lt;&gt;<sp/>sigmoidLayer;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>Linear&lt;&gt;<sp/>linear(4,<sp/>4);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>Recurrent&lt;&gt;<sp/>recurrent(add,<sp/>lookup,<sp/>linear,<sp/>sigmoidLayer,<sp/>rho);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>RNN&lt;&gt;<sp/>model(rho);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>model.Add&lt;IdentityLayer&lt;&gt;<sp/>&gt;();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>model.Add(recurrent);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>model.Add&lt;Linear&lt;&gt;<sp/>&gt;(4,<sp/>10);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>model.Add&lt;LogSoftMax&lt;&gt;<sp/>&gt;();</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>StandardSGD<sp/>opt(0.1,<sp/>1,<sp/>input.n_cols<sp/></highlight><highlight class="comment">/*<sp/>1<sp/>epoch<sp/>*/</highlight><highlight class="normal">,<sp/>-100);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>model.Train(input,<sp/>labels,<sp/>opt);</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal">code</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal">For<sp/>further<sp/>examples<sp/>on<sp/>the<sp/>usage<sp/>of<sp/>the<sp/>ann<sp/>classes,<sp/>see<sp/>[<ref refid="namespacemlpack" kindref="compound">mlpack</ref></highlight></codeline>
<codeline lineno="352"><highlight class="normal">models](https:</highlight><highlight class="comment">//github.com/mlpack/models).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal">@section<sp/>layer_api_anntut<sp/>Layer<sp/>API</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">In<sp/>order<sp/>to<sp/>facilitate<sp/>consistent<sp/>implementations,<sp/>we<sp/>have<sp/>defined<sp/>a<sp/>LayerType</highlight></codeline>
<codeline lineno="357"><highlight class="normal">API<sp/>that<sp/>describes<sp/>all<sp/>the<sp/>methods<sp/>that<sp/>a<sp/>\c<sp/>layer<sp/>may<sp/>implement.<sp/><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>offers</highlight></codeline>
<codeline lineno="358"><highlight class="normal">a<sp/>few<sp/>variations<sp/>of<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>API,<sp/>each<sp/>designed<sp/>to<sp/>cover<sp/>some<sp/>of<sp/>the<sp/>model</highlight></codeline>
<codeline lineno="359"><highlight class="normal">characteristics<sp/>mentioned<sp/>in<sp/>the<sp/>previous<sp/>section.<sp/>Any<sp/>\c<sp/>layer<sp/>requires<sp/>the</highlight></codeline>
<codeline lineno="360"><highlight class="normal">implementation<sp/>of<sp/>a<sp/>\c<sp/>Forward()<sp/>method.<sp/>The<sp/>interface<sp/>looks<sp/>like:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="363"><highlight class="normal">template&lt;typename<sp/>eT&gt;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Forward(const<sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,<sp/>arma::Mat&lt;eT&gt;&amp;<sp/>output);</highlight></codeline>
<codeline lineno="365"><highlight class="normal">@endcode</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">The<sp/>method<sp/>should<sp/>calculate<sp/>the<sp/>output<sp/>of<sp/>the<sp/>layer<sp/>given<sp/>the<sp/>input<sp/>matrix<sp/>and</highlight></codeline>
<codeline lineno="368"><highlight class="normal">store<sp/>the<sp/>result<sp/>in<sp/>the<sp/>given<sp/>output<sp/>matrix.<sp/>Next,<sp/>any<sp/>\c<sp/>layer<sp/>must<sp/>implement</highlight></codeline>
<codeline lineno="369"><highlight class="normal">the<sp/>Backward()<sp/>method,<sp/>which<sp/>uses<sp/>certain<sp/>computations<sp/>obtained<sp/>during<sp/>the</highlight></codeline>
<codeline lineno="370"><highlight class="normal">forward<sp/>pass<sp/>and<sp/>should<sp/>calculate<sp/>the<sp/>function<sp/>f(x)<sp/>by<sp/>propagating<sp/>x<sp/>backward</highlight></codeline>
<codeline lineno="371"><highlight class="normal">through<sp/>f:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="374"><highlight class="normal">template&lt;typename<sp/>eT&gt;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Backward(const<sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>arma::Mat&lt;eT&gt;&amp;<sp/>gy,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>g);</highlight></codeline>
<codeline lineno="378"><highlight class="normal">@endcode</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal">Finally,<sp/><ref refid="bindings_2go_2CMakeLists_8txt_1a81b53a1ab05b48531c7d8b930ed65ee9" kindref="member">if</ref><sp/>the<sp/>layer<sp/>is<sp/>differentiable,<sp/>the<sp/>layer<sp/>must<sp/>also<sp/>implement</highlight></codeline>
<codeline lineno="381"><highlight class="normal">a<sp/>Gradient()<sp/>method:</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="384"><highlight class="normal">template&lt;typename<sp/>eT&gt;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gradient(const<sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>arma::Mat&lt;eT&gt;&amp;<sp/>error,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>gradient);</highlight></codeline>
<codeline lineno="388"><highlight class="normal">@endcode</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal">The<sp/>Gradient<sp/>function<sp/>should<sp/>calculate<sp/>the<sp/>gradient<sp/>with<sp/>respect<sp/>to<sp/>the<sp/>input</highlight></codeline>
<codeline lineno="391"><highlight class="normal">activations<sp/>\c<sp/>input<sp/>and<sp/>calculated<sp/>errors<sp/>\c<sp/>error<sp/>and<sp/>place<sp/>the<sp/>results<sp/>into</highlight></codeline>
<codeline lineno="392"><highlight class="normal">the<sp/>gradient<sp/>matrix<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>\c<sp/>gradient<sp/>that<sp/>is<sp/>passed<sp/>as<sp/>an<sp/>argument.</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal">@note</highlight></codeline>
<codeline lineno="395"><highlight class="normal">Note<sp/>that<sp/>each<sp/>method<sp/>accepts<sp/>a<sp/>template<sp/>parameter<sp/>InputType,<sp/>OutputType</highlight></codeline>
<codeline lineno="396"><highlight class="normal">or<sp/>GradientType,<sp/>which<sp/>may<sp/>be<sp/>arma::mat<sp/>(dense<sp/>Armadillo<sp/>matrix)<sp/>or<sp/>arma::sp_mat</highlight></codeline>
<codeline lineno="397"><highlight class="normal">(sparse<sp/>Armadillo<sp/>matrix).<sp/>This<sp/>allows<sp/>support<sp/>for<sp/>both<sp/>sparse-supporting<sp/>and</highlight></codeline>
<codeline lineno="398"><highlight class="normal">non-sparse-supporting<sp/>\c<sp/>layer<sp/>without<sp/>explicitly<sp/>passing<sp/>the<sp/>type.</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">In<sp/>addition,<sp/>each<sp/>layer<sp/>must<sp/>implement<sp/>the<sp/>Parameters(),<sp/>InputParameter(),</highlight></codeline>
<codeline lineno="401"><highlight class="normal">OutputParameter(),<sp/>Delta()<sp/>methods,<sp/>differentiable<sp/>layer<sp/>should<sp/>also<sp/>provide</highlight></codeline>
<codeline lineno="402"><highlight class="normal">access<sp/>to<sp/>the<sp/>gradient<sp/>by<sp/>implementing<sp/>the<sp/>Gradient(),<sp/>Parameters()<sp/>member</highlight></codeline>
<codeline lineno="403"><highlight class="normal">function.<sp/>Note<sp/>each<sp/>function<sp/>is<sp/>a<sp/>single<sp/>line<sp/>that<sp/>looks<sp/>like:</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="406"><highlight class="normal">OutputDataType<sp/>const&amp;<sp/>Parameters()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>weights;<sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal">code</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal">Below<sp/>is<sp/>an<sp/>example<sp/>that<sp/>shows<sp/>each<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>with<sp/>some<sp/>additional<sp/>boilerplate</highlight></codeline>
<codeline lineno="410"><highlight class="normal">code.</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal">@note</highlight></codeline>
<codeline lineno="413"><highlight class="normal">Note<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>is<sp/>not<sp/>an<sp/>actual<sp/>layer<sp/>but<sp/>instead<sp/>an<sp/>example<sp/>that<sp/>exists<sp/>to<sp/>show<sp/>and</highlight></codeline>
<codeline lineno="414"><highlight class="normal">document<sp/>all<sp/>the<sp/>functions<sp/>that<sp/><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>layer<sp/>must<sp/>implement.<sp/><sp/>For<sp/>a<sp/>better</highlight></codeline>
<codeline lineno="415"><highlight class="normal">overview<sp/>of<sp/>the<sp/>various<sp/>layers,<sp/>see<sp/>\ref<sp/><ref refid="namespacemlpack_1_1ann" kindref="compound">mlpack::ann</ref>.<sp/>Also<sp/>be<sp/>aware<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="416"><highlight class="normal">implementations<sp/>of<sp/>each<sp/>of<sp/>the<sp/>methods<sp/>in<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>example<sp/>are<sp/>entirely<sp/>fake<sp/>and<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal">not<sp/>work;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>example<sp/>exists<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>its<sp/>API,<sp/>not<sp/>its<sp/>implementation.</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal">Note<sp/>that<sp/>layer<sp/>sometimes<sp/>have<sp/>different<sp/>properties.<sp/>These<sp/>properties<sp/>are</highlight></codeline>
<codeline lineno="420"><highlight class="normal">known<sp/>at<sp/>compile-time<sp/>through<sp/>the<sp/><ref refid="classmlpack_1_1ann_1_1LayerTraits" kindref="compound">mlpack::ann::LayerTraits</ref><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">,<sp/>and<sp/>some</highlight></codeline>
<codeline lineno="421"><highlight class="normal">properties<sp/>may<sp/>imply<sp/>the<sp/>existence<sp/>(or<sp/>non-existence)<sp/>of<sp/>certain<sp/>functions.</highlight></codeline>
<codeline lineno="422"><highlight class="normal">Refer<sp/>to<sp/>the<sp/>LayerTraits<sp/>@ref<sp/>layer_traits.hpp<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>more<sp/>documentation<sp/>on<sp/>that.</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal">The<sp/>two<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>parameters<sp/>below<sp/>must<sp/>be<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>parameters<sp/>to<sp/>the<sp/>layer,<sp/>in</highlight></codeline>
<codeline lineno="425"><highlight class="normal">the<sp/>order<sp/>given<sp/>below.<sp/>More<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>parameters<sp/>are<sp/>fine,<sp/>but<sp/>they<sp/>must<sp/>come</highlight></codeline>
<codeline lineno="426"><highlight class="normal">after<sp/>the<sp/>first<sp/>two.</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/>-<sp/>\c<sp/>InputDataType:<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>defines<sp/>the<sp/>internally<sp/>used<sp/>input<sp/>type<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>example<sp/>to</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/>store<sp/>the<sp/>parameter<sp/>matrix.<sp/>Note,<sp/>a<sp/>layer<sp/>could<sp/>be<sp/>built<sp/>on<sp/>a<sp/>dense<sp/>matrix<sp/>or</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/>a<sp/>sparse<sp/>matrix.<sp/>All<sp/><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>trees<sp/>should<sp/>be<sp/>able<sp/>to<sp/>support<sp/>any<sp/>Armadillo-</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/>compatible<sp/>matrix<sp/>type.<sp/><sp/>When<sp/>the<sp/>layer<sp/>is<sp/>written<sp/>it<sp/>should<sp/>be<sp/>assumed<sp/>that</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/>MatType<sp/>has<sp/>the<sp/>same<sp/>functionality<sp/>as<sp/>arma::mat.<sp/>Note<sp/>that</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/>-<sp/>\c<sp/>OutputDataType:<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>defines<sp/>the<sp/>internally<sp/>used<sp/>input<sp/>type<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>example<sp/>to</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/>store<sp/>the<sp/>parameter<sp/>matrix.<sp/>Note,<sp/>a<sp/>layer<sp/>could<sp/>be<sp/>built<sp/>on<sp/>a<sp/>dense<sp/>matrix<sp/>or</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/>a<sp/>sparse<sp/>matrix.<sp/>All<sp/><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>trees<sp/>should<sp/>be<sp/>able<sp/>to<sp/>support<sp/>any<sp/>Armadillo-</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/>compatible<sp/>matrix<sp/>type.<sp/><sp/>When<sp/>the<sp/>layer<sp/>is<sp/>written<sp/>it<sp/>should<sp/>be<sp/>assumed<sp/>that</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/>MatType<sp/>has<sp/>the<sp/>same<sp/>functionality<sp/>as<sp/>arma::mat.</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputDataType<sp/>=<sp/>arma::mat,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputDataType<sp/>=<sp/>arma::mat&gt;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ExampleLayer</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>ExampleLayer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outSize)<sp/>:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inputSize(inSize),<sp/>outputSize(outSize)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal">code</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal">The<sp/>constructor<sp/>for<sp/>\c<sp/>ExampleLayer<sp/>will<sp/>build<sp/>the<sp/>layer<sp/>given<sp/>the<sp/>input<sp/>and</highlight></codeline>
<codeline lineno="455"><highlight class="normal">output<sp/>size.<sp/>Note<sp/>that,<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>the<sp/>input<sp/>or<sp/>output<sp/>size<sp/>information<sp/>isn</highlight><highlight class="stringliteral">&apos;t<sp/>used</highlight></codeline>
<codeline lineno="456"><highlight class="stringliteral">internally<sp/>it&apos;</highlight><highlight class="normal">s<sp/>not<sp/>necessary<sp/>to<sp/>provide<sp/>a<sp/>specific<sp/>constructor.<sp/>Also,<sp/>one<sp/>could</highlight></codeline>
<codeline lineno="457"><highlight class="normal">add<sp/>additional<sp/>or<sp/>other<sp/>information<sp/>that<sp/>are<sp/>necessary<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>layer</highlight></codeline>
<codeline lineno="458"><highlight class="normal">construction.<sp/>One<sp/>example<sp/>could<sp/>be:</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="461"><highlight class="normal">ExampleLayer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratio<sp/>=<sp/>0.5)<sp/>:<sp/>ratio(ratio)<sp/>{</highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here*/</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal">code</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal">When<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>constructor<sp/>is<sp/>finished,<sp/>the<sp/>entire<sp/>layer<sp/>will<sp/>be<sp/>built<sp/>and<sp/>is<sp/>ready</highlight></codeline>
<codeline lineno="465"><highlight class="normal">to<sp/>be<sp/>used.<sp/>Next,<sp/>as<sp/>pointed<sp/>out<sp/>above,<sp/>each<sp/>layer<sp/>has<sp/>to<sp/>follow<sp/>the<sp/>LayerType</highlight></codeline>
<codeline lineno="466"><highlight class="normal">API,<sp/>so<sp/>we<sp/>must<sp/>implement<sp/>some<sp/>additional<sp/>functions.</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputType&gt;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Forward(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputType&amp;<sp/>input,<sp/>OutputType&amp;<sp/>output)</highlight></codeline>
<codeline lineno="471"><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/>arma::ones(input.n_rows,<sp/>input.n_cols);</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ErrorType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>GradientType&gt;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Backward(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputType&amp;<sp/>input,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ErrorType&amp;<sp/>gy,<sp/>GradientType&amp;<sp/>g)</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>g<sp/>=<sp/>arma::zeros(gy.n_rows,<sp/>gy.n_cols)<sp/>+<sp/>gy;</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ErrorType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>GradientType&gt;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Gradient(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputType&amp;<sp/>input,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ErrorType&amp;<sp/>error,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GradientType&amp;<sp/>gradient)</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>gradient<sp/>=<sp/>arma::zeros(input.n_rows,<sp/>input.n_cols)<sp/>*<sp/>error;</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal">code</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal">The<sp/>three<sp/>functions<sp/>\c<sp/>Forward(),<sp/>\c<sp/>Backward()<sp/>and<sp/>\c<sp/>Gradient()<sp/>(which<sp/>is</highlight></codeline>
<codeline lineno="491"><highlight class="normal">needed<sp/>for<sp/>a<sp/>differentiable<sp/>layer)<sp/>contain<sp/>the<sp/>main<sp/>logic<sp/>of<sp/>the<sp/>layer.<sp/>The</highlight></codeline>
<codeline lineno="492"><highlight class="normal">following<sp/>functions<sp/>are<sp/>just<sp/>to<sp/>access<sp/>and<sp/>manipulate<sp/>the<sp/>different<sp/>layer</highlight></codeline>
<codeline lineno="493"><highlight class="normal">parameters.</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="496"><highlight class="normal">OutputDataType&amp;<sp/>Parameters()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>weights;<sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal">InputDataType&amp;<sp/>InputParameter()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputParameter;<sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal">OutputDataType&amp;<sp/>OutputParameter()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputParameter;<sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal">OutputDataType&amp;<sp/>Delta()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta;<sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal">OutputDataType&amp;<sp/>Gradient()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gradient;<sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal">code</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal">Since<sp/>some<sp/>of<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>methods<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">members<sp/>we<sp/>have<sp/>to<sp/>define<sp/>them.</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="506"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>size_t<sp/>inSize,<sp/>outSize;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>OutputDataType<sp/>weights,<sp/>delta,<sp/>gradient,<sp/>outputParameter;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>InputDataType<sp/>inputParameter;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal">code</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal">Note<sp/>some<sp/>members<sp/>are<sp/>just<sp/>here<sp/>so<sp/>\c<sp/>ExampleLayer<sp/>compiles<sp/>without<sp/>warning.</highlight></codeline>
<codeline lineno="513"><highlight class="normal">For<sp/>instance,<sp/>\c<sp/>inputSize<sp/>is<sp/>not<sp/>required<sp/>to<sp/>be<sp/>a<sp/>member<sp/>of<sp/>every<sp/>type<sp/>of</highlight></codeline>
<codeline lineno="514"><highlight class="normal">layer.</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">There<sp/>is<sp/>one<sp/>last<sp/>method<sp/>that<sp/>is<sp/>especially<sp/>interesting<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/>layer<sp/>that<sp/>shares</highlight></codeline>
<codeline lineno="517"><highlight class="normal">parameter.<sp/>Since<sp/>the<sp/>layer<sp/>weights<sp/>are<sp/><ref refid="bindings_2cli_2CMakeLists_8txt_1a6cb7600e385afaebaa9cd3321e336597" kindref="member">set</ref><sp/>once<sp/>the<sp/>complete<sp/>model<sp/>is<sp/>defined,</highlight></codeline>
<codeline lineno="518"><highlight class="normal">it</highlight><highlight class="stringliteral">&apos;s<sp/>not<sp/>possible<sp/>to<sp/>split<sp/>the<sp/>weights<sp/>during<sp/>the<sp/>construction<sp/>time.<sp/>To<sp/>solve</highlight></codeline>
<codeline lineno="519"><highlight class="stringliteral">this<sp/>issue,<sp/>a<sp/>layer<sp/>can<sp/>implement<sp/>the<sp/>\c<sp/>Reset()<sp/>method<sp/>which<sp/>is<sp/>called<sp/>once<sp/>the</highlight></codeline>
<codeline lineno="520"><highlight class="stringliteral">layer<sp/>parameter<sp/>is<sp/>set.</highlight></codeline>
<codeline lineno="521"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="522"><highlight class="stringliteral">@section<sp/>model_setup_training_anntut<sp/>Model<sp/>Setup<sp/>&amp;<sp/>Training</highlight></codeline>
<codeline lineno="523"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="524"><highlight class="stringliteral">Once<sp/>the<sp/>base<sp/>container<sp/>is<sp/>selected<sp/>(\c<sp/>FNN<sp/>or<sp/>\c<sp/>RNN),<sp/>the<sp/>\c<sp/>Add<sp/>method<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="525"><highlight class="stringliteral">used<sp/>to<sp/>add<sp/>layers<sp/>to<sp/>the<sp/>model.<sp/><sp/>The<sp/>code<sp/>below<sp/>adds<sp/>two<sp/>linear<sp/>layers<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="526"><highlight class="stringliteral">model---the<sp/>first<sp/>takes<sp/>512<sp/>units<sp/>as<sp/>input<sp/>and<sp/>gives<sp/>256<sp/>output<sp/>units,<sp/>and</highlight></codeline>
<codeline lineno="527"><highlight class="stringliteral">the<sp/>second<sp/>takes<sp/>256<sp/>units<sp/>as<sp/>input<sp/>and<sp/>gives<sp/>128<sp/>output<sp/>units.</highlight></codeline>
<codeline lineno="528"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="529"><highlight class="stringliteral">@code</highlight></codeline>
<codeline lineno="530"><highlight class="stringliteral">FFN&lt;&gt;<sp/>model;</highlight></codeline>
<codeline lineno="531"><highlight class="stringliteral">model.Add&lt;Linear&lt;&gt;<sp/>&gt;(512,<sp/>256);</highlight></codeline>
<codeline lineno="532"><highlight class="stringliteral">model.Add&lt;Linear&lt;&gt;<sp/>&gt;(256,<sp/>128);</highlight></codeline>
<codeline lineno="533"><highlight class="stringliteral">@endcode</highlight></codeline>
<codeline lineno="534"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="535"><highlight class="stringliteral">The<sp/>model<sp/>is<sp/>trained<sp/>on<sp/>Armadillo<sp/>matrices.<sp/>For<sp/>training<sp/>a<sp/>model,<sp/>you<sp/>will</highlight></codeline>
<codeline lineno="536"><highlight class="stringliteral">typically<sp/>use<sp/>the<sp/>\c<sp/>Train()<sp/>function:</highlight></codeline>
<codeline lineno="537"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="538"><highlight class="stringliteral">@code</highlight></codeline>
<codeline lineno="539"><highlight class="stringliteral">arma::mat<sp/>trainingSet,<sp/>trainingLabels;</highlight></codeline>
<codeline lineno="540"><highlight class="stringliteral">model.Train(trainingSet,<sp/>trainingLabels);</highlight></codeline>
<codeline lineno="541"><highlight class="stringliteral">@endcode</highlight></codeline>
<codeline lineno="542"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="543"><highlight class="stringliteral">You<sp/>can<sp/>use<sp/>mlpack&apos;</highlight><highlight class="normal">s<sp/>\c<sp/><ref refid="namespacemlpack_1_1data_1abbff2a667bf247e00b1fc09b7ca5f831" kindref="member">Load</ref>()<sp/>function<sp/>to<sp/>load<sp/>a<sp/>dataset<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="546"><highlight class="normal">arma::mat<sp/>trainingSet;</highlight></codeline>
<codeline lineno="547"><highlight class="normal">data::<ref refid="namespacemlpack_1_1data_1abbff2a667bf247e00b1fc09b7ca5f831" kindref="member">Load</ref>(&quot;dataset.csv&quot;,<sp/>dataset,<sp/>true);</highlight></codeline>
<codeline lineno="548"><highlight class="normal">@endcode</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="551"><highlight class="normal">$<sp/>cat<sp/>dataset.csv</highlight></codeline>
<codeline lineno="552"><highlight class="normal">0,<sp/>1,<sp/>4</highlight></codeline>
<codeline lineno="553"><highlight class="normal">1,<sp/>0,<sp/>5</highlight></codeline>
<codeline lineno="554"><highlight class="normal">1,<sp/>1,<sp/>1</highlight></codeline>
<codeline lineno="555"><highlight class="normal">2,<sp/>0,<sp/>2</highlight></codeline>
<codeline lineno="556"><highlight class="normal">@endcode</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal">The<sp/>type<sp/>does<sp/>not<sp/>necessarily<sp/>need<sp/>to<sp/>be<sp/>a<sp/>CSV;<sp/>it<sp/>can<sp/>be<sp/>any<sp/>supported<sp/>storage</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><ref refid="namespacemlpack_1_1data_1a387137c43ed9616d39ba90e890d181eb" kindref="member">format</ref>,<sp/>assuming<sp/>that<sp/>it<sp/>is<sp/>a<sp/>coordinate-<ref refid="namespacemlpack_1_1data_1a387137c43ed9616d39ba90e890d181eb" kindref="member">format</ref><sp/>file<sp/>in<sp/>the<sp/><ref refid="namespacemlpack_1_1data_1a387137c43ed9616d39ba90e890d181eb" kindref="member">format</ref><sp/>specified</highlight></codeline>
<codeline lineno="560"><highlight class="normal">above.<sp/><sp/>For<sp/>more<sp/>information<sp/>on<sp/><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>file<sp/>formats,<sp/>see<sp/>the<sp/>documentation<sp/>for</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref>::data::<ref refid="namespacemlpack_1_1data_1abbff2a667bf247e00b1fc09b7ca5f831" kindref="member">Load</ref>().</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal">@note</highlight></codeline>
<codeline lineno="564"><highlight class="normal">It’s<sp/>often<sp/>a<sp/>good<sp/>idea<sp/>to<sp/>normalize<sp/>or<sp/>standardize<sp/>your<sp/>data,<sp/>for<sp/>example<sp/>using:</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="567"><highlight class="normal">for<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dataset.n_cols;<sp/>++i)</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>dataset.col(i)<sp/>/=<sp/>norm(dataset.col(i),<sp/>2);</highlight></codeline>
<codeline lineno="569"><highlight class="normal">@endcode</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal">Also,<sp/>it<sp/>is<sp/>possible<sp/>to<sp/>retrain<sp/>a<sp/>model<sp/>with<sp/>new<sp/>parameters<sp/>or<sp/>with</highlight></codeline>
<codeline lineno="572"><highlight class="normal">a<sp/>new<sp/>reference<sp/><ref refid="bindings_2cli_2CMakeLists_8txt_1a6cb7600e385afaebaa9cd3321e336597" kindref="member">set</ref>.<sp/>This<sp/>is<sp/>functionally<sp/>equivalent<sp/>to<sp/>creating<sp/>a<sp/>new<sp/>model.</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal">@section<sp/>model_saving_loading_anntut<sp/>Saving<sp/>&amp;<sp/>Loading</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal">Using<sp/>\c<sp/><ref refid="namespacecereal" kindref="compound">cereal</ref><sp/>(for<sp/>more<sp/>information<sp/>about<sp/>the<sp/>internals<sp/>see</highlight></codeline>
<codeline lineno="577"><highlight class="normal">[the<sp/>Cereal<sp/>website](http:</highlight><highlight class="comment">//uscilab.github.io/cereal/)),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>is<sp/>able<sp/>to<sp/>load<sp/>and<sp/>save<sp/>machine<sp/>learning<sp/>models<sp/>with<sp/>ease.<sp/>To<sp/>save<sp/>a</highlight></codeline>
<codeline lineno="579"><highlight class="normal">trained<sp/>neural<sp/>network<sp/>to<sp/>disk.<sp/>The<sp/>example<sp/>below<sp/>builds<sp/>a<sp/>model<sp/>on<sp/>the<sp/>\c</highlight></codeline>
<codeline lineno="580"><highlight class="normal">thyroid<sp/>dataset<sp/>and<sp/>then<sp/>saves<sp/>the<sp/>model<sp/>to<sp/>the<sp/>file<sp/>\c<sp/>model.<ref refid="namespacemlpack_1_1data_1a387137c43ed9616d39ba90e890d181ebac0a194d2e3cadd6447861e57368c2581" kindref="member">xml</ref><sp/>for<sp/>later<sp/>use.</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>training<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal">arma::mat<sp/>dataset;</highlight></codeline>
<codeline lineno="585"><highlight class="normal">data::<ref refid="namespacemlpack_1_1data_1abbff2a667bf247e00b1fc09b7ca5f831" kindref="member">Load</ref>(&quot;thyroid_train.csv&quot;,<sp/>dataset,<sp/>true);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Split<sp/>the<sp/>labels<sp/>from<sp/>the<sp/>training<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal">arma::mat<sp/>trainData<sp/>=<sp/>dataset.submat(0,<sp/>0,<sp/>dataset.n_rows<sp/>-<sp/>4,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>dataset.n_cols<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Split<sp/>the<sp/>data<sp/>from<sp/>the<sp/>training<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Subtract<sp/>1<sp/>so<sp/>the<sp/>labels<sp/>are<sp/>the<sp/>range<sp/>from<sp/>0<sp/>to<sp/>(numClasses<sp/>-<sp/>1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal">arma::mat<sp/>trainLabels<sp/>=<sp/>dataset.submat(dataset.n_rows<sp/>-<sp/>3,<sp/>0,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>dataset.n_rows<sp/>-<sp/>1,<sp/>dataset.n_cols<sp/>-<sp/>1)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>network.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal">FFN&lt;&gt;<sp/>model;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">model.Add&lt;Linear&lt;&gt;<sp/>&gt;(trainData.n_rows,<sp/>3);</highlight></codeline>
<codeline lineno="599"><highlight class="normal">model.Add&lt;<ref refid="namespacemlpack_1_1ann_1ad4f35bf0f4f5e2750668e17c2d07a27b" kindref="member">SigmoidLayer</ref>&lt;&gt;<sp/>&gt;();</highlight></codeline>
<codeline lineno="600"><highlight class="normal">model.Add&lt;LogSoftMax&lt;&gt;<sp/>&gt;();</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Train<sp/>the<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal">model.Train(trainData,<sp/>trainLabels);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>Predict<sp/>method<sp/>to<sp/>get<sp/>the<sp/>assignments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal">arma::mat<sp/>assignments;</highlight></codeline>
<codeline lineno="607"><highlight class="normal">model.Predict(trainData,<sp/>assignments);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal">data::<ref refid="namespacemlpack_1_1data_1accd1605a1d160c09ee75c93a587dc313" kindref="member">Save</ref>(&quot;model.<ref refid="namespacemlpack_1_1data_1a387137c43ed9616d39ba90e890d181ebac0a194d2e3cadd6447861e57368c2581" kindref="member">xml</ref>&quot;,<sp/>&quot;model&quot;,<sp/>model,<sp/>false);</highlight></codeline>
<codeline lineno="610"><highlight class="normal">@endcode</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal">After<sp/>this,<sp/>the<sp/>file<sp/>model.<ref refid="namespacemlpack_1_1data_1a387137c43ed9616d39ba90e890d181ebac0a194d2e3cadd6447861e57368c2581" kindref="member">xml</ref><sp/>will<sp/>be<sp/><ref refid="bindings_2python_2CMakeLists_8txt_1ad866171b6bf1f2f02d150f72971bc67a" kindref="member">available</ref><sp/>in<sp/>the<sp/>current<sp/>working</highlight></codeline>
<codeline lineno="613"><highlight class="normal">directory.</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal">Now,<sp/>we<sp/>can<sp/>look<sp/>at<sp/>the<sp/>output<sp/>model<sp/>file,<sp/>\c<sp/>model.<ref refid="namespacemlpack_1_1data_1a387137c43ed9616d39ba90e890d181ebac0a194d2e3cadd6447861e57368c2581" kindref="member">xml</ref>:</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="618"><highlight class="normal">$<sp/>cat<sp/>model.<ref refid="namespacemlpack_1_1data_1a387137c43ed9616d39ba90e890d181ebac0a194d2e3cadd6447861e57368c2581" kindref="member">xml</ref></highlight></codeline>
<codeline lineno="619"><highlight class="normal">&lt;?<ref refid="namespacemlpack_1_1data_1a387137c43ed9616d39ba90e890d181ebac0a194d2e3cadd6447861e57368c2581" kindref="member">xml</ref><sp/>version=&quot;1.0&quot;<sp/>encoding=&quot;utf-8&quot;?&gt;</highlight></codeline>
<codeline lineno="620"><highlight class="normal">&lt;<ref refid="namespacecereal" kindref="compound">cereal</ref>&gt;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>&lt;model&gt;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;cereal_class_version&gt;0&lt;/cereal_class_version&gt;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;parameter&gt;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;n_rows&gt;60&lt;/n_rows&gt;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;n_cols&gt;1&lt;/n_cols&gt;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;vec_state&gt;0&lt;/vec_state&gt;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;elem&gt;10.461979353567767&lt;/elem&gt;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;elem&gt;-10.040855482151116&lt;/elem&gt;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;elem&gt;0.18048901768535316&lt;/elem&gt;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;elem&gt;4.8989495084787169&lt;/elem&gt;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;elem&gt;-4.4381643782652276&lt;/elem&gt;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;elem&gt;0.049477846402230616&lt;/elem&gt;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;elem&gt;2.5271808924795987&lt;/elem&gt;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;elem&gt;-3.96993488526287&lt;/elem&gt;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;/parameter&gt;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;width&gt;0&lt;/width&gt;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;height&gt;0&lt;/height&gt;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;reset&gt;true&lt;/reset&gt;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;value0&gt;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;vecSize&gt;3&lt;/vecSize&gt;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;value0&gt;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;which&gt;30&lt;/which&gt;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;value0&gt;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;cereal_class_version&gt;0&lt;/cereal_class_version&gt;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;smartPointer&gt;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;ptr_wrapper&gt;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;valid&gt;1&lt;/valid&gt;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;data&gt;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;cereal_class_version&gt;0&lt;/cereal_class_version&gt;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;inSize&gt;19&lt;/inSize&gt;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;outSize&gt;3&lt;/outSize&gt;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/data&gt;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/ptr_wrapper&gt;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/smartPointer&gt;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/value0&gt;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/value0&gt;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;value1&gt;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;which&gt;6&lt;/which&gt;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;value0&gt;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;cereal_class_version&gt;0&lt;/cereal_class_version&gt;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;smartPointer&gt;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;ptr_wrapper&gt;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;valid&gt;1&lt;/valid&gt;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;data&gt;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;cereal_class_version&gt;0&lt;/cereal_class_version&gt;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/data&gt;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/ptr_wrapper&gt;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/smartPointer&gt;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/value0&gt;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/value1&gt;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;value2&gt;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;which&gt;32&lt;/which&gt;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;value0&gt;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;cereal_class_version&gt;0&lt;/cereal_class_version&gt;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;smartPointer&gt;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;ptr_wrapper&gt;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;valid&gt;1&lt;/valid&gt;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;data&gt;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;cereal_class_version&gt;0&lt;/cereal_class_version&gt;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/data&gt;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/ptr_wrapper&gt;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/smartPointer&gt;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/value0&gt;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/value2&gt;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;/value0&gt;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>&lt;/model&gt;</highlight></codeline>
<codeline lineno="688"><highlight class="normal">&lt;/<ref refid="namespacecereal" kindref="compound">cereal</ref>&gt;</highlight></codeline>
<codeline lineno="689"><highlight class="normal">@endcode</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal">As<sp/>you<sp/>can<sp/>see,<sp/>the<sp/>\c<sp/>\&lt;parameter\&gt;<sp/>section<sp/>of<sp/>\c<sp/>model.<ref refid="namespacemlpack_1_1data_1a387137c43ed9616d39ba90e890d181ebac0a194d2e3cadd6447861e57368c2581" kindref="member">xml</ref><sp/>contains<sp/>the<sp/>trained</highlight></codeline>
<codeline lineno="692"><highlight class="normal">network<sp/>weights.<sp/><sp/>We<sp/>can<sp/>see<sp/>that<sp/>this<sp/>section<sp/>also<sp/>contains<sp/>the<sp/>network<sp/>input</highlight></codeline>
<codeline lineno="693"><highlight class="normal">size,<sp/>which<sp/>is<sp/>66<sp/>rows<sp/>and<sp/>1<sp/>column.<sp/>Note<sp/>that<sp/>in<sp/>this<sp/>example,<sp/>we<sp/>used<sp/>three</highlight></codeline>
<codeline lineno="694"><highlight class="normal">different<sp/>layers,<sp/>as<sp/>can<sp/>be<sp/>seen<sp/>by<sp/>looking<sp/>at<sp/>the<sp/>\c<sp/>\&lt;network\&gt;<sp/>section.<sp/>Each</highlight></codeline>
<codeline lineno="695"><highlight class="normal">node<sp/>has<sp/>a<sp/>unique<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>that<sp/>is<sp/>used<sp/>to<sp/>reconstruct<sp/>the<sp/>model<sp/>when<sp/>loading.</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal">The<sp/>models<sp/>can<sp/>also<sp/>be<sp/>saved<sp/>as<sp/>\c<sp/>.bin<sp/>or<sp/>\c<sp/>.txt;<sp/>the<sp/>\c<sp/>.<ref refid="namespacemlpack_1_1data_1a387137c43ed9616d39ba90e890d181ebac0a194d2e3cadd6447861e57368c2581" kindref="member">xml</ref><sp/><ref refid="namespacemlpack_1_1data_1a387137c43ed9616d39ba90e890d181eb" kindref="member">format</ref><sp/>provides</highlight></codeline>
<codeline lineno="698"><highlight class="normal">a<sp/>human-inspectable<sp/><ref refid="namespacemlpack_1_1data_1a387137c43ed9616d39ba90e890d181eb" kindref="member">format</ref><sp/>(though<sp/>the<sp/>models<sp/>tend<sp/>to<sp/>be<sp/>quite<sp/>complex<sp/>and<sp/>may</highlight></codeline>
<codeline lineno="699"><highlight class="normal">be<sp/>difficult<sp/>to<sp/>read).<sp/>These<sp/>models<sp/>can<sp/>then<sp/>be<sp/>re-used<sp/>to<sp/>be<sp/>used<sp/>for</highlight></codeline>
<codeline lineno="700"><highlight class="normal">classification<sp/>or<sp/>other<sp/>tasks.</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal">So,<sp/>instead<sp/>of<sp/>saving<sp/>or<sp/>training<sp/>a<sp/>network,<sp/><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>can<sp/>also<sp/>load<sp/>a<sp/>pre-trained</highlight></codeline>
<codeline lineno="703"><highlight class="normal">model.<sp/>For<sp/>instance,<sp/>the<sp/>example<sp/>below<sp/>will<sp/>load<sp/>the<sp/>model<sp/>from<sp/>\c<sp/>model.<ref refid="namespacemlpack_1_1data_1a387137c43ed9616d39ba90e890d181ebac0a194d2e3cadd6447861e57368c2581" kindref="member">xml</ref><sp/>and</highlight></codeline>
<codeline lineno="704"><highlight class="normal">then<sp/>generate<sp/>the<sp/>class<sp/>predictions<sp/>for<sp/>the<sp/>\c<sp/>thyroid<sp/>test<sp/>dataset.</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="707"><highlight class="normal">data::<ref refid="namespacemlpack_1_1data_1abbff2a667bf247e00b1fc09b7ca5f831" kindref="member">Load</ref>(&quot;thyroid_test.csv&quot;,<sp/>dataset,<sp/>true);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal">arma::mat<sp/>testData<sp/>=<sp/>dataset.submat(0,<sp/>0,<sp/>dataset.n_rows<sp/>-<sp/>4,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>dataset.n_cols<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal">data::<ref refid="namespacemlpack_1_1data_1abbff2a667bf247e00b1fc09b7ca5f831" kindref="member">Load</ref>(&quot;model.<ref refid="namespacemlpack_1_1data_1a387137c43ed9616d39ba90e890d181ebac0a194d2e3cadd6447861e57368c2581" kindref="member">xml</ref>&quot;,<sp/>&quot;model&quot;,<sp/>model);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal">arma::mat<sp/>predictions;</highlight></codeline>
<codeline lineno="715"><highlight class="normal">model.Predict(testData,<sp/>predictions);</highlight></codeline>
<codeline lineno="716"><highlight class="normal">@endcode</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal">This<sp/>enables<sp/>the<sp/>possibility<sp/>to<sp/>distribute<sp/>a<sp/>model<sp/>without<sp/>having<sp/>to<sp/>train<sp/>it</highlight></codeline>
<codeline lineno="719"><highlight class="normal">first<sp/>or<sp/>simply<sp/>to<sp/>save<sp/>a<sp/>model<sp/>for<sp/>later<sp/>use.<sp/>Note<sp/>that<sp/>loading<sp/>will<sp/>also<sp/>work</highlight></codeline>
<codeline lineno="720"><highlight class="normal">on<sp/>different<sp/>machines.</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal">@section<sp/>extracting_parameters_anntut<sp/>Extracting<sp/>Parameters</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal">To<sp/>access<sp/>the<sp/>weights<sp/>from<sp/>the<sp/>neural<sp/>network<sp/>layers,<sp/>you<sp/>can<sp/>call<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="725"><highlight class="normal">function<sp/>on<sp/>any<sp/>initialized<sp/>network:</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="728"><highlight class="normal">model.Parameters();</highlight></codeline>
<codeline lineno="729"><highlight class="normal">@endcode</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal">which<sp/>will<sp/>return<sp/>the<sp/>complete<sp/>model<sp/>parameters<sp/>as<sp/>an<sp/>armadillo<sp/>matrix<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal">however<sp/>often<sp/>it<sp/>is<sp/>useful<sp/>to<sp/>not<sp/>only<sp/>have<sp/>the<sp/>parameters<sp/>for<sp/>the<sp/>complete</highlight></codeline>
<codeline lineno="733"><highlight class="normal">network,<sp/>but<sp/>the<sp/>parameters<sp/>of<sp/>a<sp/>specific<sp/>layer.<sp/>Another<sp/>method,<sp/>\c<sp/>Model(),</highlight></codeline>
<codeline lineno="734"><highlight class="normal">makes<sp/>this<sp/>easily<sp/>possible:</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal">@code</highlight></codeline>
<codeline lineno="737"><highlight class="normal">model.Model()[1].Parameters();</highlight></codeline>
<codeline lineno="738"><highlight class="normal">@endcode</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal">In<sp/>the<sp/>example<sp/>above,<sp/>we<sp/>get<sp/>the<sp/>weights<sp/>of<sp/>the<sp/>second<sp/>layer.</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal">@section<sp/>further_anntut<sp/>Further<sp/>documentation</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal">For<sp/>further<sp/>documentation<sp/>on<sp/>the<sp/>ann<sp/>classes,<sp/>consult<sp/>the<sp/>\ref<sp/><ref refid="namespacemlpack" kindref="compound">mlpack</ref>::ann</highlight></codeline>
<codeline lineno="745"><highlight class="normal">&quot;complete<sp/>API<sp/>documentation&quot;.</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal">*/</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/doc/tutorials/ann/ann.txt"/>
  </compounddef>
</doxygen>
