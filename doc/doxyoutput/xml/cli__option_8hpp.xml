<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="cli__option_8hpp" kind="file" language="C++">
    <compoundname>cli_option.hpp</compoundname>
    <includes local="no">string</includes>
    <includes refid="io_8hpp" local="no">mlpack/core/util/io.hpp</includes>
    <includes refid="parameter__type_8hpp" local="yes">parameter_type.hpp</includes>
    <includes refid="add__to__cli11_8hpp" local="yes">add_to_cli11.hpp</includes>
    <includes refid="cli_2default__param_8hpp" local="yes">default_param.hpp</includes>
    <includes refid="output__param_8hpp" local="yes">output_param.hpp</includes>
    <includes refid="cli_2get__printable__param_8hpp" local="yes">get_printable_param.hpp</includes>
    <includes refid="string__type__param_8hpp" local="yes">string_type_param.hpp</includes>
    <includes refid="cli_2get__param_8hpp" local="yes">get_param.hpp</includes>
    <includes refid="get__raw__param_8hpp" local="yes">get_raw_param.hpp</includes>
    <includes refid="map__parameter__name_8hpp" local="yes">map_parameter_name.hpp</includes>
    <includes refid="set__param_8hpp" local="yes">set_param.hpp</includes>
    <includes refid="cli_2get__printable__param__name_8hpp" local="yes">get_printable_param_name.hpp</includes>
    <includes refid="cli_2get__printable__param__value_8hpp" local="yes">get_printable_param_value.hpp</includes>
    <includes refid="cli_2get__allocated__memory_8hpp" local="yes">get_allocated_memory.hpp</includes>
    <includes refid="cli_2delete__allocated__memory_8hpp" local="yes">delete_allocated_memory.hpp</includes>
    <includes refid="in__place__copy_8hpp" local="yes">in_place_copy.hpp</includes>
    <incdepgraph>
      <node id="5">
        <label>list</label>
      </node>
      <node id="93">
        <label>default_param_impl.hpp</label>
      </node>
      <node id="84">
        <label>save_impl.hpp</label>
      </node>
      <node id="60">
        <label>atomic</label>
      </node>
      <node id="76">
        <label>dataset_mapper_impl.hpp</label>
      </node>
      <node id="82">
        <label>load_image_impl.hpp</label>
      </node>
      <node id="45">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="21">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="96">
        <label>get_printable_param.hpp</label>
        <link refid="cli_2get__printable__param_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>iomanip</label>
      </node>
      <node id="30">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cstdint</label>
      </node>
      <node id="92">
        <label>default_param.hpp</label>
        <link refid="cli_2default__param_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>get_printable_param_name.hpp</label>
        <link refid="cli_2get__printable__param__name_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="29">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="71">
        <label>mlpack/core/data/load.hpp</label>
        <link refid="load_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>program_doc.hpp</label>
        <link refid="program__doc_8hpp"/>
      </node>
      <node id="98">
        <label>string_type_param.hpp</label>
        <link refid="string__type__param_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="97">
        <label>get_printable_param_impl.hpp</label>
      </node>
      <node id="52">
        <label>arma_config.hpp</label>
      </node>
      <node id="53">
        <label>mlpack/core/util/log.hpp</label>
        <link refid="log_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>parameter_type.hpp</label>
        <link refid="parameter__type_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>io_impl.hpp</label>
      </node>
      <node id="91">
        <label>third_party/CLI/CLI11.hpp</label>
      </node>
      <node id="42">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="9">
        <label>cmath</label>
      </node>
      <node id="28">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="17">
        <label>stdexcept</label>
      </node>
      <node id="37">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>mlpack/core/data/map_policies/datatype.hpp</label>
        <link refid="datatype_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="49">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="11">
        <label>cfloat</label>
      </node>
      <node id="67">
        <label>binding_details.hpp</label>
        <link refid="binding__details_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>boost/variant.hpp</label>
      </node>
      <node id="56">
        <label>prefixedoutstream_impl.hpp</label>
      </node>
      <node id="65">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="25">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="48">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="57">
        <label>nulloutstream.hpp</label>
        <link refid="nulloutstream_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>boost/any.hpp</label>
      </node>
      <node id="27">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="47">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>mlpack/core/util/is_std_vector.hpp</label>
        <link refid="is__std__vector_8hpp"/>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>map_policies/increment_policy.hpp</label>
        <link refid="increment__policy_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>cstdio</label>
      </node>
      <node id="78">
        <label>extension.hpp</label>
        <link refid="extension_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>get_param.hpp</label>
        <link refid="cli_2get__param_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>tuple</label>
      </node>
      <node id="23">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="40">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>prefixedoutstream.hpp</label>
        <link refid="prefixedoutstream_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>delete_allocated_memory.hpp</label>
        <link refid="cli_2delete__allocated__memory_8hpp"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>output_param.hpp</label>
        <link refid="output__param_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>image_info_impl.hpp</label>
      </node>
      <node id="89">
        <label>vector</label>
      </node>
      <node id="81">
        <label>load_vec_impl.hpp</label>
      </node>
      <node id="69">
        <label>version.hpp</label>
        <link refid="src_2mlpack_2core_2util_2version_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>streambuf</label>
      </node>
      <node id="19">
        <label>utility</label>
      </node>
      <node id="43">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="80">
        <label>load_model_impl.hpp</label>
      </node>
      <node id="34">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="105">
        <label>get_printable_param_value.hpp</label>
        <link refid="cli_2get__printable__param__value_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="46">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>param_data.hpp</label>
        <link refid="param__data_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>cstdlib</label>
      </node>
      <node id="10">
        <label>cctype</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="87">
        <label>add_to_cli11.hpp</label>
        <link refid="add__to__cli11_8hpp"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/aakash/mlpack/src/mlpack/bindings/cli/cli_option.hpp</label>
        <link refid="cli__option_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>unordered_map</label>
      </node>
      <node id="77">
        <label>image_info.hpp</label>
        <link refid="image__info_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>climits</label>
      </node>
      <node id="102">
        <label>set_param.hpp</label>
        <link refid="set__param_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>dataset_mapper.hpp</label>
        <link refid="dataset__mapper_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>mutex</label>
      </node>
      <node id="83">
        <label>mlpack/core/data/save.hpp</label>
        <link refid="save_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>get_raw_param.hpp</label>
        <link refid="get__raw__param_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>chrono</label>
      </node>
      <node id="90">
        <label>map_parameter_name.hpp</label>
        <link refid="map__parameter__name_8hpp"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="109">
        <label>in_place_copy.hpp</label>
        <link refid="in__place__copy_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>thread</label>
      </node>
      <node id="106">
        <label>get_printable_param_value_impl.hpp</label>
      </node>
      <node id="104">
        <label>get_printable_param_name_impl.hpp</label>
      </node>
      <node id="50">
        <label>type_traits</label>
      </node>
      <node id="107">
        <label>get_allocated_memory.hpp</label>
        <link refid="cli_2get__allocated__memory_8hpp"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="20">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="44">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>string_type_param_impl.hpp</label>
      </node>
      <node id="16">
        <label>cstring</label>
      </node>
      <node id="35">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="3">
        <label>mlpack/core/util/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>output_param_impl.hpp</label>
      </node>
      <node id="24">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="72">
        <label>format.hpp</label>
        <link refid="format_8hpp"/>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1bindings_1_1cli_1_1CLIOption" prot="public">mlpack::bindings::cli::CLIOption</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1bindings">mlpack::bindings</innernamespace>
    <innernamespace refid="namespacemlpack_1_1bindings_1_1cli">mlpack::bindings::cli</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="cli__option_8hpp_1a294fc523905c47107e300766a9e3a2b5" prot="public" static="no">
        <name>BASH_CLEAR</name>
        <initializer>&quot;\033[0m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/bindings/cli/cli_option.hpp" line="121" column="17"/>
      </memberdef>
      <memberdef kind="define" id="cli__option_8hpp_1a2b1a18a6c36b8de0798f369f5dc438b8" prot="public" static="no">
        <name>BASH_RED</name>
        <initializer>&quot;\033[0;31m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/bindings/cli/cli_option.hpp" line="120" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Matthew Amidon</para>
</simplesect>
Definition of the Option class, which is used to define parameters which are used by CLI.</para>
<para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_BINDINGS_CLI_CLI_OPTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_BINDINGS_CLI_CLI_OPTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="io_8hpp" kindref="compound">mlpack/core/util/io.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parameter__type_8hpp" kindref="compound">parameter_type.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="add__to__cli11_8hpp" kindref="compound">add_to_cli11.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="R_2default__param_8hpp" kindref="compound">default_param.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="output__param_8hpp" kindref="compound">output_param.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tests_2get__printable__param_8hpp" kindref="compound">get_printable_param.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="string__type__param_8hpp" kindref="compound">string_type_param.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tests_2get__param_8hpp" kindref="compound">get_param.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="get__raw__param_8hpp" kindref="compound">get_raw_param.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="map__parameter__name_8hpp" kindref="compound">map_parameter_name.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="set__param_8hpp" kindref="compound">set_param.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="markdown_2get__printable__param__name_8hpp" kindref="compound">get_printable_param_name.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="markdown_2get__printable__param__value_8hpp" kindref="compound">get_printable_param_value.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tests_2get__allocated__memory_8hpp" kindref="compound">get_allocated_memory.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tests_2delete__allocated__memory_8hpp" kindref="compound">delete_allocated_memory.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="in__place__copy_8hpp" kindref="compound">in_place_copy.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">bindings<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cli<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="48" refid="classmlpack_1_1bindings_1_1cli_1_1CLIOption" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1bindings_1_1cli_1_1CLIOption" kindref="compound">CLIOption</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68" refid="classmlpack_1_1bindings_1_1cli_1_1CLIOption_1a0f704d6254efd250f762171f2f6069f3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1bindings_1_1cli_1_1CLIOption_1a0f704d6254efd250f762171f2f6069f3" kindref="member">CLIOption</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>N<sp/>defaultValue,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>identifier,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>description,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>alias,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>cppName,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>required<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>input<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>noTranspose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/></highlight><highlight class="comment">/*testName*/</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>ParamData<sp/>object<sp/>to<sp/>give<sp/>to<sp/>CLI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmlpack_1_1util_1_1ParamData" kindref="compound">util::ParamData</ref><sp/>data;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structmlpack_1_1util_1_1ParamData_1a378e4473b8cd1fccf534804887f2bc85" kindref="member">desc</ref><sp/>=<sp/>description;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structmlpack_1_1util_1_1ParamData_1a9b45b3e13bd9167aab02e17e08916231" kindref="member">name</ref><sp/>=<sp/>identifier;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structmlpack_1_1util_1_1ParamData_1a87a03c93b016f6878e3a0609835b426e" kindref="member">tname</ref><sp/>=<sp/><ref refid="param__data_8hpp_1ac909d914008cce49fa42ddd10b9b36c5" kindref="member">TYPENAME</ref>(N);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structmlpack_1_1util_1_1ParamData_1a367d2c852ad5beb11758c57d8ece7316" kindref="member">alias</ref><sp/>=<sp/>alias[0];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structmlpack_1_1util_1_1ParamData_1a5afa034ef66e23047379bcba2eb70b8d" kindref="member">wasPassed</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structmlpack_1_1util_1_1ParamData_1a203e71e5671737f2e7d33147dd19f391" kindref="member">noTranspose</ref><sp/>=<sp/>noTranspose;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structmlpack_1_1util_1_1ParamData_1a89ebe0265f74c9919a622df7dccbfe5c" kindref="member">required</ref><sp/>=<sp/>required;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structmlpack_1_1util_1_1ParamData_1a8ababadb8dc64acf8792317844e562ba" kindref="member">input</ref><sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structmlpack_1_1util_1_1ParamData_1a992c70a16169035bc9e2e8f9953d91ed" kindref="member">loaded</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structmlpack_1_1util_1_1ParamData_1aea39f2c5cb5ec83de4d1f81b1a74f0cc" kindref="member">persistent</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>All<sp/>CLI<sp/>parameters<sp/>are<sp/>not<sp/>persistent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>data.<ref refid="structmlpack_1_1util_1_1ParamData_1ac31602a050d4b0bea81380c312d320b6" kindref="member">cppType</ref><sp/>=<sp/>cppName;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>default<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::is_same&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::remove_pointer&lt;N&gt;::type,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1bindings_1_1cli_1_1ParameterType" kindref="compound">ParameterType</ref>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::remove_pointer&lt;N&gt;::type&gt;::type&gt;::value)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="structmlpack_1_1util_1_1ParamData_1a5f3b0aadfd9d42a5574b7f3a0565cb52" kindref="member">value</ref><sp/>=<sp/>boost::any(defaultValue);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1bindings_1_1cli_1_1ParameterType" kindref="compound">ParameterType&lt;typename std::remove_pointer&lt;N&gt;::type</ref>&gt;::type<sp/>tmp;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data.<ref refid="structmlpack_1_1util_1_1ParamData_1a5f3b0aadfd9d42a5574b7f3a0565cb52" kindref="member">value</ref><sp/>=<sp/>boost::any(std::tuple&lt;N,<sp/>decltype(tmp)&gt;(defaultValue,<sp/>tmp));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>tname<sp/>=<sp/>data.<ref refid="structmlpack_1_1util_1_1ParamData_1a87a03c93b016f6878e3a0609835b426e" kindref="member">tname</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>cliName<sp/>=<sp/><ref refid="namespacemlpack_1_1bindings_1_1cli_1a908de0eb0d234dfd05f6ffd87ae24529" kindref="member">MapParameterName</ref>&lt;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::remove_pointer&lt;N&gt;::type&gt;(identifier);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>progOptId<sp/>=<sp/>(alias[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>?</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(1,<sp/>alias[0])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,--&quot;</highlight><highlight class="normal"><sp/>+<sp/>cliName<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;--&quot;</highlight><highlight class="normal"><sp/>+<sp/>cliName;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>check<sp/>to<sp/>ensure<sp/>that<sp/>the<sp/>boost<sp/>name<sp/>isn&apos;t<sp/>already<sp/>in<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>util::ParamData&gt;&amp;<sp/>parameters<sp/>=</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1IO_1a3eee2232cb321a8295fa908ba12868ad" kindref="member">IO::Parameters</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parameters.count(cliName)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>fake<sp/>Log::Fatal<sp/>since<sp/>it<sp/>may<sp/>not<sp/>yet<sp/>be<sp/>initialized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporarily<sp/>define<sp/>color<sp/>code<sp/>escape<sp/>sequences.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>BASH_RED<sp/>&quot;\033[0;31m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>BASH_CLEAR<sp/>&quot;\033[0m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>BASH_RED<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>BASH_CLEAR<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>outstream<sp/>object<sp/>for<sp/>detecting<sp/>duplicate<sp/>identifiers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1util_1_1PrefixedOutStream" kindref="compound">util::PrefixedOutStream</ref><sp/>outstr(std::cerr,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cli__option_8hpp_1a2b1a18a6c36b8de0798f369f5dc438b8" kindref="member">BASH_RED</ref><sp/></highlight><highlight class="stringliteral">&quot;[FATAL]<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="cli__option_8hpp_1a294fc523905c47107e300766a9e3a2b5" kindref="member">BASH_CLEAR</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>fatal<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#undef<sp/>BASH_RED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#undef<sp/>BASH_CLEAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outstr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parameter<sp/>--&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cliName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>data.<ref refid="structmlpack_1_1util_1_1ParamData_1a367d2c852ad5beb11758c57d8ece7316" kindref="member">alias</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;is<sp/>defined<sp/>multiple<sp/>times<sp/>with<sp/>the<sp/>same<sp/>identifiers.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1IO_1adc908d81414046d89563fd0571d55cac" kindref="member">IO::Add</ref>(std::move(data));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>some<sp/>function<sp/>pointers<sp/>that<sp/>we<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1IO_1aacf8da2c1644e932b3cbd46703a3d889" kindref="member">IO::GetSingleton</ref>().<ref refid="classmlpack_1_1IO_1a1a6b843f1c06bc4c23630d76510b491e" kindref="member">functionMap</ref>[tname][</highlight><highlight class="stringliteral">&quot;DefaultParam&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;DefaultParam&lt;N&gt;;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1IO_1aacf8da2c1644e932b3cbd46703a3d889" kindref="member">IO::GetSingleton</ref>().<ref refid="classmlpack_1_1IO_1a1a6b843f1c06bc4c23630d76510b491e" kindref="member">functionMap</ref>[tname][</highlight><highlight class="stringliteral">&quot;OutputParam&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;OutputParam&lt;N&gt;;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1IO_1aacf8da2c1644e932b3cbd46703a3d889" kindref="member">IO::GetSingleton</ref>().<ref refid="classmlpack_1_1IO_1a1a6b843f1c06bc4c23630d76510b491e" kindref="member">functionMap</ref>[tname][</highlight><highlight class="stringliteral">&quot;GetPrintableParam&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;GetPrintableParam&lt;N&gt;;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1IO_1aacf8da2c1644e932b3cbd46703a3d889" kindref="member">IO::GetSingleton</ref>().<ref refid="classmlpack_1_1IO_1a1a6b843f1c06bc4c23630d76510b491e" kindref="member">functionMap</ref>[tname][</highlight><highlight class="stringliteral">&quot;StringTypeParam&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;StringTypeParam&lt;N&gt;;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1IO_1aacf8da2c1644e932b3cbd46703a3d889" kindref="member">IO::GetSingleton</ref>().<ref refid="classmlpack_1_1IO_1a1a6b843f1c06bc4c23630d76510b491e" kindref="member">functionMap</ref>[tname][</highlight><highlight class="stringliteral">&quot;GetParam&quot;</highlight><highlight class="normal">]<sp/>=<sp/>&amp;GetParam&lt;N&gt;;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1IO_1aacf8da2c1644e932b3cbd46703a3d889" kindref="member">IO::GetSingleton</ref>().<ref refid="classmlpack_1_1IO_1a1a6b843f1c06bc4c23630d76510b491e" kindref="member">functionMap</ref>[tname][</highlight><highlight class="stringliteral">&quot;GetRawParam&quot;</highlight><highlight class="normal">]<sp/>=<sp/>&amp;GetRawParam&lt;N&gt;;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1IO_1aacf8da2c1644e932b3cbd46703a3d889" kindref="member">IO::GetSingleton</ref>().<ref refid="classmlpack_1_1IO_1a1a6b843f1c06bc4c23630d76510b491e" kindref="member">functionMap</ref>[tname][</highlight><highlight class="stringliteral">&quot;AddToCLI11&quot;</highlight><highlight class="normal">]<sp/>=<sp/>&amp;AddToCLI11&lt;N&gt;;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1IO_1aacf8da2c1644e932b3cbd46703a3d889" kindref="member">IO::GetSingleton</ref>().<ref refid="classmlpack_1_1IO_1a1a6b843f1c06bc4c23630d76510b491e" kindref="member">functionMap</ref>[tname][</highlight><highlight class="stringliteral">&quot;MapParameterName&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;MapParameterName&lt;N&gt;;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1IO_1aacf8da2c1644e932b3cbd46703a3d889" kindref="member">IO::GetSingleton</ref>().<ref refid="classmlpack_1_1IO_1a1a6b843f1c06bc4c23630d76510b491e" kindref="member">functionMap</ref>[tname][</highlight><highlight class="stringliteral">&quot;GetPrintableParamName&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;GetPrintableParamName&lt;N&gt;;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1IO_1aacf8da2c1644e932b3cbd46703a3d889" kindref="member">IO::GetSingleton</ref>().<ref refid="classmlpack_1_1IO_1a1a6b843f1c06bc4c23630d76510b491e" kindref="member">functionMap</ref>[tname][</highlight><highlight class="stringliteral">&quot;GetPrintableParamValue&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;GetPrintableParamValue&lt;N&gt;;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1IO_1aacf8da2c1644e932b3cbd46703a3d889" kindref="member">IO::GetSingleton</ref>().<ref refid="classmlpack_1_1IO_1a1a6b843f1c06bc4c23630d76510b491e" kindref="member">functionMap</ref>[tname][</highlight><highlight class="stringliteral">&quot;GetAllocatedMemory&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;GetAllocatedMemory&lt;N&gt;;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1IO_1aacf8da2c1644e932b3cbd46703a3d889" kindref="member">IO::GetSingleton</ref>().<ref refid="classmlpack_1_1IO_1a1a6b843f1c06bc4c23630d76510b491e" kindref="member">functionMap</ref>[tname][</highlight><highlight class="stringliteral">&quot;DeleteAllocatedMemory&quot;</highlight><highlight class="normal">]<sp/>=</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;DeleteAllocatedMemory&lt;N&gt;;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1IO_1aacf8da2c1644e932b3cbd46703a3d889" kindref="member">IO::GetSingleton</ref>().<ref refid="classmlpack_1_1IO_1a1a6b843f1c06bc4c23630d76510b491e" kindref="member">functionMap</ref>[tname][</highlight><highlight class="stringliteral">&quot;InPlaceCopy&quot;</highlight><highlight class="normal">]<sp/>=<sp/>&amp;InPlaceCopy&lt;N&gt;;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cli</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>bindings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/bindings/cli/cli_option.hpp"/>
  </compounddef>
</doxygen>
