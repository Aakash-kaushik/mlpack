<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classmlpack_1_1neighbor_1_1NSWrapper" kind="class" language="C++" prot="public">
    <compoundname>mlpack::neighbor::NSWrapper</compoundname>
    <basecompoundref refid="classmlpack_1_1neighbor_1_1NSWrapperBase" prot="public" virt="non-virtual">NSWrapperBase</basecompoundref>
    <includes refid="ns__model_8hpp" local="no">ns_model.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename SortPolicy</type>
      </param>
      <param>
        <type>template&lt; typename TreeMetricType, typename TreeStatType, typename TreeMatType &gt; class</type>
        <declname>TreeType</declname>
        <defname>TreeType</defname>
      </param>
      <param>
        <type>template&lt; typename RuleType &gt; class</type>
        <declname>DualTreeTraversalType</declname>
        <defname>DualTreeTraversalType</defname>
        <defval>TreeType&lt;<ref refid="namespacemlpack_1_1metric_1a0306f114fdf32dcdfa8f015408cfc37d" kindref="member">metric::EuclideanDistance</ref>,                      <ref refid="classmlpack_1_1neighbor_1_1NeighborSearchStat" kindref="compound">NeighborSearchStat</ref>&lt;SortPolicy&gt;,                      arma::mat&gt;::template DualTreeTraverser</defval>
      </param>
      <param>
        <type>template&lt; typename RuleType &gt; class</type>
        <declname>SingleTreeTraversalType</declname>
        <defname>SingleTreeTraversalType</defname>
        <defval>TreeType&lt;<ref refid="namespacemlpack_1_1metric_1a0306f114fdf32dcdfa8f015408cfc37d" kindref="member">metric::EuclideanDistance</ref>,                      <ref refid="classmlpack_1_1neighbor_1_1NeighborSearchStat" kindref="compound">NeighborSearchStat</ref>&lt;SortPolicy&gt;,                      arma::mat&gt;::template SingleTreeTraverser</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classmlpack_1_1neighbor_1_1NSWrapper_1ad2fc06b46e6469a058f3a27bcc1ba9ef" prot="protected" static="no">
        <type><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref>&lt; SortPolicy, <ref refid="namespacemlpack_1_1metric_1a0306f114fdf32dcdfa8f015408cfc37d" kindref="member">metric::EuclideanDistance</ref>, arma::mat, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;</type>
        <definition>typedef NeighborSearch&lt;SortPolicy, metric::EuclideanDistance, arma::mat, TreeType, DualTreeTraversalType, SingleTreeTraversalType&gt; NSType</definition>
        <argsstring></argsstring>
        <name>NSType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="167" column="2" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NSWrapper_1a36863b56066068618466a828a1e75578" prot="protected" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1neighbor_1_1NSWrapper_1ad2fc06b46e6469a058f3a27bcc1ba9ef" kindref="member">NSType</ref></type>
        <definition>NSType ns</definition>
        <argsstring></argsstring>
        <name>ns</name>
        <briefdescription>
<para>The instantiated <ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref> object that we are wrapping. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="170" column="10" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="170" bodyend="-1"/>
        <referencedby refid="classmlpack_1_1neighbor_1_1NSWrapper_1aff320b9a86b77a150e630c01d5888273" compoundref="ns__model_8hpp" startline="119" endline="119">NSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::Dataset</referencedby>
        <referencedby refid="classmlpack_1_1neighbor_1_1NSWrapper_1af6d960193bb5db37e51416e12bf720de" compoundref="ns__model_8hpp" startline="127" endline="127">NSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::Epsilon</referencedby>
        <referencedby refid="classmlpack_1_1neighbor_1_1NSWrapper_1a23cdc4b734a3dc41722aaded92244fd4" compoundref="ns__model_8hpp" startline="122" endline="122">NSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::SearchMode</referencedby>
        <referencedby refid="classmlpack_1_1neighbor_1_1NSWrapper_1a65cba07328997659bec80b9879b15a51" compoundref="ns__model_8hpp" startline="155" endline="158">NSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::serialize</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSWrapper_1aa5e9531452fb70b839ae680037add615" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NSWrapper</definition>
        <argsstring>(const NeighborSearchMode searchMode, const double epsilon)</argsstring>
        <name>NSWrapper</name>
        <param>
          <type>const <ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15" kindref="member">NeighborSearchMode</ref></type>
          <declname>searchMode</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
<para>Construct the <ref refid="classmlpack_1_1neighbor_1_1NSWrapper" kindref="compound">NSWrapper</ref> object, initializing the internally-held <ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="104" column="3" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="104" bodyend="109"/>
        <referencedby refid="classmlpack_1_1neighbor_1_1NSWrapper_1a99ca7e011f7ab92c5ba440bc1304536d" compoundref="ns__model_8hpp" startline="116" endline="116">NSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::Clone</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSWrapper_1a33da04d4db6bb80d7354d3a3839bb408" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ~NSWrapper</definition>
        <argsstring>()</argsstring>
        <name>~NSWrapper</name>
        <briefdescription>
<para>Delete the <ref refid="classmlpack_1_1neighbor_1_1NSWrapper" kindref="compound">NSWrapper</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="112" column="11" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSWrapper_1a99ca7e011f7ab92c5ba440bc1304536d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classmlpack_1_1neighbor_1_1NSWrapper" kindref="compound">NSWrapper</ref> *</type>
        <definition>virtual NSWrapper* Clone</definition>
        <argsstring>() const</argsstring>
        <name>Clone</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1a56b413b249512d2cd48e40ec69eda9cf">Clone</reimplements>
        <reimplementedby refid="classmlpack_1_1neighbor_1_1LeafSizeNSWrapper_1a1ada05f817cfde693b0ce9cb758f8e4d">Clone</reimplementedby>
        <reimplementedby refid="classmlpack_1_1neighbor_1_1SpillNSWrapper_1a09080a653d528fcd34bb630ea566badb">Clone</reimplementedby>
        <briefdescription>
<para>Create a copy of this <ref refid="classmlpack_1_1neighbor_1_1NSWrapper" kindref="compound">NSWrapper</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>This correctly handles polymorphism. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="116" column="21" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="116" bodyend="116"/>
        <references refid="classmlpack_1_1neighbor_1_1NSWrapper_1aa5e9531452fb70b839ae680037add615" compoundref="ns__model_8hpp" startline="104" endline="109">NSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::NSWrapper</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSWrapper_1aff320b9a86b77a150e630c01d5888273" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; Dataset</definition>
        <argsstring>() const</argsstring>
        <name>Dataset</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1a2effd31755e4ae5f85e14ed94e7fab8e">Dataset</reimplements>
        <briefdescription>
<para>Get a reference to the reference set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="119" column="19" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="119" bodyend="119"/>
        <references refid="classmlpack_1_1neighbor_1_1NSWrapper_1a36863b56066068618466a828a1e75578" compoundref="ns__model_8hpp" startline="170">NSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::ns</references>
        <references refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a0a975940b302b4efec85bbe2d8b36251" compoundref="neighbor__search_8hpp" startline="330" endline="330">NeighborSearch&lt; SortPolicy, MetricType, MatType, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::ReferenceSet</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSWrapper_1ab6a080993b32456443eced5df2f8b9b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double &amp;</type>
        <definition>double&amp; Epsilon</definition>
        <argsstring>()</argsstring>
        <name>Epsilon</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1a68739e281bac3db475e5423fbbca8081">Epsilon</reimplements>
        <briefdescription>
<para>Modify epsilon, the approximation parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="129" column="10" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="129" bodyend="129"/>
        <references refid="classmlpack_1_1neighbor_1_1NeighborSearch_1af6d960193bb5db37e51416e12bf720de" compoundref="neighbor__search_8hpp" startline="325" endline="325">NeighborSearch&lt; SortPolicy, MetricType, MatType, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::Epsilon</references>
        <references refid="classmlpack_1_1neighbor_1_1NSWrapper_1a36863b56066068618466a828a1e75578" compoundref="ns__model_8hpp" startline="170">NSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::ns</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSWrapper_1af6d960193bb5db37e51416e12bf720de" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double Epsilon</definition>
        <argsstring>() const</argsstring>
        <name>Epsilon</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1a9bd0afbec99b28bbc273e297ec9fe352">Epsilon</reimplements>
        <briefdescription>
<para>Get epsilon, the approximation parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="127" column="10" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="127" bodyend="127"/>
        <references refid="classmlpack_1_1neighbor_1_1NeighborSearch_1af6d960193bb5db37e51416e12bf720de" compoundref="neighbor__search_8hpp" startline="325" endline="325">NeighborSearch&lt; SortPolicy, MetricType, MatType, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::Epsilon</references>
        <references refid="classmlpack_1_1neighbor_1_1NSWrapper_1a36863b56066068618466a828a1e75578" compoundref="ns__model_8hpp" startline="170">NSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::ns</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSWrapper_1a1f033e50f5a14937123de77cb439fcb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Search</definition>
        <argsstring>(arma::mat &amp;&amp;querySet, const size_t k, arma::Mat&lt; size_t &gt; &amp;neighbors, arma::mat &amp;distances, const size_t, const double)</argsstring>
        <name>Search</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1a9e7389351073f295e1aee942dbd7942a">Search</reimplements>
        <reimplementedby refid="classmlpack_1_1neighbor_1_1SpillNSWrapper_1a7f3908cf84625e816aac3b8ae78d302f">Search</reimplementedby>
        <reimplementedby refid="classmlpack_1_1neighbor_1_1LeafSizeNSWrapper_1a4aef4b9e215d07dbc33e97f5ff574ab2">Search</reimplementedby>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>querySet</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>neighbors</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>const</type>
          <declname>size_t</declname>
        </param>
        <param>
          <type>const double</type>
        </param>
        <briefdescription>
<para>Perform bichromatic neighbor search (i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>search with a separate query set). For <ref refid="classmlpack_1_1neighbor_1_1NSWrapper" kindref="compound">NSWrapper</ref>, we ignore the extra parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="140" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSWrapper_1aeb3fa1fab8680898b6326556ea81a55b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Search</definition>
        <argsstring>(const size_t k, arma::Mat&lt; size_t &gt; &amp;neighbors, arma::mat &amp;distances)</argsstring>
        <name>Search</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1a98ca743413f49d02f39ecb99184443d4">Search</reimplements>
        <param>
          <type>const size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>neighbors</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>distances</declname>
        </param>
        <briefdescription>
<para>Perform monochromatic neighbor search (i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>use the reference set as the query set). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="149" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSWrapper_1a6071cc412821cb4ce4364fbc2a0a8533" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15" kindref="member">NeighborSearchMode</ref> &amp;</type>
        <definition>NeighborSearchMode&amp; SearchMode</definition>
        <argsstring>()</argsstring>
        <name>SearchMode</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1ad405b5a3c8c8a828941afefd3826b49d">SearchMode</reimplements>
        <briefdescription>
<para>Modify the search mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="124" column="22" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="124" bodyend="124"/>
        <references refid="classmlpack_1_1neighbor_1_1NSWrapper_1a36863b56066068618466a828a1e75578" compoundref="ns__model_8hpp" startline="170">NSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::ns</references>
        <references refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a23cdc4b734a3dc41722aaded92244fd4" compoundref="neighbor__search_8hpp" startline="320" endline="320">NeighborSearch&lt; SortPolicy, MetricType, MatType, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::SearchMode</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSWrapper_1a23cdc4b734a3dc41722aaded92244fd4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15" kindref="member">NeighborSearchMode</ref></type>
        <definition>NeighborSearchMode SearchMode</definition>
        <argsstring>() const</argsstring>
        <name>SearchMode</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1ac565d27ec3cd6370688baf14efed6556">SearchMode</reimplements>
        <briefdescription>
<para>Get the search mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="122" column="22" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="122" bodyend="122"/>
        <references refid="classmlpack_1_1neighbor_1_1NSWrapper_1a36863b56066068618466a828a1e75578" compoundref="ns__model_8hpp" startline="170">NSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::ns</references>
        <references refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a23cdc4b734a3dc41722aaded92244fd4" compoundref="neighbor__search_8hpp" startline="320" endline="320">NeighborSearch&lt; SortPolicy, MetricType, MatType, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::SearchMode</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSWrapper_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the <ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref> model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="155" column="8" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="155" bodyend="158"/>
        <references refid="classmlpack_1_1neighbor_1_1NSWrapper_1a36863b56066068618466a828a1e75578" compoundref="ns__model_8hpp" startline="170">NSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;::ns</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSWrapper_1ae4fcf39ad7ed7dca39fe8bd00fd76082" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Train</definition>
        <argsstring>(arma::mat &amp;&amp;referenceSet, const size_t, const double, const double)</argsstring>
        <name>Train</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1a870763190dedf5ec0d9a2118f742a517">Train</reimplements>
        <reimplementedby refid="classmlpack_1_1neighbor_1_1SpillNSWrapper_1a0bfff11e794dd6c4c7323cd204c67378">Train</reimplementedby>
        <reimplementedby refid="classmlpack_1_1neighbor_1_1LeafSizeNSWrapper_1af1b6a13a041581bdb250c303a2736c7c">Train</reimplementedby>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>referenceSet</declname>
        </param>
        <param>
          <type>const</type>
          <declname>size_t</declname>
        </param>
        <param>
          <type>const double</type>
        </param>
        <param>
          <type>const double</type>
        </param>
        <briefdescription>
<para>Train the model with the given options. </para>
        </briefdescription>
        <detaileddescription>
<para>For <ref refid="classmlpack_1_1neighbor_1_1NSWrapper" kindref="compound">NSWrapper</ref>, we ignore the extra parameters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="133" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classmlpack_1_1neighbor_1_1NSWrapper" kindref="compound">NSWrapper</ref> is a wrapper class for most <ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref> types. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>NSWrapperBase</label>
        <link refid="classmlpack_1_1neighbor_1_1NSWrapperBase"/>
      </node>
      <node id="1">
        <label>NSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1NSWrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>SpillNSWrapper&lt; SortPolicy &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1SpillNSWrapper"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>NSWrapper&lt; SortPolicy, tree::SPTree, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistDualTreeTraverser, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistSingleTreeTraverser &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1NSWrapper"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; SortPolicy, tree::SPTree, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistDualTreeTraverser, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistSingleTreeTraverser &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>NSWrapper&lt; SortPolicy, TreeType, TreeType&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DualTreeTraverser, TreeType&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template SingleTreeTraverser &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1NSWrapper"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; SortPolicy, TreeType, TreeType&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DualTreeTraverser, TreeType&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template SingleTreeTraverser &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>LeafSizeNSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1LeafSizeNSWrapper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>NeighborSearch&lt; SortPolicy, MetricType, MatType, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1NeighborSearch"/>
      </node>
      <node id="3">
        <label>NeighborSearch&lt; SortPolicy, metric::EuclideanDistance, arma::mat, TreeType, TreeType&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DualTreeTraverser, TreeType&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template SingleTreeTraverser &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1NeighborSearch"/>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; SortPolicy, metric::EuclideanDistance, arma::mat, TreeType, TreeType&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DualTreeTraverser, TreeType&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template SingleTreeTraverser &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>NSWrapperBase</label>
        <link refid="classmlpack_1_1neighbor_1_1NSWrapperBase"/>
      </node>
      <node id="1">
        <label>NSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1NSWrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>ns</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="99" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="100" bodyend="171"/>
    <listofallmembers>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1a99ca7e011f7ab92c5ba440bc1304536d" prot="public" virt="virtual"><scope>mlpack::neighbor::NSWrapper</scope><name>Clone</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1aff320b9a86b77a150e630c01d5888273" prot="public" virt="virtual"><scope>mlpack::neighbor::NSWrapper</scope><name>Dataset</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1af6d960193bb5db37e51416e12bf720de" prot="public" virt="virtual"><scope>mlpack::neighbor::NSWrapper</scope><name>Epsilon</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1ab6a080993b32456443eced5df2f8b9b9" prot="public" virt="virtual"><scope>mlpack::neighbor::NSWrapper</scope><name>Epsilon</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1a36863b56066068618466a828a1e75578" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NSWrapper</scope><name>ns</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1ad2fc06b46e6469a058f3a27bcc1ba9ef" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NSWrapper</scope><name>NSType</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1aa5e9531452fb70b839ae680037add615" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSWrapper</scope><name>NSWrapper</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1afe3cd9a0f215a7de10b6d31cbfc33dca" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSWrapper</scope><name>NSWrapperBase</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1a1f033e50f5a14937123de77cb439fcb5" prot="public" virt="virtual"><scope>mlpack::neighbor::NSWrapper</scope><name>Search</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1aeb3fa1fab8680898b6326556ea81a55b" prot="public" virt="virtual"><scope>mlpack::neighbor::NSWrapper</scope><name>Search</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1a23cdc4b734a3dc41722aaded92244fd4" prot="public" virt="virtual"><scope>mlpack::neighbor::NSWrapper</scope><name>SearchMode</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1a6071cc412821cb4ce4364fbc2a0a8533" prot="public" virt="virtual"><scope>mlpack::neighbor::NSWrapper</scope><name>SearchMode</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSWrapper</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1ae4fcf39ad7ed7dca39fe8bd00fd76082" prot="public" virt="virtual"><scope>mlpack::neighbor::NSWrapper</scope><name>Train</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1a33da04d4db6bb80d7354d3a3839bb408" prot="public" virt="virtual"><scope>mlpack::neighbor::NSWrapper</scope><name>~NSWrapper</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1a62d0554213b6a374ac784bd040c4377d" prot="public" virt="virtual"><scope>mlpack::neighbor::NSWrapper</scope><name>~NSWrapperBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
