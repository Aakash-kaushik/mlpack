<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="glimpse_8hpp" kind="file" language="C++">
    <compoundname>glimpse.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="layer__types_8hpp" local="yes">layer_types.hpp</includes>
    <includes local="no">algorithm</includes>
    <includes local="yes">glimpse_impl.hpp</includes>
    <includedby refid="layer_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/ann/layer/layer.hpp</includedby>
    <incdepgraph>
      <node id="59">
        <label>list</label>
      </node>
      <node id="173">
        <label>radial_basis_function_impl.hpp</label>
      </node>
      <node id="56">
        <label>atomic</label>
      </node>
      <node id="151">
        <label>mlpack/methods/ann/layer/reinforce_normal.hpp</label>
        <link refid="reinforce__normal_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>mlpack/methods/ann/layer/noisylinear.hpp</label>
        <link refid="noisylinear_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="137">
        <label>mlpack/methods/ann/layer/lp_pooling.hpp</label>
        <link refid="lp__pooling_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>mlpack/methods/ann/layer/multiply_constant.hpp</label>
        <link refid="multiply__constant_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="15">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="96">
        <label>concatenate_impl.hpp</label>
      </node>
      <node id="97">
        <label>mlpack/methods/ann/layer/dropout.hpp</label>
        <link refid="dropout_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>iomanip</label>
      </node>
      <node id="80">
        <label>mlpack/methods/ann/activation_functions/mish_function.hpp</label>
        <link refid="mish__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="172">
        <label>mlpack/methods/ann/layer/radial_basis_function.hpp</label>
        <link refid="radial__basis__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>mlpack/methods/ann/layer/isrlu.hpp</label>
        <link refid="isrlu_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>parametric_relu_impl.hpp</label>
      </node>
      <node id="120">
        <label>mlpack/methods/ann/layer/lookup.hpp</label>
        <link refid="lookup_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>pixel_shuffle_impl.hpp</label>
      </node>
      <node id="70">
        <label>alpha_dropout_impl.hpp</label>
      </node>
      <node id="124">
        <label>softmax_impl.hpp</label>
      </node>
      <node id="24">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>mlpack/methods/ann/init_rules/glorot_init.hpp</label>
        <link refid="glorot__init_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cstdint</label>
      </node>
      <node id="16">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="23">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="99">
        <label>mlpack/methods/ann/layer/elu.hpp</label>
        <link refid="elu_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>adaptive_mean_pooling_impl.hpp</label>
      </node>
      <node id="49">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="46">
        <label>arma_config.hpp</label>
      </node>
      <node id="140">
        <label>noisylinear_impl.hpp</label>
      </node>
      <node id="47">
        <label>mlpack/core/util/log.hpp</label>
        <link refid="log_8hpp"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>max_pooling_impl.hpp</label>
      </node>
      <node id="89">
        <label>mlpack/methods/ann/layer/batch_norm.hpp</label>
        <link refid="batch__norm_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/glimpse.hpp</label>
        <link refid="glimpse_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>mlpack/methods/ann/activation_functions/identity_function.hpp</label>
        <link refid="identity__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>mlpack/methods/ann/layer/subview.hpp</label>
        <link refid="subview_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="159">
        <label>bernoulli_distribution_impl.hpp</label>
      </node>
      <node id="36">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="3">
        <label>cmath</label>
      </node>
      <node id="22">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="149">
        <label>mlpack/methods/ann/layer/positional_encoding.hpp</label>
        <link refid="positional__encoding_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stdexcept</label>
      </node>
      <node id="114">
        <label>mlpack/methods/ann/regularizer/no_regularizer.hpp</label>
        <link refid="no__regularizer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>mlpack/methods/ann/layer/linear3d.hpp</label>
        <link refid="linear3d_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>string</label>
      </node>
      <node id="76">
        <label>mlpack/methods/ann/activation_functions/tanh_function.hpp</label>
        <link refid="tanh__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>mlpack/methods/ann/layer/adaptive_mean_pooling.hpp</label>
        <link refid="adaptive__mean__pooling_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>mlpack/methods/ann/activation_functions/rectifier_function.hpp</label>
        <link refid="rectifier__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="165">
        <label>hardshrink_impl.hpp</label>
      </node>
      <node id="60">
        <label>map</label>
      </node>
      <node id="154">
        <label>reparametrization_impl.hpp</label>
      </node>
      <node id="179">
        <label>glimpse_impl.hpp</label>
      </node>
      <node id="68">
        <label>add_impl.hpp</label>
      </node>
      <node id="178">
        <label>negative_log_likelihood_impl.hpp</label>
      </node>
      <node id="66">
        <label>mlpack/methods/ann/layer/add.hpp</label>
        <link refid="layer_2add_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cfloat</label>
      </node>
      <node id="81">
        <label>mlpack/methods/ann/activation_functions/lisht_function.hpp</label>
        <link refid="lisht__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>boost/variant.hpp</label>
      </node>
      <node id="51">
        <label>prefixedoutstream_impl.hpp</label>
      </node>
      <node id="163">
        <label>virtual_batch_norm_impl.hpp</label>
      </node>
      <node id="63">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="19">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="42">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>multiply_constant_impl.hpp</label>
      </node>
      <node id="108">
        <label>leaky_relu_impl.hpp</label>
      </node>
      <node id="126">
        <label>random_init.hpp</label>
        <link refid="ann_2init__rules_2random__init_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>constant_impl.hpp</label>
      </node>
      <node id="102">
        <label>hard_tanh_impl.hpp</label>
      </node>
      <node id="32">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="52">
        <label>nulloutstream.hpp</label>
        <link refid="nulloutstream_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="152">
        <label>reinforce_normal_impl.hpp</label>
      </node>
      <node id="109">
        <label>mlpack/methods/ann/layer/c_relu.hpp</label>
        <link refid="c__relu_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>mlpack/methods/ann/layer/pixel_shuffle.hpp</label>
        <link refid="pixel__shuffle_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>mlpack/methods/ann/layer/constant.hpp</label>
        <link refid="constant_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>linear_no_bias_impl.hpp</label>
      </node>
      <node id="33">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="153">
        <label>mlpack/methods/ann/layer/reparametrization.hpp</label>
        <link refid="reparametrization_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
      </node>
      <node id="176">
        <label>mlpack/methods/ann/convolution_rules/fft_convolution.hpp</label>
        <link refid="fft__convolution_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>mlpack/methods/ann/layer/base_layer.hpp</label>
        <link refid="base__layer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="175">
        <label>mlpack/methods/ann/convolution_rules/naive_convolution.hpp</label>
        <link refid="naive__convolution_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>layer_norm_impl.hpp</label>
      </node>
      <node id="2">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>mlpack/methods/ann/activation_functions/hard_swish_function.hpp</label>
        <link refid="hard__swish__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>mlpack/methods/ann/layer/multihead_attention.hpp</label>
        <link refid="multihead__attention_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>layer_types.hpp</label>
        <link refid="layer__types_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>random</label>
      </node>
      <node id="113">
        <label>mlpack/methods/ann/layer/linear_no_bias.hpp</label>
        <link refid="linear__no__bias_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="156">
        <label>select_impl.hpp</label>
      </node>
      <node id="164">
        <label>mlpack/methods/ann/layer/hardshrink.hpp</label>
        <link refid="hardshrink_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cstdio</label>
      </node>
      <node id="171">
        <label>softshrink_impl.hpp</label>
      </node>
      <node id="12">
        <label>tuple</label>
      </node>
      <node id="17">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="112">
        <label>flexible_relu_impl.hpp</label>
      </node>
      <node id="138">
        <label>lp_pooling_impl.hpp</label>
      </node>
      <node id="34">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="167">
        <label>celu_impl.hpp</label>
      </node>
      <node id="160">
        <label>spatial_dropout_impl.hpp</label>
      </node>
      <node id="50">
        <label>prefixedoutstream.hpp</label>
        <link refid="prefixedoutstream_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>gaussian_init.hpp</label>
        <link refid="gaussian__init_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>mlpack/methods/ann/layer/softshrink.hpp</label>
        <link refid="softshrink_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>mean_pooling_impl.hpp</label>
      </node>
      <node id="78">
        <label>mlpack/methods/ann/activation_functions/hard_sigmoid_function.hpp</label>
        <link refid="hard__sigmoid__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>mlpack/methods/ann/activation_functions/softplus_function.hpp</label>
        <link refid="softplus__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>streambuf</label>
      </node>
      <node id="142">
        <label>adaptive_max_pooling_impl.hpp</label>
      </node>
      <node id="130">
        <label>multihead_attention_impl.hpp</label>
      </node>
      <node id="128">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="177">
        <label>mlpack/methods/ann/loss_functions/negative_log_likelihood.hpp</label>
        <link refid="negative__log__likelihood_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>utility</label>
      </node>
      <node id="133">
        <label>mlpack/methods/ann/layer/max_pooling.hpp</label>
        <link refid="max__pooling_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>mlpack/methods/ann/layer/log_softmax.hpp</label>
        <link refid="log__softmax_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="87">
        <label>mlpack/methods/ann/activation_functions/tanh_exponential_function.hpp</label>
        <link refid="tanh__exponential__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="169">
        <label>isrlu_impl.hpp</label>
      </node>
      <node id="123">
        <label>mlpack/methods/ann/layer/softmax.hpp</label>
        <link refid="softmax_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="40">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cstdlib</label>
      </node>
      <node id="157">
        <label>mlpack/methods/ann/layer/spatial_dropout.hpp</label>
        <link refid="spatial__dropout_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cctype</label>
      </node>
      <node id="53">
        <label>iostream</label>
      </node>
      <node id="135">
        <label>mlpack/methods/ann/layer/mean_pooling.hpp</label>
        <link refid="mean__pooling_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>mlpack/methods/ann/layer/layer_traits.hpp</label>
        <link refid="layer__traits_8hpp"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>mlpack/methods/ann/activation_functions/gelu_function.hpp</label>
        <link refid="gelu__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>mlpack/methods/ann/activation_functions/gaussian_function.hpp</label>
        <link refid="gaussian__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>unordered_map</label>
      </node>
      <node id="105">
        <label>mlpack/methods/ann/layer/layer_norm.hpp</label>
        <link refid="layer__norm_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>lookup_impl.hpp</label>
      </node>
      <node id="6">
        <label>climits</label>
      </node>
      <node id="103">
        <label>mlpack/methods/ann/layer/join.hpp</label>
        <link refid="join_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>mlpack/methods/ann/layer/select.hpp</label>
        <link refid="select_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>mutex</label>
      </node>
      <node id="57">
        <label>chrono</label>
      </node>
      <node id="84">
        <label>mlpack/methods/ann/activation_functions/elish_function.hpp</label>
        <link refid="elish__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>mlpack/methods/ann/activation_functions/elliot_function.hpp</label>
        <link refid="elliot__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="158">
        <label>mlpack/methods/ann/dists/bernoulli_distribution.hpp</label>
        <link refid="bernoulli__distribution_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>dropout_impl.hpp</label>
      </node>
      <node id="119">
        <label>log_softmax_impl.hpp</label>
      </node>
      <node id="62">
        <label>thread</label>
      </node>
      <node id="145">
        <label>mlpack/methods/ann/layer/parametric_relu.hpp</label>
        <link refid="parametric__relu_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>c_relu_impl.hpp</label>
      </node>
      <node id="92">
        <label>bilinear_interpolation_impl.hpp</label>
      </node>
      <node id="104">
        <label>join_impl.hpp</label>
      </node>
      <node id="117">
        <label>linear3d_impl.hpp</label>
      </node>
      <node id="90">
        <label>batch_norm_impl.hpp</label>
      </node>
      <node id="166">
        <label>mlpack/methods/ann/layer/celu.hpp</label>
        <link refid="celu_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>mlpack/methods/ann/layer/flexible_relu.hpp</label>
        <link refid="flexible__relu_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>type_traits</label>
      </node>
      <node id="20">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="14">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="38">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>mlpack/methods/ann/layer/leaky_relu.hpp</label>
        <link refid="leaky__relu_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>algorithm</label>
      </node>
      <node id="150">
        <label>positional_encoding_impl.hpp</label>
      </node>
      <node id="141">
        <label>mlpack/methods/ann/layer/adaptive_max_pooling.hpp</label>
        <link refid="adaptive__max__pooling_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="174">
        <label>mlpack/methods/ann/convolution_rules/border_modes.hpp</label>
        <link refid="border__modes_8hpp"/>
      </node>
      <node id="69">
        <label>mlpack/methods/ann/layer/alpha_dropout.hpp</label>
        <link refid="alpha__dropout_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>mlpack/methods/ann/activation_functions/logistic_function.hpp</label>
        <link refid="logistic__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>mlpack/methods/ann/layer/hard_tanh.hpp</label>
        <link refid="hard__tanh_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cstring</label>
      </node>
      <node id="29">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="79">
        <label>mlpack/methods/ann/activation_functions/swish_function.hpp</label>
        <link refid="swish__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>mlpack/methods/ann/activation_functions/silu_function.hpp</label>
        <link refid="silu__function_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>elu_impl.hpp</label>
      </node>
      <node id="18">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="162">
        <label>mlpack/methods/ann/layer/virtual_batch_norm.hpp</label>
        <link refid="virtual__batch__norm_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>mlpack/methods/ann/layer/bilinear_interpolation.hpp</label>
        <link refid="bilinear__interpolation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>mlpack/methods/ann/layer/concatenate.hpp</label>
        <link refid="concatenate_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/glimpse.hpp</label>
        <link refid="glimpse_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/rnn.hpp</label>
        <link refid="rnn_8hpp"/>
      </node>
      <node id="6">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/categorical_dqn.hpp</label>
        <link refid="categorical__dqn_8hpp"/>
      </node>
      <node id="3">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/brnn.hpp</label>
        <link refid="brnn_8hpp"/>
      </node>
      <node id="9">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer_names.hpp</label>
        <link refid="layer__names_8hpp"/>
      </node>
      <node id="11">
        <label>/home/aakash/mlpack/src/mlpack/tests/custom_layer.hpp</label>
        <link refid="custom__layer_8hpp"/>
      </node>
      <node id="4">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp</label>
        <link refid="ffn_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp</label>
        <link refid="dueling__dqn_8hpp"/>
      </node>
      <node id="5">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp</label>
        <link refid="gan_8hpp"/>
      </node>
      <node id="8">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/simple_dqn.hpp</label>
        <link refid="simple__dqn_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1Glimpse" prot="public">mlpack::ann::Glimpse</innerclass>
    <innerclass refid="classmlpack_1_1ann_1_1MeanPoolingRule" prot="public">mlpack::ann::MeanPoolingRule</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marcus Edel</para>
</simplesect>
Definition of the GlimpseLayer class, which takes an input image and a location to extract a retina-like representation of the input image at different increasing scales.</para>
<para>For more information, see the following.</para>
<para><programlisting><codeline><highlight class="normal">@article{CoRR2014,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author<sp/><sp/>=<sp/>{Volodymyr<sp/>Mnih,<sp/>Nicolas<sp/>Heess,<sp/>Alex<sp/>Graves,<sp/>Koray<sp/>Kavukcuoglu},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title<sp/><sp/><sp/>=<sp/>{Recurrent<sp/>Models<sp/>of<sp/>Visual<sp/>Attention},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>journal<sp/>=<sp/>{CoRR},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>volume<sp/><sp/>=<sp/>{abs/1406.6247},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year<sp/><sp/><sp/><sp/>=<sp/>{2014},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>url<sp/><sp/><sp/><sp/><sp/>=<sp/>{https://arxiv.org/abs/1406.6247}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_LAYER_GLIMPSE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_LAYER_GLIMPSE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="layer__types_8hpp" kindref="compound">layer_types.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>The<sp/>mean<sp/>pooling<sp/>rule<sp/>for<sp/>convolution<sp/>neural<sp/>networks.<sp/>Average<sp/>all<sp/>values</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>within<sp/>the<sp/>receptive<sp/>block.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classmlpack_1_1ann_1_1MeanPoolingRule" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1MeanPoolingRule" kindref="compound">MeanPoolingRule</ref></highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Return<sp/>the<sp/>average<sp/>value<sp/>within<sp/>the<sp/>receptive<sp/>block.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>input<sp/>Input<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>pooling<sp/>operation.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="52" refid="classmlpack_1_1ann_1_1MeanPoolingRule_1af8f244d24fed0fa902eee94b0ace7df0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanPoolingRule_1af8f244d24fed0fa902eee94b0ace7df0" kindref="member">Pooling</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>input)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arma::mean(arma::mean(input));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Set<sp/>the<sp/>average<sp/>value<sp/>within<sp/>the<sp/>receptive<sp/>block.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>input<sp/>Input<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>pooling<sp/>operation.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>unpooled<sp/>value.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>output<sp/>The<sp/>unpooled<sp/>output<sp/>data.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="65" refid="classmlpack_1_1ann_1_1MeanPoolingRule_1a6987ba7a159efff2732b4af9ba83f97a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanPoolingRule_1a6987ba7a159efff2732b4af9ba83f97a" kindref="member">Unpooling</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>input,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/>MatType&amp;<sp/>output)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>arma::zeros&lt;MatType&gt;(input.n_rows,<sp/>input.n_cols);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean<sp/>=<sp/>arma::mean(arma::mean(input));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>output.elem(arma::find(mean<sp/>==<sp/>input,<sp/>1)).fill(value);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputDataType<sp/>=<sp/>arma::mat,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputDataType<sp/>=<sp/>arma::mat</highlight></codeline>
<codeline lineno="87"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="88" refid="classmlpack_1_1ann_1_1Glimpse" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1Glimpse" kindref="compound">Glimpse</ref></highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103" refid="classmlpack_1_1ann_1_1Glimpse_1a19c2ef07809ce53bd8eef72ed2c6e1eb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1a19c2ef07809ce53bd8eef72ed2c6e1eb" kindref="member">Glimpse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inSize<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>depth<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inputWidth<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inputHeight<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="117" refid="classmlpack_1_1ann_1_1Glimpse_1a461f849bc638c15bec262dc9c3a58abe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1a461f849bc638c15bec262dc9c3a58abe" kindref="member">Forward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,<sp/>arma::Mat&lt;eT&gt;&amp;<sp/>output);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="127" refid="classmlpack_1_1ann_1_1Glimpse_1ad9ad1a3bdb0f3fff5c839ed155e4bbf8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1ad9ad1a3bdb0f3fff5c839ed155e4bbf8" kindref="member">Backward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/></highlight><highlight class="comment">/*<sp/>input<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>gy,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>g);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classmlpack_1_1ann_1_1Glimpse_1a8bae962cc603d1cab8d80ec78f8d505d" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType&amp;<sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1a8bae962cc603d1cab8d80ec78f8d505d" kindref="member">OutputParameter</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputParameter;<sp/>}</highlight></codeline>
<codeline lineno="134" refid="classmlpack_1_1ann_1_1Glimpse_1a21d5f745f02c709625a4ee0907f004a5" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType&amp;<sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1a21d5f745f02c709625a4ee0907f004a5" kindref="member">OutputParameter</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputParameter;<sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classmlpack_1_1ann_1_1Glimpse_1ae7c8eba5764f021cd93e30efe638e63c" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType&amp;<sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1ae7c8eba5764f021cd93e30efe638e63c" kindref="member">Delta</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta;<sp/>}</highlight></codeline>
<codeline lineno="139" refid="classmlpack_1_1ann_1_1Glimpse_1ad6601342d560219ce951d554e69e5e87" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType&amp;<sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1ad6601342d560219ce951d554e69e5e87" kindref="member">Delta</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta;<sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classmlpack_1_1ann_1_1Glimpse_1a8f32d484de0d3abca25a1aa77a7ab855" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1a8f32d484de0d3abca25a1aa77a7ab855" kindref="member">Location</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>location)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;location<sp/>=<sp/>location;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classmlpack_1_1ann_1_1Glimpse_1a29346e3064da8f9e5f10596bedae0ba8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1a29346e3064da8f9e5f10596bedae0ba8" kindref="member">InputWidth</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputWidth;<sp/>}</highlight></codeline>
<codeline lineno="151" refid="classmlpack_1_1ann_1_1Glimpse_1a238e9d308df611a9300a4ca6756fef4d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1a238e9d308df611a9300a4ca6756fef4d" kindref="member">InputWidth</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputWidth;<sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classmlpack_1_1ann_1_1Glimpse_1afb3fd4ed60dd057e7852221b89206f15" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1afb3fd4ed60dd057e7852221b89206f15" kindref="member">InputHeight</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputHeight;<sp/>}</highlight></codeline>
<codeline lineno="156" refid="classmlpack_1_1ann_1_1Glimpse_1aefbba724eec397a928d5460bb209a360" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1aefbba724eec397a928d5460bb209a360" kindref="member">InputHeight</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputHeight;<sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classmlpack_1_1ann_1_1Glimpse_1a32b3e3fe787456847fc3b2c39586ecb1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1a32b3e3fe787456847fc3b2c39586ecb1" kindref="member">OutputWidth</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputWidth;<sp/>}</highlight></codeline>
<codeline lineno="161" refid="classmlpack_1_1ann_1_1Glimpse_1a54579ec9924e2a4a5bc0a4fb822ce80c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1a54579ec9924e2a4a5bc0a4fb822ce80c" kindref="member">OutputWidth</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputWidth;<sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classmlpack_1_1ann_1_1Glimpse_1a5ad7dbcaf1a622dafd897f79ab77890c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1a5ad7dbcaf1a622dafd897f79ab77890c" kindref="member">OutputHeight</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputHeight;<sp/>}</highlight></codeline>
<codeline lineno="166" refid="classmlpack_1_1ann_1_1Glimpse_1ac5112abf9f5e1face13ed965a8755b1d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1ac5112abf9f5e1face13ed965a8755b1d" kindref="member">OutputHeight</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputHeight;<sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classmlpack_1_1ann_1_1Glimpse_1a9f4103707f4d199ce5594d239b60443e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1a9f4103707f4d199ce5594d239b60443e" kindref="member">Deterministic</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>deterministic;<sp/>}</highlight></codeline>
<codeline lineno="171" refid="classmlpack_1_1ann_1_1Glimpse_1a42d4ee3da432cff20d3a41b8b1ec801c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1a42d4ee3da432cff20d3a41b8b1ec801c" kindref="member">Deterministic</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>deterministic;<sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classmlpack_1_1ann_1_1Glimpse_1ab642344aea1cea1d2a9469d1ab2c34fd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1ab642344aea1cea1d2a9469d1ab2c34fd" kindref="member">Depth</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>depth;<sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classmlpack_1_1ann_1_1Glimpse_1a5672c05ae5dd46d3887b137e2368b121" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1a5672c05ae5dd46d3887b137e2368b121" kindref="member">Scale</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scale;<sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classmlpack_1_1ann_1_1Glimpse_1adc2669016a821704c4c4aeb4651e9e87" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1adc2669016a821704c4c4aeb4651e9e87" kindref="member">InSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inSize;<sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classmlpack_1_1ann_1_1Glimpse_1a467c62da8a379d3066e836636a128036" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1a467c62da8a379d3066e836636a128036" kindref="member">GlimpseSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size;}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="classmlpack_1_1ann_1_1Glimpse_1a13ab93f234244a68f6ade76287284447" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1a13ab93f234244a68f6ade76287284447" kindref="member">InputShape</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="187"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inSize;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="195" refid="classmlpack_1_1ann_1_1Glimpse_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1Glimpse_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Transform<sp/>the<sp/>given<sp/>input<sp/>by<sp/>changing<sp/>rows<sp/>to<sp/>columns.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>w<sp/>The<sp/>input<sp/>matrix<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>transformation.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Transform(arma::mat&amp;<sp/>w)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>t<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>k<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>w.n_elem;<sp/>++k)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>w.n_cols;<sp/>++j,<sp/>++i)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w(k,<sp/>j)<sp/>=<sp/>t(i);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Transform<sp/>the<sp/>given<sp/>input<sp/>by<sp/>changing<sp/>rows<sp/>to<sp/>columns.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>w<sp/>The<sp/>input<sp/>matrix<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>transformation.</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Transform(arma::cube&amp;<sp/>w)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>w.n_slices;<sp/>++i)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat<sp/>t<sp/>=<sp/>w.slice(i);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Transform(t);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w.slice(i)<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Pooling(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kSize,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>output)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rStep<sp/>=<sp/>kSize;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cStep<sp/>=<sp/>kSize;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>input.n_cols;<sp/>j<sp/>+=<sp/>cStep)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input.n_rows;<sp/>i<sp/>+=<sp/>rStep)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output(i<sp/>/<sp/>rStep,<sp/>j<sp/>/<sp/>cStep)<sp/>+=<sp/>pooling.<ref refid="classmlpack_1_1ann_1_1MeanPoolingRule_1af8f244d24fed0fa902eee94b0ace7df0" kindref="member">Pooling</ref>(</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input(arma::span(i,<sp/>i<sp/>+<sp/>rStep<sp/>-<sp/>1),<sp/>arma::span(j,<sp/>j<sp/>+<sp/>cStep<sp/>-<sp/>1)));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Unpooling(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>error,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>output)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rStep<sp/>=<sp/>input.n_rows<sp/>/<sp/>error.n_rows;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cStep<sp/>=<sp/>input.n_cols<sp/>/<sp/>error.n_cols;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>unpooledError;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>input.n_cols;<sp/>j<sp/>+=<sp/>cStep)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input.n_rows;<sp/>i<sp/>+=<sp/>rStep)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>inputArea<sp/>=<sp/>input(arma::span(i,<sp/>i<sp/>+<sp/>rStep<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::span(j,<sp/>j<sp/>+<sp/>cStep<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pooling.<ref refid="classmlpack_1_1ann_1_1MeanPoolingRule_1a6987ba7a159efff2732b4af9ba83f97a" kindref="member">Unpooling</ref>(inputArea,<sp/>error(i<sp/>/<sp/>rStep,<sp/>j<sp/>/<sp/>cStep),</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unpooledError);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output(arma::span(i,<sp/>i<sp/>+<sp/>rStep<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::span(j,<sp/>j<sp/>+<sp/>cStep<sp/>-<sp/>1))<sp/>+=<sp/>unpooledError;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReSampling(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,<sp/>arma::Mat&lt;eT&gt;&amp;<sp/>output)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wRatio<sp/>=<sp/>(double)<sp/>(input.n_rows<sp/>-<sp/>1)<sp/>/<sp/>(size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hRatio<sp/>=<sp/>(double)<sp/>(input.n_cols<sp/>-<sp/>1)<sp/>/<sp/>(size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iWidth<sp/>=<sp/>input.n_rows<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iHeight<sp/>=<sp/>input.n_cols<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>size;<sp/>y++)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>size;<sp/>x++)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>wRatio<sp/>*<sp/>x;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>hRatio<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>4<sp/>nearest<sp/>neighbors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ixNw<sp/>=<sp/>std::floor(ix);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iyNw<sp/>=<sp/>std::floor(iy);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ixNe<sp/>=<sp/>ixNw<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iySw<sp/>=<sp/>iyNw<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>surfaces<sp/>to<sp/>each<sp/>neighbor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>se<sp/>=<sp/>(ix<sp/>-<sp/>ixNw)<sp/>*<sp/>(iy<sp/>-<sp/>iyNw);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sw<sp/>=<sp/>(ixNe<sp/>-<sp/>ix)<sp/>*<sp/>(iy<sp/>-<sp/>iyNw);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ne<sp/>=<sp/>(ix<sp/>-<sp/>ixNw)<sp/>*<sp/>(iySw<sp/>-<sp/>iy);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nw<sp/>=<sp/>(ixNe<sp/>-<sp/>ix)<sp/>*<sp/>(iySw<sp/>-<sp/>iy);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>weighted<sp/>sum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output(y,<sp/>x)<sp/>=<sp/>input(iyNw,<sp/>ixNw)<sp/>*<sp/>nw<sp/>+</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input(iyNw,<sp/>std::min(ixNe,<sp/><sp/>iWidth))<sp/>*<sp/>ne<sp/>+</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input(std::min(iySw,<sp/>iHeight),<sp/>ixNw)<sp/>*<sp/>sw<sp/>+</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input(std::min(iySw,<sp/>iHeight),<sp/>std::min(ixNe,<sp/>iWidth))<sp/>*<sp/>se;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DownwardReSampling(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>error,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>output)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iWidth<sp/>=<sp/>input.n_rows<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iHeight<sp/>=<sp/>input.n_cols<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wRatio<sp/>=<sp/>iWidth<sp/>/<sp/>(size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hRatio<sp/>=<sp/>iHeight<sp/>/<sp/>(size<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>size;<sp/>y++)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>size;<sp/>x++)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>wRatio<sp/>*<sp/>x;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iy<sp/>=<sp/>hRatio<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>4<sp/>nearest<sp/>neighbors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ixNw<sp/>=<sp/>std::floor(ix);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iyNw<sp/>=<sp/>std::floor(iy);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ixNe<sp/>=<sp/>ixNw<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>iySw<sp/>=<sp/>iyNw<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>surfaces<sp/>to<sp/>each<sp/>neighbor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>se<sp/>=<sp/>(ix<sp/>-<sp/>ixNw)<sp/>*<sp/>(iy<sp/>-<sp/>iyNw);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sw<sp/>=<sp/>(ixNe<sp/>-<sp/>ix)<sp/>*<sp/>(iy<sp/>-<sp/>iyNw);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ne<sp/>=<sp/>(ix<sp/>-<sp/>ixNw)<sp/>*<sp/>(iySw<sp/>-<sp/>iy);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nw<sp/>=<sp/>(ixNe<sp/>-<sp/>ix)<sp/>*<sp/>(iySw<sp/>-<sp/>iy);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ograd<sp/>=<sp/>error(y,<sp/>x);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output(iyNw,<sp/>ixNw)<sp/>=<sp/>output(iyNw,<sp/>ixNw)<sp/>+<sp/>nw<sp/>*<sp/>ograd;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output(iyNw,<sp/>std::min(ixNe,<sp/>iWidth))<sp/>=<sp/>output(iyNw,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min(ixNe,<sp/>iWidth))<sp/>+<sp/>ne<sp/>*<sp/>ograd;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output(std::min(iySw,<sp/>iHeight),<sp/>ixNw)<sp/>=<sp/>output(std::min(iySw,<sp/>iHeight),</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ixNw)<sp/>+<sp/>sw<sp/>*<sp/>ograd;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output(std::min(iySw,<sp/>iHeight),<sp/>std::min(ixNe,<sp/>iWidth))<sp/>=<sp/>output(</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min(iySw,<sp/>iHeight),<sp/>std::min(ixNe,<sp/>iWidth))<sp/>+<sp/>se<sp/>*<sp/>ograd;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inSize;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>depth;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>scale;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inputWidth;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inputHeight;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outputWidth;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outputHeight;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>OutputDataType<sp/>delta;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>OutputDataType<sp/>outputParameter;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inputDepth;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>arma::cube<sp/>inputTemp;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>arma::cube<sp/>outputTemp;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>arma::mat<sp/>location;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>MeanPoolingRule<sp/>pooling;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>std::vector&lt;arma::mat&gt;<sp/>locationParameter;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>arma::cube<sp/>gTemp;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deterministic;</highlight></codeline>
<codeline lineno="436"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>GlimpseLayer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;glimpse_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/glimpse.hpp"/>
  </compounddef>
</doxygen>
