.TH "RegressionDistribution" 3 "Sun Jun 20 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RegressionDistribution \- A class that represents a univariate conditionally Gaussian distribution\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRegressionDistribution\fP ()"
.br
.RI "Default constructor, which creates a Gaussian with zero dimension\&. "
.ti -1c
.RI "\fBRegressionDistribution\fP (const arma::mat &predictors, const arma::rowvec &responses)"
.br
.RI "Create a Conditional Gaussian distribution with conditional mean function obtained by running RegressionFunction on predictors, responses\&. "
.ti -1c
.RI "\fBmlpack_deprecated\fP \fBRegressionDistribution\fP (const arma::mat &predictors, const arma::vec &responses)"
.br
.RI "Create a Conditional Gaussian distribution with conditional mean function obtained by running RegressionFunction on predictors, responses\&. "
.ti -1c
.RI "size_t \fBDimensionality\fP () const"
.br
.RI "Return the dimensionality\&. "
.ti -1c
.RI "\fBGaussianDistribution\fP & \fBErr\fP ()"
.br
.RI "Modify error distribution\&. "
.ti -1c
.RI "const \fBGaussianDistribution\fP & \fBErr\fP () const"
.br
.RI "Return error distribution\&. "
.ti -1c
.RI "double \fBLogProbability\fP (const arma::vec &observation) const"
.br
.RI "Evaluate log probability density function of given observation\&. "
.ti -1c
.RI "const arma::vec & \fBParameters\fP () const"
.br
.RI "Return the parameters (the b vector)\&. "
.ti -1c
.RI "void \fBPredict\fP (const arma::mat &points, arma::rowvec &predictions) const"
.br
.RI "Calculate y_i for each data point in points\&. "
.ti -1c
.RI "\fBmlpack_deprecated\fP void \fBPredict\fP (const arma::mat &points, arma::vec &predictions) const"
.br
.RI "Calculate y_i for each data point in points\&. "
.ti -1c
.RI "double \fBProbability\fP (const arma::vec &observation) const"
.br
.RI "Evaluate probability density function of given observation\&. "
.ti -1c
.RI "\fBregression::LinearRegression\fP & \fBRf\fP ()"
.br
.RI "Modify regression function\&. "
.ti -1c
.RI "const \fBregression::LinearRegression\fP & \fBRf\fP () const"
.br
.RI "Return regression function\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the distribution\&. "
.ti -1c
.RI "void \fBTrain\fP (const arma::mat &observations)"
.br
.RI "Estimate the Gaussian distribution directly from the given observations\&. "
.ti -1c
.RI "void \fBTrain\fP (const arma::mat &observations, const arma::rowvec &weights)"
.br
.RI "Estimate parameters using provided observation weights\&. "
.ti -1c
.RI "\fBmlpack_deprecated\fP void \fBTrain\fP (const arma::mat &observations, const arma::vec &weights)"
.br
.RI "Estimate parameters using provided observation weights\&. "
.in -1c
.SH "Detailed Description"
.PP 
A class that represents a univariate conditionally Gaussian distribution\&. 

Can be used as an emission distribution with the hmm class to implement HMM regression (HMMR) as described in https://www.ima.umn.edu/preprints/January1994/1195.pdf The hmm observations should have the dependent variable in the first row, with the independent variables in the other rows\&. 
.PP
Definition at line 31 of file regression_distribution\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBRegressionDistribution\fP ()\fC [inline]\fP"

.PP
Default constructor, which creates a Gaussian with zero dimension\&. 
.PP
Definition at line 43 of file regression_distribution\&.hpp\&.
.SS "\fBmlpack_deprecated\fP \fBRegressionDistribution\fP (const arma::mat & predictors, const arma::vec & responses)\fC [inline]\fP"

.PP
Create a Conditional Gaussian distribution with conditional mean function obtained by running RegressionFunction on predictors, responses\&. 
.PP
\fBParameters\fP
.RS 4
\fIpredictors\fP Matrix of predictors (X)\&. 
.br
\fIresponses\fP Vector of responses (y)\&. 
.RE
.PP

.PP
Definition at line 52 of file regression_distribution\&.hpp\&.
.SS "\fBRegressionDistribution\fP (const arma::mat & predictors, const arma::rowvec & responses)\fC [inline]\fP"

.PP
Create a Conditional Gaussian distribution with conditional mean function obtained by running RegressionFunction on predictors, responses\&. 
.PP
\fBParameters\fP
.RS 4
\fIpredictors\fP Matrix of predictors (X)\&. 
.br
\fIresponses\fP Vector of responses (y)\&. 
.RE
.PP

.PP
Definition at line 64 of file regression_distribution\&.hpp\&.
.PP
References LinearRegression::ComputeError(), GaussianDistribution::Covariance(), and LinearRegression::Train()\&.
.SH "Member Function Documentation"
.PP 
.SS "size_t Dimensionality () const\fC [inline]\fP"

.PP
Return the dimensionality\&. 
.PP
Definition at line 156 of file regression_distribution\&.hpp\&.
.PP
References LinearRegression::Parameters()\&.
.SS "\fBGaussianDistribution\fP& Err ()\fC [inline]\fP"

.PP
Modify error distribution\&. 
.PP
Definition at line 92 of file regression_distribution\&.hpp\&.
.SS "const \fBGaussianDistribution\fP& Err () const\fC [inline]\fP"

.PP
Return error distribution\&. 
.PP
Definition at line 90 of file regression_distribution\&.hpp\&.
.SS "double LogProbability (const arma::vec & observation) const\fC [inline]\fP"

.PP
Evaluate log probability density function of given observation\&. 
.PP
\fBParameters\fP
.RS 4
\fIobservation\fP Point to evaluate log probability at\&. 
.RE
.PP

.PP
Definition at line 130 of file regression_distribution\&.hpp\&.
.PP
References RegressionDistribution::Probability()\&.
.SS "const arma::vec& Parameters () const\fC [inline]\fP"

.PP
Return the parameters (the b vector)\&. 
.PP
Definition at line 153 of file regression_distribution\&.hpp\&.
.PP
References LinearRegression::Parameters()\&.
.SS "void Predict (const arma::mat & points, arma::rowvec & predictions) const"

.PP
Calculate y_i for each data point in points\&. 
.PP
\fBParameters\fP
.RS 4
\fIpoints\fP The data points to calculate with\&. 
.br
\fIpredictions\fP Y, will contain calculated values on completion\&. 
.RE
.PP

.SS "\fBmlpack_deprecated\fP void Predict (const arma::mat & points, arma::vec & predictions) const"

.PP
Calculate y_i for each data point in points\&. 
.PP
\fBParameters\fP
.RS 4
\fIpoints\fP The data points to calculate with\&. 
.br
\fIpredictions\fP Y, will contain calculated values on completion\&. 
.RE
.PP

.SS "double Probability (const arma::vec & observation) const"

.PP
Evaluate probability density function of given observation\&. 
.PP
\fBParameters\fP
.RS 4
\fIobservation\fP Point to evaluate probability at\&. 
.RE
.PP

.PP
Referenced by RegressionDistribution::LogProbability()\&.
.SS "\fBregression::LinearRegression\fP& Rf ()\fC [inline]\fP"

.PP
Modify regression function\&. 
.PP
Definition at line 87 of file regression_distribution\&.hpp\&.
.SS "const \fBregression::LinearRegression\fP& Rf () const\fC [inline]\fP"

.PP
Return regression function\&. 
.PP
Definition at line 85 of file regression_distribution\&.hpp\&.
.SS "void serialize (Archive & ar, const uint32_t)\fC [inline]\fP"

.PP
Serialize the distribution\&. 
.PP
Definition at line 78 of file regression_distribution\&.hpp\&.
.SS "void Train (const arma::mat & observations)"

.PP
Estimate the Gaussian distribution directly from the given observations\&. 
.PP
\fBParameters\fP
.RS 4
\fIobservations\fP List of observations\&. 
.RE
.PP

.SS "void Train (const arma::mat & observations, const arma::rowvec & weights)"

.PP
Estimate parameters using provided observation weights\&. 
.PP
\fBParameters\fP
.RS 4
\fIobservations\fP List of observations\&. 
.br
\fIweights\fP Probability that given observation is from distribution\&. 
.RE
.PP

.SS "\fBmlpack_deprecated\fP void Train (const arma::mat & observations, const arma::vec & weights)"

.PP
Estimate parameters using provided observation weights\&. 
.PP
\fBParameters\fP
.RS 4
\fIobservations\fP List of observations\&. 
.br
\fIweights\fP Probability that given observation is from distribution\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
